<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Network capture with tcpdump</title>
      <link href="/2024/01/25/ms/network/2/"/>
      <url>/2024/01/25/ms/network/2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/network/tcpdump/tcpdump.jpg"><br>tcpdump的简单实用方式和参数设置。</p><span id="more"></span><h2 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h2><p>基本使用，直接tcpdump</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">12:12:10.420687 IP v-luoju2.internal.cloudapp.net.52708 &gt; 20.42.0.241.5831: UDP, length 241</span><br><span class="line">12:12:10.420727 IP 20.42.0.241.5831 &gt; v-luoju2.internal.cloudapp.net.52708: UDP, length 38</span><br><span class="line">12:12:10.420800 IP 20.42.0.241.5831 &gt; v-luoju2.internal.cloudapp.net.52708: UDP, length 38</span><br><span class="line">12:12:10.420826 IP v-luoju2.internal.cloudapp.net.52708 &gt; 20.42.0.241.5831: UDP, length 241</span><br><span class="line">12:12:10.420891 IP 20.42.0.241.5831 &gt; v-luoju2.internal.cloudapp.net.52708: UDP, length 38</span><br><span class="line">12:12:10.420902 IP v-luoju2.internal.cloudapp.net.52708 &gt; 20.42.0.241.5831: UDP, length 241</span><br><span class="line">12:12:10.420990 IP 20.42.0.241.5831 &gt; v-luoju2.internal.cloudapp.net.52708: UDP, length 56</span><br><span class="line">12:12:10.421037 IP v-luoju2.internal.cloudapp.net.52708 &gt; 20.42.0.241.5831: UDP, length 241</span><br><span class="line">12:12:10.421079 IP 20.42.0.241.5831 &gt; v-luoju2.internal.cloudapp.net.52708: UDP, length 38</span><br><span class="line">12:12:10.421119 IP 20.42.0.241.5831 &gt; v-luoju2.internal.cloudapp.net.52708: UDP, length 38</span><br><span class="line">12:12:10.421125 IP v-luoju2.internal.cloudapp.net.52708 &gt; 20.42.0.241.5831: UDP, length 43</span><br><span class="line">12:12:10.421177 IP v-luoju2.internal.cloudapp.net.52708 &gt; 20.42.0.241.5831: UDP, length 335</span><br><span class="line">12:12:10.421261 IP 20.42.0.241.5831 &gt; v-luoju2.internal.cloudapp.net.52708: UDP, length 38</span><br><span class="line">47013 packets captured</span><br><span class="line">47013 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><p>解析：<br>第一列：timestamp<br>第二列：网络协议<br>第三列：发送方的ip+端口号<br>第四列：箭头表示数据流向<br>第五列：接收方ip+端口号<br>第六列：数据包内容，包括flag标识符，seq号，ack号，win窗口，数据长度length，其中[P.]表示PUSH标志位为1。</p><p><img src="/images/network/tcpdump/1.png"></p><h2 id="基于IP地址过滤"><a href="#基于IP地址过滤" class="headerlink" title="基于IP地址过滤"></a>基于IP地址过滤</h2><p>tcpdump host 220.181.38.148</p><ul><li>案例一：截获特定主机 220.181.38.148 的主机收到的和发出的所有数据包。</li></ul><p>解释：host 220.181.38.148，指明220.181.38.148是一台主机，如果非常明确关心的是哪个主机的收发报文，那么就可以直接过滤这个主机的数据包。host后面加主机的IP地址，就可以抓取这个主机的所有数据包，其他主机的过滤包就会被过滤掉。</p><ul><li>案例二：获取目标地址是 220.181.38.148 的报文 tcpdump dst 220.181.38.148。</li></ul><p>解释：dst指的是目标地址；这个是确定传输方向的关键字,src 源；dst 目的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">源 tcpdump src ipaddress</span><br><span class="line">目标 tcpdump dst ipaddress</span><br><span class="line">包含 tcpdump host ipaddress</span><br></pre></td></tr></table></figure><h2 id="基于网段过滤"><a href="#基于网段过滤" class="headerlink" title="基于网段过滤"></a>基于网段过滤</h2><p>基于网段过滤：net</p><ul><li>案例三：截取特定网段的 192.168.10.0&#x2F;24 的主机收到的和发出的所有的数据包。tcpdump net 192.168.10.0&#x2F;24，指明 192.168.10.0&#x2F;24 网段，可以直接过滤这个网段的数据包，网段同样可以再细分为源网段和目标网段。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tcp src net 192.168</span><br><span class="line">tcp dst net 192.168</span><br></pre></td></tr></table></figure><h2 id="基于端口过滤"><a href="#基于端口过滤" class="headerlink" title="基于端口过滤"></a>基于端口过滤</h2><p>基于端口过滤：port</p><ul><li>案例四：获取特定端口，比如http，使用以下命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump tcp port 80</span><br></pre></td></tr></table></figure><p>解释：port 80指明端口80，只会抓取这个端口80的数据包；加上具体某个协议的端口，就可以更加精准的捕获对应的业务的数据的报文了。如上，就会只抓取TCP协议的80端口的数据包，也就是http协议的数据报文。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump src port 80 / tcpdump dst port 80</span><br></pre></td></tr></table></figure><p>如果你想要同时指定两个端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump port 80 or port 22 / tcpdump port 80 or 22</span><br></pre></td></tr></table></figure><p>抓取端口的范围，可以指定一个端口段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tcpdump portrange 8000-8080</span><br><span class="line">tcpdump src portrange 8000-8080</span><br><span class="line">tcpdump dst portrange 8000-8080</span><br></pre></td></tr></table></figure><p>对于一些常见的协议，可以直接使用协议名，而不用具体的端口号：比如 http&#x3D;&#x3D;80, https&#x3D;&#x3D;443</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump tcp port http</span><br></pre></td></tr></table></figure><h2 id="基于协议过滤"><a href="#基于协议过滤" class="headerlink" title="基于协议过滤"></a>基于协议过滤</h2><p>基于协议过滤：protocal</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump dns/tcp/icmp</span><br></pre></td></tr></table></figure><p>解释：标明要抓取的协议报文、一般常用的比如ip、ip6、arp、icmp、tcp、udp等</p><p>注意：http、dns、https、ssh等应用测的协议，不能直接写，需要使用port的方式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump port http / tcpdump port 53(DNS)</span><br></pre></td></tr></table></figure><h2 id="常用指令和参数"><a href="#常用指令和参数" class="headerlink" title="常用指令和参数"></a>常用指令和参数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -h -- 查看所有参数</span><br></pre></td></tr></table></figure><ol><li>-i # 监听指定网络接口</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i eth0</span><br></pre></td></tr></table></figure><p>默认监听在第一块网卡上，监听所有经过此网卡通过的数据包；但是我们可能关心的数据并不是 eth0 的接口，这时就需要指定端口进行数据包的捕获。</p><p>在 tcpdump 后面加一个 -i 的参数，后面跟具体需要捕获的接口名称，就可以抓取经过这个具体接口的所有数据包。监听所有的网卡接口、用来查看是否有网络流量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i any</span><br></pre></td></tr></table></figure><ol><li>-w # 将捕获到的信息保存到文件中，且不分析和打印在屏幕</li></ol><p>报文打印在shel里会太多且不方便查看，我们可以保存成文件;然后通过xftp导出到本地，可以详细查看。</p><p>扩展:导出的文件可以设置为cap或者pcap的格式，可以直接用wireshark工具打开;可以用wireshark工具分析报文具体信息!</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i eth0 -w tt</span><br></pre></td></tr></table></figure><ol><li>-r # 从文件中读取数据，读取后，使用上述的过滤条件进行分析</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -r tt.pcap</span><br></pre></td></tr></table></figure><ol><li>n: 不把ip转化成域名，直接显示ip，避免执行 DNS lookups 的过程，速度会快很多</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ tcpdump -n</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">08:48:09.751448 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 2060068944:2060069132, ack 70654010, win 501, length 188</span><br><span class="line">08:48:09.751845 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 188:360, ack 1, win 501, length 172</span><br><span class="line">08:48:09.751941 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 360:508, ack 1, win 501, length 148</span><br><span class="line">08:48:09.752005 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 508:656, ack 1, win 501, length 148</span><br><span class="line">08:48:09.752065 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 656:804, ack 1, win 501, length 148</span><br><span class="line">08:48:09.752124 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 804:952, ack 1, win 501, length 148</span><br><span class="line">08:48:09.752193 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 952:1100, ack 1, win 501, length 148</span><br><span class="line">08:48:09.752249 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 1100:1248, ack 1, win 501, length 148</span><br><span class="line">08:48:09.752306 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 1248:1396, ack 1, win 501, length 148</span><br></pre></td></tr></table></figure><ol><li>nn: 不把协议和端口号转化成名字，速度也会快很多</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -nn</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">08:52:06.771370 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 2060470828:2060471016, ack 70660402, win 501, length 188</span><br><span class="line">08:52:06.771534 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 188:360, ack 1, win 501, length 172</span><br><span class="line">08:52:06.771608 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 360:508, ack 1, win 501, length 148</span><br><span class="line">08:52:06.771670 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 508:656, ack 1, win 501, length 148</span><br><span class="line">08:52:06.771742 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 656:804, ack 1, win 501, length 148</span><br><span class="line">08:52:06.771813 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 804:952, ack 1, win 501, length 148</span><br><span class="line">08:52:06.771874 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 952:1100, ack 1, win 501, length 148</span><br><span class="line">08:52:06.771934 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 1100:1248, ack 1, win 501, length 148</span><br><span class="line">08:52:06.771994 IP 10.0.0.4.50000 &gt; 167.220.255.21.36702: Flags [P.], seq 1248:1396, ack 1, win 501, length 148</span><br><span class="line">08:52:06.966020 IP 10.0.0.4.54504 &gt; 51.12.29.9.443: Flags [.], ack 631387374, win 501, options [nop,nop,TS val 2106809902 ecr 3869164649], length 0</span><br><span class="line">08:52:06.966779 IP 51.12.29.9.443 &gt; 10.0.0.4.54504: Flags [.], ack 1, win 501, options [nop,nop,TS val 3869179753 ecr 2106492796], length 0</span><br></pre></td></tr></table></figure><ol><li>N: 不打印出host 的域名部分，比如,如果设置了此选现，tcpdump 将会打印’nic’而不是’nic.ddn.mi</li><li>t: 在每行的输出中不输出时间</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ tcpdump -t</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], seq 46532982:46533170, ack 3392826886, win 501, length 188</span><br><span class="line">IP v-luoju1oy27jz.internal.cloudapp.net.59259 &gt; 168.63.129.16.domain: 29704+ PTR? 115.81.195.183.in-addr.arpa. (45)</span><br><span class="line">IP ..17345 &gt; v-luoju1oy27jz.internal.cloudapp.net.50000: Flags [.], ack 0, win 514, length 0</span><br><span class="line">IP ..17345 &gt; v-luoju1oy27jz.internal.cloudapp.net.50000: Flags [.], ack 188, win 513, length 0</span><br><span class="line">IP v-luoju1oy27jz.internal.cloudapp.net.60086 &gt; 168.63.129.16.http: Flags [S], seq 2081735660, win 64240, options [mss 1460,sackOK,TS val 2501903692 ecr 0,nop,wscale 7], length 0</span><br><span class="line">IP 168.63.129.16.http &gt; v-luoju1oy27jz.internal.cloudapp.net.60086: Flags [S.], seq 1018598414, ack 2081735661, win 65535, options [mss 1460,nop,wscale 8,sackOK,TS val 316977032 ecr 2501903692], length 0</span><br></pre></td></tr></table></figure><ol><li><p>-tt: 在每行的输出中会输出时间戳</p><p> -ttt: 输出每两行打印的时间间隔(以毫秒为单位)</p><p> -tttt:在每行打印的时间戳之前添加日期的打印(此种选项，输出的时间最直观)</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -tttt</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">2024-01-25 13:35:38.636410 IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], seq 46623918:46624106, ack 3392829106, win 501, length 188</span><br><span class="line">2024-01-25 13:35:38.636860 IP v-luoju1oy27jz.internal.cloudapp.net.44083 &gt; 168.63.129.16.domain: 7722+ PTR? 115.81.195.183.in-addr.arpa. (45)</span><br><span class="line">2024-01-25 13:35:38.678001 IP v-luoju1oy27jz.internal.cloudapp.net.55398 &gt; 51.12.29.9.https: Flags [.], ack 473408981, win 501, options [nop,nop,TS val 2123821614 ecr 161389079], length 0</span><br><span class="line">2024-01-25 13:35:38.678027 IP v-luoju1oy27jz.internal.cloudapp.net.36748 &gt; 51.12.29.1.https: Flags [.], ack 3301730396, win 501, options [nop,nop,TS val 2640158394 ecr 1929410116], length 0</span><br><span class="line">2024-01-25 13:35:38.678279 IP 51.12.29.1.https &gt; v-luoju1oy27jz.internal.cloudapp.net.36748: Flags [.], ack 1, win 501, options [nop,nop,TS val 1929425220 ecr 2640082846], length 0</span><br><span class="line">2024-01-25 13:35:38.678813 IP 51.12.29.9.https &gt; v-luoju1oy27jz.internal.cloudapp.net.55398: Flags [.], ack 1, win 501, options [nop,nop,TS val 161404183 ecr 2123746095], length 0</span><br><span class="line">2024-01-25 13:35:38.881010 IP ..17345 &gt; v-luoju1oy27jz.internal.cloudapp.net.50000: Flags [.], ack 188, win 517, length 0</span><br></pre></td></tr></table></figure><ol><li>-v: 产生详细的输出.比如包的TTL，id标识，数据包长度，以及IP包的一些选项。同时它还会打开一些附加的包完整性检测，比如对IP或ICMP包头部的校验和。<br>-vv: 产生比-v更详细的输出.比如NFS回应包中的附加域将会被打印，SMB数据包也会被完全解码。<br>-vvv: 产生比-vv更详细的输出。比如 telent 时所使用的SB,SE 选项将会被打印，如果telnet同时使用的是图形界面，其相应的图形选项将会以16进制的方式打印出来</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -v</span><br><span class="line">tcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">13:38:29.267849 IP (tos 0x10, ttl 64, id 38910, offset 0, flags [DF], proto TCP (6), length 164)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x13d1 (incorrect -&gt; 0xeb1f), seq 46685214:46685338, ack 3392830510, win 501, length 124</span><br><span class="line">13:38:29.267931 IP (tos 0x10, ttl 64, id 38911, offset 0, flags [DF], proto TCP (6), length 172)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x13d9 (incorrect -&gt; 0xe6b9), seq 124:256, ack 1, win 501, length 132</span><br><span class="line">13:38:29.268210 IP (tos 0x0, ttl 64, id 22556, offset 0, flags [DF], proto UDP (17), length 73)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.42287 &gt; 168.63.129.16.domain: 9667+ PTR? 115.81.195.183.in-addr.arpa. (45)</span><br><span class="line">13:38:29.269971 IP (tos 0x0, ttl 128, id 11181, offset 0, flags [none], proto UDP (17), length 86)</span><br><span class="line">    168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.42287: 9667 1/0/0 115.81.195.183.in-addr.arpa. PTR . (58)</span><br><span class="line">13:38:29.270065 IP (tos 0x0, ttl 64, id 56446, offset 0, flags [DF], proto UDP (17), length 67)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.49620 &gt; 168.63.129.16.domain: 54628+ PTR? 4.0.0.10.in-addr.arpa. (39)</span><br><span class="line">13:38:29.272292 IP (tos 0x0, ttl 128, id 11182, offset 0, flags [none], proto UDP (17), length 117)</span><br><span class="line">    168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.49620: 54628 1/0/0 4.0.0.10.in-addr.arpa. PTR v-luoju1oy27jz.internal.cloudapp.net. (89)</span><br><span class="line">13:38:29.272461 IP (tos 0x10, ttl 64, id 38912, offset 0, flags [DF], proto TCP (6), length 588)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x1579 (incorrect -&gt; 0x250d), seq 256:804, ack 1, win 501, length 548</span><br><span class="line">13:38:29.272475 IP (tos 0x0, ttl 64, id 53304, offset 0, flags [DF], proto UDP (17), length 72)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.45835 &gt; 168.63.129.16.domain: 4438+ PTR? 16.129.63.168.in-addr.arpa. (44)</span><br><span class="line">13:38:29.274298 IP (tos 0x0, ttl 128, id 11183, offset 0, flags [none], proto UDP (17), length 158)</span><br><span class="line">    168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.45835: 4438 NXDomain 0/1/0 (130)</span><br><span class="line">13:38:29.274469 IP (tos 0x10, ttl 64, id 38913, offset 0, flags [DF], proto TCP (6), length 1340)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x1869 (incorrect -&gt; 0x5353), seq 804:2104, ack 1, win 501, length 1300</span><br><span class="line">13:38:29.274576 IP (tos 0x10, ttl 64, id 38914, offset 0, flags [DF], proto TCP (6), length 560)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x155d (incorrect -&gt; 0xafbf), seq 2104:2624, ack 1, win 501, length 520</span><br><span class="line">13:38:29.274634 IP (tos 0x10, ttl 64, id 38915, offset 0, flags [DF], proto TCP (6), length 324)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x1471 (incorrect -&gt; 0x5175), seq 2624:2908, ack 1, win 501, length 284</span><br><span class="line">13:38:29.274691 IP (tos 0x10, ttl 64, id 38916, offset 0, flags [DF], proto TCP (6), length 324)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x1471 (incorrect -&gt; 0x50a5), seq 2908:3192, ack 1, win 501, length 284</span><br><span class="line">13:38:29.274746 IP (tos 0x10, ttl 64, id 38917, offset 0, flags [DF], proto TCP (6), length 324)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x1471 (incorrect -&gt; 0x709d), seq 3192:3476, ack 1, win 501, length 284</span><br><span class="line">13:38:29.274802 IP (tos 0x10, ttl 64, id 38918, offset 0, flags [DF], proto TCP (6), length 324)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], cksum 0x1471 (incorrect -&gt; 0x0426), seq 3476:3760, ack 1, win 501, length 284</span><br><span class="line">13:38:29.367340 IP (tos 0x0, ttl 64, id 28574, offset 0, flags [DF], proto TCP (6), length 60)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.43656 &gt; 168.63.129.16.http: Flags [S], cksum 0x3382 (incorrect -&gt; 0xd839), seq 523372354, win 64240, options [mss 1460,sackOK,TS val 2502286095 ecr 0,nop,wscale 7], length 0</span><br><span class="line">13:38:29.367953 IP (tos 0x0, ttl 128, id 11184, offset 0, flags [DF], proto TCP (6), length 60)</span><br><span class="line">    168.63.129.16.http &gt; v-luoju1oy27jz.internal.cloudapp.net.43656: Flags [S.], cksum 0xeda4 (correct), seq 1420425369, ack 523372355, win 65535, options [mss 1460,nop,wscale 8,sackOK,TS val 317359430 ecr 2502286095], length 0</span><br><span class="line">13:38:29.367988 IP (tos 0x0, ttl 64, id 28575, offset 0, flags [DF], proto TCP (6), length 52)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.43656 &gt; 168.63.129.16.http: Flags [.], cksum 0x337a (incorrect -&gt; 0x1a7b), ack 1, win 502, options [nop,nop,TS val 2502286096 ecr 317359430], length 0</span><br><span class="line">13:38:29.368032 IP (tos 0x0, ttl 64, id 28576, offset 0, flags [DF], proto TCP (6), length 251)</span><br><span class="line">    v-luoju1oy27jz.internal.cloudapp.net.43656 &gt; 168.63.129.16.http: Flags [P.], cksum 0x3441 (incorrect -&gt; 0x2250), seq 1:200, ack 1, win 502, options [nop,nop,TS val 2502286096 ecr 317359430], length 199: HTTP, length: 199</span><br><span class="line">GET /machine/?comp=goalstate HTTP/1.1</span><br><span class="line">Host: 168.63.129.16</span><br><span class="line">Accept-Encoding: identity</span><br><span class="line">x-ms-agent-name: WALinuxAgent</span><br><span class="line">x-ms-version: 2012-11-30</span><br><span class="line">Connection: close</span><br><span class="line">User-Agent: WALinuxAgent/2.9.1.1</span><br></pre></td></tr></table></figure><ol><li>#指定收取数据包的次数，即在收到指定数量的数据包后退出tcpdump，停止抓包tcpdump -c 20 -w tt.pcap<br>解释:抓满20个报文之后，就停止tcpdump抓包。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -i eth0 -c 20 -w tt.cap</span><br><span class="line">tcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">20 packets captured</span><br><span class="line">53 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><ol><li><p>-C #与 -w FILE 选项配合使用。该选项使得 tcpdump 在把原始数据包直接保存到文件中之前，检查此文件大小是否超过 file-size。如果超过了，将关闭此文件，另创一个文件继续保存原始数据包。新创建的文件名与 -w 选项指定的文件名一致,但文件名后多了一个数字，该数字会从1开始随着新创建文件的增多而增加。file-size的单位是百万字节(这里指1,000,000个字节,并非1,048,576个字节)tcpdump -C 1-W 3 -w abc 指定一个单位后(1MB)就换文件，最多写3个文件，名字是abc0,abc1,abc2</p></li><li><p>-Q：选择是入方向还是出方向的数据包，可选项有：in,out, inout，也可以使用 –direction&#x3D;[direction]</p><p>–tcpdump -Q in<br>–tcpdump -Q out</p><p>–tcpdump -einout<br>-q：简洁地打印输出。即打印很少的协议相关信息,从而输出行都比较简短,</p><p>-D：显示所有可用网络接口的列表</p><p>-L：列出网络接口的已知数据链路</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -q</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">13:49:46.864371 IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: tcp 188</span><br><span class="line">13:49:46.864713 IP v-luoju1oy27jz.internal.cloudapp.net.53149 &gt; 168.63.129.16.domain: UDP, length 45</span><br><span class="line">13:49:46.866503 IP 168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.53149: UDP, length 58</span><br><span class="line">13:49:46.866590 IP v-luoju1oy27jz.internal.cloudapp.net.54910 &gt; 168.63.129.16.domain: UDP, length 39</span><br><span class="line">13:49:46.869639 IP 168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.54910: UDP, length 89</span><br><span class="line">13:49:46.869869 IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: tcp 116</span><br><span class="line">13:49:46.869874 IP v-luoju1oy27jz.internal.cloudapp.net.43567 &gt; 168.63.129.16.domain: UDP, length 44</span><br><span class="line">13:49:46.871508 IP 168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.43567: UDP, length 130</span><br><span class="line">13:49:46.871669 IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: tcp 524</span><br></pre></td></tr></table></figure><ol><li>-s #指定每个包捕获的长度、单位是 byte，而不是默认的262144bytes;如果超过了设定的大小限制，包就会被阶段而在打印行出现lprotol这种标识，这个proto就是被截断的报文的协议名字。但是抓取len越长，包的处理时间越长，并且会减少tcpdump可缓存的数据包的数量，从而会导致数据包的丢失，所以在能抓取我们想要的包的前提下，抓取长度越小越好(-s0 使用默认长度262144)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -s 2048</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 2048 bytes</span><br><span class="line">13:53:22.004342 IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], seq 46858270:46858458, ack 3392837562, win 501, length 188</span><br><span class="line">13:53:22.004663 IP v-luoju1oy27jz.internal.cloudapp.net.41587 &gt; 168.63.129.16.domain: 48436+ PTR? 115.81.195.183.in-addr.arpa. (45)</span><br><span class="line">13:53:22.006269 IP 168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.41587: 48436 1/0/0 PTR . (58)</span><br><span class="line">13:53:22.006389 IP v-luoju1oy27jz.internal.cloudapp.net.52091 &gt; 168.63.129.16.domain: 54914+ PTR? 4.0.0.10.in-addr.arpa. (39)</span><br><span class="line">13:53:22.008523 IP 168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.52091: 54914 1/0/0 PTR v-luoju1oy27jz.internal.cloudapp.net. (89)</span><br><span class="line">13:53:22.008704 IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], seq 188:368, ack 1, win 501, length 180</span><br><span class="line">13:53:22.008704 IP v-luoju1oy27jz.internal.cloudapp.net.50298 &gt; 168.63.129.16.domain: 36001+ PTR? 16.129.63.168.in-addr.arpa. (44)</span><br><span class="line">13:53:22.010620 IP 168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.50298: 36001 NXDomain 0/1/0 (130)</span><br></pre></td></tr></table></figure><ol><li><p>A:#以ASCI格式打印出所有的分组并且读取此文件，这样可以使读取更加简单，方便使用 grep 等工具解析输出内容</p><p> –tcpdump -A -r tt2<br> –tcpdump -A | grep baidu<br> -X表示同时使用十六进制和 ASCI 字符串打印报文的全部数据。这-X和-A两个参数不能一起使用</p><p> –tcpdump -X -r tt2</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -A | grep baidu</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">13:56:49.207541 IP v-luoju1oy27jz.internal.cloudapp.net.56892 &gt; 168.63.129.16.domain: 20410+ A? www.baidu.com. (31)</span><br><span class="line">....?...&lt;.5.&#x27;3.O............www.baidu.com.....</span><br><span class="line">13:56:49.207552 IP v-luoju1oy27jz.internal.cloudapp.net.56892 &gt; 168.63.129.16.domain: 29351+ AAAA? www.baidu.com. (31)</span><br><span class="line">....?...&lt;.5.&#x27;3.r............www.baidu.com.....</span><br><span class="line">....5.&lt;.\..r............www.baidu.com..................www.a.shifen...+...........www.wshifen..</span><br><span class="line">....5.&lt;.|..O............www.baidu.com..................www.a.shifen...+...........www.wshifen...F.......+..h.X&#123;.F.......+..h.XM</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Set-Cookie: BDORZ=27315; max-age=86400; domain=.baidu.com; path=/</span><br><span class="line">&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta http-equiv=content-type content=text/html;charset=utf-8&gt;&lt;meta http-equiv=X-UA-Compatible content=IE=Edge&gt;&lt;meta content=always name=referrer&gt;&lt;link rel=stylesheet type=text/css href=http://s1.bdstatic.com/r/www/cache/bdorz/baidu.min.css&gt;&lt;title&gt;...........................&lt;/title&gt;&lt;/head&gt; &lt;body link=#0000cc&gt; &lt;div id=wrapper&gt; &lt;div id=head&gt; &lt;div class=head_wrapper&gt; &lt;div class=s_form&gt; &lt;div class=s_form_wrapper&gt; &lt;div id=lg&gt; &lt;img hidefocus=true src=//www.baidu.com/img/bd_logo1.png width=270 height=129&gt; &lt;/div&gt; &lt;form id=form name=f action=//www.baidu.com/s class=fm&gt; &lt;input type=hidden name=bdorz_come value=1&gt; &lt;input type=hidden name=ie value=utf-8&gt; &lt;input type=hidden name=f value=8&gt; &lt;input type=hidden name=rsv_bp value=1&gt; &lt;input type=hidden name=rsv_idx value=1&gt; &lt;input type=hidden name=tn value=baidu&gt;&lt;span class=&quot;bg s_ipt_wr&quot;&gt;&lt;input id=kw name=wd class=s_ipt value maxlength=255 autocomplete=off autofocus&gt;&lt;/span&gt;&lt;span class=&quot;bg s_btn_wr&quot;&gt;&lt;input type=submit id=su value=............ class</span><br><span class="line">..t.....=&quot;bg s_btn&quot;&gt;&lt;/span&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=u1&gt; &lt;a href=http://news.baidu.com name=tj_trnews class=mnav&gt;......&lt;/a&gt; &lt;a href=http://www.hao123.com name=tj_trhao123 class=mnav&gt;hao123&lt;/a&gt; &lt;a href=http://map.baidu.com name=tj_trmap class=mnav&gt;......&lt;/a&gt; &lt;a href=http://v.baidu.com name=tj_trvideo class=mnav&gt;......&lt;/a&gt; &lt;a href=http://tieba.baidu.com name=tj_trtieba class=mnav&gt;......&lt;/a&gt; &lt;noscript&gt; &lt;a href=http://www.baidu.com/bdorz/login.gif?login&amp;amp;tpl=mn&amp;amp;u=http%3A%2F%2Fwww.baidu.com%2f%3fbdorz_come%3d1 name=tj_login class=lb&gt;......&lt;/a&gt; &lt;/noscript&gt; &lt;script&gt;document.write(&#x27;&lt;a href=&quot;http://www.baidu.com/bdorz/login.gif?login&amp;tpl=mn&amp;u=&#x27;+ encodeURIComponent(window.location.href+ (window.location.search === &quot;&quot; ? &quot;?&quot; : &quot;&amp;&quot;)+ &quot;bdorz_come=1&quot;)+ &#x27;&quot; name=&quot;tj_login&quot; class=&quot;lb&quot;&gt;......&lt;/a&gt;&#x27;);&lt;/script&gt; &lt;a href=//www.baidu.com/more/ name=tj_briicon class=bri style=&quot;display: block;&quot;&gt;............&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=ftCon&gt; &lt;div id=ftConw&gt; &lt;p id=lh&gt; &lt;a href=http://home.baidu.com&gt;............&lt;/a&gt; &lt;a href=http://ir.baidu.com&gt;About Baidu&lt;/a&gt; &lt;/p&gt; &lt;p id=cp&gt;&amp;copy;2017&amp;nbsp;Baidu&amp;nbsp;&lt;a href=http://www.baidu.com/duty/&gt;.....................&lt;/a&gt;&amp;nbsp; &lt;a href=http://jianyi.baidu.com/ class=cp-feedback&gt;............&lt;/a&gt;&amp;nbsp;...ICP...030173...&amp;nbsp; &lt;img src=//www.baidu.com/img/gs.gif&gt; &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;</span><br><span class="line">^C385 packets captured</span><br><span class="line">388 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br></pre></td></tr></table></figure><ol><li>-e:#在输出行打印出数据链路层的头部信息。默认情况下 tcpdump 不会显示数据链路层信息，使用 -e 选项可以显示源和目的 MAC 地址，以及 VLAN tag 信息。例如:–tcpdump -e -r tt2</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">14:01:01.408112 60:45:bd:74:e8:60 (oui Unknown) &gt; 12:34:56:78:9a:bc (oui Unknown), ethertype IPv4 (0x0800), length 242: v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], seq 46898582:46898770, ack 3392842102, win 501, length 188</span><br><span class="line">14:01:01.408478 60:45:bd:74:e8:60 (oui Unknown) &gt; 12:34:56:78:9a:bc (oui Unknown), ethertype IPv4 (0x0800), length 87: v-luoju1oy27jz.internal.cloudapp.net.50418 &gt; 168.63.129.16.domain: 365+ PTR? 115.81.195.183.in-addr.arpa. (45)</span><br><span class="line">14:01:01.410372 12:34:56:78:9a:bc (oui Unknown) &gt; 60:45:bd:74:e8:60 (oui Unknown), ethertype IPv4 (0x0800), length 100: 168.63.129.16.domain &gt; v-luoju1oy27jz.internal.cloudapp.net.50418: 365 1/0/0 PTR . (58)</span><br></pre></td></tr></table></figure><ol><li><p>-F 指定使用哪个文件的过滤表达式抓包。此时命令行上的输入将被忽略，</p><p> –tcpdump -F filter_rule -c 10</p><p> 这种情况适用于将表达式放置在文件中长期维护</p><p> -l #对标准输出进行行缓冲，在需要同时观察抓包打印以及保存抓包记录的时候很有用</p><p> 比如,可通过以下命令组合来达到此抓包时保存到文件的同时查看包的内容。</p><p> –tcpdump -l tee dat</p><p> 这命令是使用tee来把tcpdump 的输出同时放到文件dat和标准输出中tee 功能说明:读取标准输入的数据,并将其内容输出成文件</p><p> –tcpdump -l &gt; dat &amp; tail -f dat</p><p> 这个命令是通过重定向操作’&gt;’</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(azureml_py38) azureuser@v-luoju1:~$ sudo tcpdump -l &gt; dat &amp; tail -f dat</span><br><span class="line">[1] 363618</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">14:04:33.377376 IP v-luoju1oy27jz.internal.cloudapp.net.50000 &gt; ..17345: Flags [P.], seq 46946570:46946758, ack 3392843282, win 501, length 188</span><br><span class="line">14:04:33.656152 IP ..17345 &gt; v-luoju1oy27jz.internal.cloudapp.net.50000: Flags [.], ack 188, win 511, length 0</span><br><span class="line">14:04:34.390930 IP v-luoju1oy27jz.internal.cloudapp.net.58023 &gt; 168.63.129.16.domain: 15134+ PTR? 115.81.195.183.in-addr.arpa. (45)</span><br><span class="line">14:04:34.628944 IP 51.12.29.3.5831 &gt; v-luoju1oy27jz.internal.cloudapp.net.57894: UDP, length 30</span><br><span class="line">14:04:34.629173 IP v-luoju1oy27jz.internal.cloudapp.net.57894 &gt; 51.12.29.3.5831: UDP, length 40</span><br><span class="line">14:04:34.902731 IP v-luoju1oy27jz.internal.cloudapp.net.59014 &gt; 168.63.129.16.http: Flags [S], seq 3575771164, win 64240, options [mss 1460,sackOK,TS val 2503851631 ecr 0,nop,wscale 7], length 0</span><br></pre></td></tr></table></figure><h2 id="在工作中使用的抓包指令"><a href="#在工作中使用的抓包指令" class="headerlink" title="在工作中使用的抓包指令"></a>在工作中使用的抓包指令</h2><p><strong>tcpdump -w &#x2F;tmp&#x2F;trace_%Y_%m_%d_%H_%M_%Samltest.pcap -C 20 -W 1000 -G 300 -K -n &amp; echo “initiated tcp dump”</strong></p><p>参数</p><ul><li>w &#x2F;tmp&#x2F;trace_%Y_%m_%d_%H_%M_%Samltest.pcap: 此选项指定tcpdump将写入捕获的数据包的文件的名称。%Y_%m_%d_%H_%M_%S是一个时间格式字符串，在文件创建时将被当前日期和时间以指定格式替换。在这种情况下，每秒都会创建一个新文件。</li><li>C 20: 此选项设置捕获文件的最大大小为20兆字节。一旦文件达到此大小，tcpdump将创建一个新文件，带有递增的编号。</li><li>W 1000: 此选项设置tcpdump在开始覆盖最老文件之前将创建的最大文件数。在这种情况下，它将保留最多1000个捕获文件。</li><li>G 300: 此选项设置捕获文件的最大持续时间。在300秒（5分钟）之后，tcpdump将创建一个新文件。</li><li>K: 此选项指示tcpdump禁用内核中的数据包处理。相反，数据包处理将在用户空间中完成。这对于内核数据包处理可能干扰捕获或特定调试场景很有用。</li><li>n: 此选项告诉tcpdump不要将IP地址和端口号解析为主机名和服务名称。这可以提高性能，并且在更关注原始数字数据的情况下很有用。</li><li>&amp;: 这会在后台运行tcpdump命令，允许您在tcpdump捕获数据包的同时继续使用终端。</li><li>echo “initiated tcp dump”: 此命令打印消息 “initiated tcp dump” 到终端，通知用户tcpdump已启动。</li></ul><h2 id="外部参考"><a href="#外部参考" class="headerlink" title="外部参考"></a>外部参考</h2><p><a href="https://blog.csdn.net/august5291/article/details/121015216">肝了三天，整了一份全网最全(中文) tcpdump 抓包指南_tcpdump抓包-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/338898809">tcpdump抓包最常用的命令[值得记下来] - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> AI&amp;IOT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> microsoft </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Network capture with wireshark</title>
      <link href="/2024/01/25/ms/network/1/"/>
      <url>/2024/01/25/ms/network/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/Azure/wireshark.png"><br>wireshark的使用方式和注意事项。</p><span id="more"></span><h2 id="Network-capture"><a href="#Network-capture" class="headerlink" title="Network capture"></a>Network capture</h2><p>本文简单介绍wireshark网络抓包的方式和工具。</p><p>附加：深入浅出TCP三次握手</p><p><a href="https://zhuanlan.zhihu.com/p/430799766">https://zhuanlan.zhihu.com/p/430799766</a></p><h2 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h2><p>wireshark是非常流行的网络封包分析软件，简称小鲨鱼，功能十分强大。可以截取各种网络封包，显示网络封包的详细信息。</p><p>常见抓包协议：</p><ol><li>ARP协议</li><li>ICMP协议</li><li>TCP协议</li><li>UDP协议</li><li>DNS协议</li><li>HTTP协议</li></ol><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>查看网络信息</li></ol><p><img src="/images/network/wireshark/1.png"></p><ol><li><p>混杂模式：无论错误或者正确的数据，经过电脑网卡的数据包全部会被抓到。</p><p>   普通模式：直接收正确的数据包，其他抓不到。</p></li></ol><p><img src="/images/network/wireshark/2.png"></p><p><img src="/images/network/wireshark/3.png"></p><pre><code>                                                              TCP的三次握手</code></pre><h2 id="过滤条件"><a href="#过滤条件" class="headerlink" title="过滤条件"></a>过滤条件</h2><p>发送连接请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp.flags.ack == 0 and tcp.flags.syn == 1</span><br></pre></td></tr></table></figure><p>Fin标志：将数据发送给服务器发送完成的标志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp.flags.fin==1</span><br></pre></td></tr></table></figure><p>查询源与目标地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.src==192.168.50.62 and ip.dst==36.150.102.157</span><br></pre></td></tr></table></figure><h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>根据IP地址获取物理地址的一个TCP&#x2F;IP协议</p><p><img src="/images/network/wireshark/4.png"></p><p>向服务器发送请求</p><p><img src="/images/network/wireshark/5.png"></p><p>响应</p><p><img src="/images/network/wireshark/6.png"></p><h2 id="ICMP协议，数据链路层协议"><a href="#ICMP协议，数据链路层协议" class="headerlink" title="ICMP协议，数据链路层协议"></a>ICMP协议，数据链路层协议</h2><p><img src="/images/network/wireshark/7.png"></p><h2 id="TCP握手"><a href="#TCP握手" class="headerlink" title="TCP握手"></a>TCP握手</h2><p><img src="/images/network/wireshark/8.png"></p><p><img src="/images/network/wireshark/9.png"></p><p>第一次握手</p><p><img src="/images/network/wireshark/10.png"></p><p>流量图</p><p><img src="/images/network/wireshark/11.png"></p><p>选择TCP</p><p><img src="/images/network/wireshark/12.png"></p><p><img src="/images/network/wireshark/13.png"></p><h2 id="TCP四次挥手"><a href="#TCP四次挥手" class="headerlink" title="TCP四次挥手"></a>TCP四次挥手</h2><p><img src="/images/network/wireshark/14.png"></p><p><img src="/images/network/wireshark/15.png"></p><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>访问baidu时的三次握手，建立连接</p><p><img src="/images/network/wireshark/16.png"></p><p>发送请求 + 响应，因为发的是Head请求只返回了头部信息</p><p><img src="/images/network/wireshark/17.png"></p><p>断开连接<br><img src="/images/network/wireshark/18.png"></p>]]></content>
      
      
      <categories>
          
          <category> AI&amp;IOT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> microsoft </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S初识与简单部署（二）</title>
      <link href="/2023/09/29/env/k8s/2/"/>
      <url>/2023/09/29/env/k8s/2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/k8s/OIP-C.jpg"><br>目前生产部署Kubernetes集群有三种方式：1.kubeadm搭建（推荐）是⼀个K8s部署⼯具，提供kubeadm init和kubeadm join⽤于快速搭建k8s集群，⽐较推荐。 2.⼆进制包搭建从github下载发⾏版的⼆进制包，⼿动部署每个组件， 组成Kubernetes集群可以了解底层，但是步骤繁琐，坑⽐较多。 3.Minikube搭建：是⼀种轻量化的Kubernetes集群，是k8s社区为了帮助开<br>发者和学习者能够更好学习和体验k8s功能⽽推出的，使⽤个⼈PC的虚拟化环境就快速构建启动单节点k8s。</p><span id="more"></span><h3 id="K8S常⻅集群架构和搭建⽅式"><a href="#K8S常⻅集群架构和搭建⽅式" class="headerlink" title="K8S常⻅集群架构和搭建⽅式"></a>K8S常⻅集群架构和搭建⽅式</h3><p>k8s集群类型有多种</p><ul><li>单master-Node集群<ul><li>⼀主多从，推荐测试环境</li><li>服务器要求：服务器要求⾄少2台2核4G以上的云服务器</li></ul></li><li>多master-Node集群<ul><li>多主多从（⾼可⽤集群），推荐⽣产环境使⽤</li><li>服务器要求：服务器要求⾄少4台2核4G以上的云服务器</li></ul></li><li>单节点k8s集群<ul><li>单⼀个节点</li><li>服务器要求：服务器要求⾄少⼀台2核4G以上的云服务器</li></ul></li></ul><h3 id="基于KubeAdm搭建多节点K8S集群"><a href="#基于KubeAdm搭建多节点K8S集群" class="headerlink" title="基于KubeAdm搭建多节点K8S集群"></a>基于KubeAdm搭建多节点K8S集群</h3><ul><li>安装步骤<ul><li><p>安装docker（主节点+⼯作节点）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先安装yml</span></span><br><span class="line">yum install -y yum-utils device-mapperpersistent-data lvm2</span><br><span class="line"><span class="comment"># 2.设置阿⾥云镜像</span></span><br><span class="line">sudo yum-config-manager --add-repo</span><br><span class="line">http://mirrors.aliyun.com/dockerce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment"># 3.查看可安装的docker版本</span></span><br><span class="line">yum list docker-ce --showduplicates | <span class="built_in">sort</span> -r</span><br><span class="line"><span class="comment">#4. 安装docker</span></span><br><span class="line">配置阿⾥云镜像源（主节点+⼯作节点）</span><br><span class="line">yum -y install docker-ce-20.10.10-3.el7</span><br><span class="line"><span class="comment">#5. 查看docker版本</span></span><br><span class="line">docker -v</span><br><span class="line"><span class="comment">#配置开机⾃启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line"><span class="comment">#6. 启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="comment">#7. 查看docker 启动状态</span></span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure></li><li><p>安装docker（主节点+⼯作节点）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/y</span></span><br><span class="line"><span class="string">um/repos/kubernetes-el7-x86_64</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yu</span></span><br><span class="line"><span class="string">m/doc/yum-key.gpg</span></span><br><span class="line"><span class="string">https://mirrors.aliyun.com/kubernetes/yum/doc/r</span></span><br><span class="line"><span class="string">pm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p>安装kubelet kubeadm kubectl（主节点+⼯作节点）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0</span><br></pre></td></tr></table></figure></li><li><p>主节点初始化（主节点）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --apiserver-advertise-address=192.168.80.100 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">--kubernetes-version v1.18.0 --service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><p>  说明：<br>  –apiserver-advertise-address：主节点的内⽹ip地址<br>  –image-repository 镜像仓库<br>  –kubernetes-version k8s版本<br>  –service-cidr + –pod-network-cidr ⽹段不重复即可</p></li><li><p>当初始化完成之后执⾏命令，并加⼊⼯作节点</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> 192.168.80.100:6443 --token pico8c.yrkwjat5y0pkuuvu \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:a3204d28e353fc1d0ac3e80c181108a367d8sdsb4770csd69d3a107bad850d2b8072e3f9</span><br></pre></td></tr></table></figure></li><li><p>主节点执⾏命令</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure></li><li><p>加⼊⼯作节点</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure></li><li><p>查看节点</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br><span class="line"><span class="comment">#状态都是NotReady，需要配置⽹络插件</span></span><br></pre></td></tr></table></figure></li><li><p>安装网络插件</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure></li><li><p>查看节点状态</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure></li><li><p>查看系统pod状态</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n kube-system</span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h3 id="基于K8S集群部署第⼀个K8S应⽤"><a href="#基于K8S集群部署第⼀个K8S应⽤" class="headerlink" title="基于K8S集群部署第⼀个K8S应⽤"></a>基于K8S集群部署第⼀个K8S应⽤</h3><ul><li><p>查看k8s集群信息</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl cluster-info</span><br></pre></td></tr></table></figure></li><li><p>查看k8s集群信息</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><p>  <img src="/images/k8s/get_node.png"></p></li><li><p>查看内部组件</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -A</span><br></pre></td></tr></table></figure><p>  <img src="/images/k8s/get_con.png"></p></li><li><p>部署第⼀个K8S应⽤-Nginx，并通过公⽹ip访问</p><ul><li><p>创建deployment（Pod控制器的⼀种）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment xdclass-nginx --image=nginx:1.23.0</span><br></pre></td></tr></table></figure></li><li><p>查看deployment和pod</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get deployment,pod,svc</span><br></pre></td></tr></table></figure><p>  <img src="/images/k8s/get_con.png"></p></li><li><p>暴露80端⼝，创建service</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl expose deployment xdclass-nginx --port=80 --<span class="built_in">type</span>=NodePort</span><br></pre></td></tr></table></figure></li><li><p>查看端⼝映射</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod,svc</span><br></pre></td></tr></table></figure><p>  <img src="/images/k8s/check_port.png"></p></li><li><p>在浏览器访问, ⼯作节点开放端⼝31512，访问⼯作节点ip：31512（⽹络安全组记得开放31512端⼝）master、node节点访问这个 开放的端⼝都可以。</p><p>  <img src="/images/k8s/nginx.png"></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> environment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
            <tag> container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8S初识与简单部署（一）</title>
      <link href="/2023/09/28/env/k8s/1/"/>
      <url>/2023/09/28/env/k8s/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/k8s/k8s.png"><br>K8S的本质是⼀组服务器集群，可以在对应服务器集群的每个节点上运⾏程序，来对节点中的容器进⾏管理。类似Master-Work⽅式，每个服务器上安装特定的k8s组件，就可以形成集群，然后部署对应的应⽤即可。</p><span id="more"></span><h3 id="什么是Kubernetes？"><a href="#什么是Kubernetes？" class="headerlink" title="什么是Kubernetes？"></a>什么是Kubernetes？</h3><ul><li>Kubernetes 这个名字源于希腊语，意为“舵⼿”或“⻜⾏员”。</li><li>k8s 这个缩写是因为 k 和 s 之间有⼋个字符的关系。</li><li>Google 在 2014 年开源了 Kubernetes 项⽬。 Kubernetes建⽴在Google ⼤规模运⾏⽣产⼯作负载⼗⼏年经验的基础上， 结合了社区中最优秀的想法和实践。</li><li>Kubernetes是⼀个可移植、可扩展的开源平台，⽤于管理容器化的⼯作负载和服务，简称 K8S。</li><li>官⽅⽂档：<a href="https://kubernetes.io/zh-cn/docs/home/%E3%80%82">https://kubernetes.io/zh-cn/docs/home/。</a></li><li>K8S的本质是⼀组服务器集群，可以在对应服务器集群的每个节点上运⾏程序，来对节点中的容器进⾏管理。类似Master-Work⽅式，每个服务器上安装特定的k8s组件，就可以形成集群，然后部署对应的应⽤即可。</li></ul><p><img src="/images/k8s/construction.png"></p><hr><h3 id="k8s常⻅的功能"><a href="#k8s常⻅的功能" class="headerlink" title="k8s常⻅的功能"></a>k8s常⻅的功能</h3><ol><li><p>服务发现和负载均衡</p><p> Kubernetes 可以使⽤ DNS 名称或⾃⼰的 IP 地址来暴露容器。如果进⼊容器的流量很⼤，Kubernetes 能够⾃动实现请求的负载均衡分配⽹络流量，从⽽使部署稳定。</p></li><li><p>存储编排<br>Kubernetes 允许⾃动挂载选择的存储系统，例如本地存储、云提供商存储等。</p></li><li><p>⾃动部署和回滚<br>可以⽤k8s⾃动化部署创建新容器， 删除现有容器并将它<br>们的所有资源⽤于新容器。当版本发布错误，可以⽴刻回退到之前的版本。</p></li><li><p>⾃我修复<br>如果某个容器宕机了，K8S 可以快速重新启动新的的容器，替换旧的容器。</p></li><li><p>密钥与配置管理<br>K8S允许存储和管理敏感信息，例如密码、OAuth 令牌和ssh 密钥。</p></li></ol><hr><h3 id="Kubernetes常⻅概念组件和整体架构"><a href="#Kubernetes常⻅概念组件和整体架构" class="headerlink" title="Kubernetes常⻅概念组件和整体架构"></a>Kubernetes常⻅概念组件和整体架构</h3><p>K8S整体架构，也是Client-Server模型<br>控制节点Master-Node，负责集群的管理<br>⼯作节点Worker-Node，负责为集群提供运⾏环境</p><p><img src="/images/k8s/master_node.png"></p><p>kubernetes常⻅概念</p><ul><li>Master<ul><li>指的是集群控制节点（相当于整个集群的指挥中⼼），在每个Kubernetes集群⾥都需要有⼀个Master来负责整个集群的管理和控制。</li></ul></li><li>Node<ul><li>除了master，k8s集群中的其他机器被称为Node节点，Node节点才是kubernetes集群中的⼯作负载节点</li><li>每个Node节点都会被master分配⼀些⼯作负载（docker容器），node节点上的docker负责容器的运⾏。</li></ul></li><li>Pod<ul><li>Pod是⼀组容器, 在K8S中，最⼩的单位是Pod, ⼀个Pod可以包含多个容器，但通常情况下我们在每个Pod中仅使⽤⼀个容器。</li><li>可以把Pod理解成豌⾖荚, Pod内的每个容器是⼀颗颗豌⾖分类。</li><li>⾃主创建：直接创建出来的Pod，这种pod删除后就没有了，也不会⾃动重建。控制器创建：通过控制器创建的pod，这类Pod删除了之后还会⾃动重建。</li></ul></li><li>Pod Controller<ul><li>控制器是管理pod的中间层，只需要告诉Pod控制器，想要创建多少个什么样的Pod，它会创建出满⾜条件的Pod并确保每⼀个Pod资源处于⽤户期望的⽬标状态。如果Pod在运⾏中出现故障，它会基于指定策略重新编排Pod。</li><li>通过它来实现对pod的管理，⽐如启动pod、停⽌pod、扩展pod的数量等等。</li><li>类型<br>  ReplicaSet、Deployment、Horizontal Pod。<br>  Autoscaler、DaemonSet等。</li></ul></li><li>Service<ul><li>在k8s⾥⾯，每个Pod都会被分配⼀个单独的IP地址,但这个IP地址会随着Pod的销毁⽽消失。</li><li>Service (服务)就是⽤来解决这个问题的, 对外服务的统⼀⼊⼝，⽤于为⼀组提供服务的Pod 抽象⼀个稳定的⽹络访问地址。</li><li>⼀个Service可以看作⼀组提供相同服务的Pod的对外访问接⼝，作⽤于哪些Pod是通过标签选择器来定义的。</li></ul></li><li>Label<ul><li>K8S提供了⼀种机制来为Pod进⾏分类，那就是Label（标签），同⼀类pod会拥有相同的标签。</li><li>Label的具体形式是key-value的标记对，可以在创建资源的时候设置，也可以在后期添加和修改。</li><li>给某个资源对象定义⼀个Label，就相当于给它打了⼀个标签，可以通过Label Selector（标签选择器）查询和筛选拥有某些Label的资源对象，K8S通过这种⽅式实现了类似SQL的对象查询机制。</li><li>应⽤场景<ul><li>未使⽤前，分散难管理，如果需要部署不同版本的应⽤到不同的环境中，难操作。</li><li>为Pod打上不同标签，使⽤Label组织的Pod，轻松管理。</li></ul></li></ul></li><li>Label选择器<ul><li>对应的资源打上标签后,可以使⽤标签选择器过滤指定的标签</li><li>标签选择器⽬前有两个<ul><li>基于等值关系(等于、不等于)<br>  <img src="/images/k8s/label1.png"></li><li>基于集合关系(属于、不属于、存在)<br>  <img src="/images/k8s/label2.png"></li></ul></li></ul></li><li>NameSpace<ul><li>可以在⼀个物理集群上运⾏多个虚拟集群，这种虚拟集群被称作 命名空间，⽤来隔离pod的运⾏环境。</li><li>同⼀个名字空间中的资源名称必须唯⼀，⽽不同名字空间之间则没有这个要求。</li><li>NameSpace是不能嵌套的，每⼀个 Kubernetes 的资源都只能在⼀个NameSpace内。</li><li>名字空间是在多个⽤户之间划分集群资源的⼀种⽅法（通过资源配额）</li><li>不必使⽤多个名字空间来分隔轻微不同的资源，例如同⼀软件的不同版本： 应该使⽤标签 来区分同⼀名字空间中的不同资源。</li><li>Kubernetes 会创建四个初始NameSpace名称空间：<ul><li>default 没有指明使⽤其它名字空间的对象所使⽤的默<br>  认名字空间</li><li>kube-system Kubernetes 系统创建对象所使⽤的名字<br>  空间</li><li>kube-public</li><li>kube-node-lease</li></ul></li></ul></li><li>应⽤分类<ul><li>有状态应⽤<br>  不能简单的实现负载均衡的服务，有数据产⽣的服务，Redis、MySql、RabbitMQ等相关服务须通过⼀些较复杂的配置才能做到负载均衡。有状态的应⽤，建议直接在物理机部署，⽅便维护管理。</li><li>⽆状态应⽤<br>  没有对应业务数据的应⽤，可以简单的实现负载均衡，复制⼀个节点即可快速扩容，如SpringCloud中的业务服务⽆状态的应⽤适合部署在 Kubernetes（K8s）中或者容器中。</li></ul></li></ul><hr><h3 id="K8S整体架构，也是Client-Server模型"><a href="#K8S整体架构，也是Client-Server模型" class="headerlink" title="K8S整体架构，也是Client-Server模型"></a>K8S整体架构，也是Client-Server模型</h3><ul><li>控制节点Master-Node，负责集群的管理<ul><li>apiserver：提供操作【k8s集群资源】的唯⼀⼊⼝，RESTful⽅式请求,并提供认证、授权、访问控制、API注册和发现等</li><li>scheduler：负责资源的调度，按照预定的调度策略，【计算】将Pod调度到相应的Node节点进⾏应⽤部署controller-manager：控制器管理中⼼，负责维护集群的状态，⽐如故障检测、滚动更新等，根据调度器的安排通知对应的节点创建pod。</li><li>etcd：存储中⼼，是兼具⼀致性和⾼可⽤性的键值数据库，可以作为保存 Kubernetes 所有集群数据的后台数据库。</li></ul></li><li>⼯作节点Worker-Node，负责为集群提供运⾏环境<ul><li>Node是Pod真正运⾏的主机，可以是物理机也可以是虚拟机, Node本质上不是K8S来创建的， K8S只是管理Node上的资源，为了管理Pod，每个Node节点上⾄少需要运⾏container runtime（Docker）、kubelet和kube-proxy服务。</li></ul></li><li>kubelet：相当于主节点派到⼯作节点的⼀个代表，⽤于管理本机容器（相当于master节点的化身），负责维护容器的⽣命周期也负责Volume(CVI)和⽹络（CNI）的管理。</li><li>kube-proxy：负责为Service提供cluster内部的服务发现&#x2F;⽹络代理&#x2F;负载均衡等操作，为部署的应⽤程序提供访问⼊⼝，和apiserver是不⼀样的，后者是操作k8s集群内部的。</li><li>架构图<br><img src="/images/k8s/con3.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> environment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
            <tag> container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker镜像与容器</title>
      <link href="/2023/09/20/env/docker/2/"/>
      <url>/2023/09/20/env/docker/2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/docker/docker-images.png"><br>容器镜像的加载流程,镜像的基本操作以及与系统存储技术 OverlayFS 的关系。</p><span id="more"></span><h3 id="容器运行基础"><a href="#容器运行基础" class="headerlink" title="容器运行基础"></a>容器运行基础</h3><p>镜像是 Docker 运行的基础, 就好比计算机硬件需要安装操作系统. 使用 Docker Images 命<br>令可以看到当前系统中存在的镜像。当运行容器时，使用的镜像如果在本地系统中不存<br>在，Docker 就会自动从 Docker 镜像仓库或者配置的私有仓库中下载；默认是从 Docker<br>Hub 公共镜像源下载。</p><hr><h3 id="Docker-加载镜像流程"><a href="#Docker-加载镜像流程" class="headerlink" title="Docker 加载镜像流程"></a>Docker 加载镜像流程</h3><ol><li>检查本地是否有与启动镜像相匹配的镜像。</li><li>查询与镜像地址中是否有启动镜像</li><li>如果在镜像地址中没有完整的地址，则从默认的 Docker Hub 下载。</li></ol><p>Docker 加载镜像的两种方式:<br>公共仓库与私有仓库</p><p>搜索 Docker Hub 有哪些镜像</p><p>docker search [镜像名字]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master jdk]<span class="comment"># docker search nginx</span></span><br><span class="line">NAME                                              DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">nginx                                             Official build of Nginx.                        19020               [OK]                </span><br><span class="line">bitnami/nginx                                     Bitnami nginx Docker Image                      174                                     [OK]</span><br><span class="line">nginxinc/nginx-unprivileged                       Unprivileged NGINX Dockerfiles                  123                                     </span><br><span class="line">nginxproxy/acme-companion                         Automated ACME SSL certificate generation fo…   123                                     </span><br><span class="line">nginxproxy/nginx-proxy                            Automated Nginx reverse proxy <span class="keyword">for</span> docker con…   104                                     </span><br><span class="line">ubuntu/nginx                                      Nginx, a high-performance reverse proxy &amp; we…   98                                      </span><br><span class="line">nginx/nginx-ingress                               NGINX and  NGINX Plus Ingress Controllers fo…   81                                      </span><br><span class="line">nginx/unit                                        NGINX Unit is a dynamic web and application …   64                                      </span><br><span class="line">nginx/nginx-prometheus-exporter                   NGINX Prometheus Exporter <span class="keyword">for</span> NGINX and NGIN…   33                                      </span><br><span class="line">bitnami/nginx-ingress-controller                  Bitnami Docker Image <span class="keyword">for</span> NGINX Ingress Contr…   29                                      [OK]</span><br><span class="line">unit                                              Official build of NGINX Unit: Universal Web …   14                  [OK]                </span><br><span class="line">nginxproxy/docker-gen                             Generate files from docker container meta-da…   12</span><br></pre></td></tr></table></figure><p>从 Docker Hub 下载镜像</p><p>下载镜像，（没有指定版本，默认会下载最新版 latest）<br>docker pull nginx:latest &#x3D; docker pull nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master jdk]<span class="comment"># docker pull nginx:latest</span></span><br></pre></td></tr></table></figure><p>从第三方docker 镜像仓库或者私有仓库下载镜像方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># docker pull repo.abc.com/httpd:latest #地址不存在</span></span><br></pre></td></tr></table></figure><p>镜像加速器<br>#在下载 Docker Hub 镜像非常慢的情况下, 可以使用镜像加速功能。配置加速可以用官网<br>提供的, 也可以使用私有仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://plqjafsr.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">[root@master ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@master ~]<span class="comment"># systemctl restart docker</span></span><br></pre></td></tr></table></figure><p>基于容器创建镜像系统<br>#类似虚拟机的克隆功能<br>#在运行当中的容器基础上创建一个新的镜像（相当于 vm 的完整快照）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master <span class="built_in">test</span>]<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                      PORTS                    NAMES</span><br><span class="line">1fcbee75f6b6        nginx               <span class="string">&quot;/docker-entrypoint.…&quot;</span>   6 days ago          Exited (255) 47 hours ago   0.0.0.0:8090-&gt;80/tcp     nginx-IP1</span><br><span class="line">f8f6b3e76bc6        centos              <span class="string">&quot;/bin/bash&quot;</span>              6 days ago          Exited (127) 6 days ago                              centos-IP1</span><br><span class="line">85b947598072        busybox             <span class="string">&quot;sh&quot;</span>                     6 days ago          Exited (137) 6 days ago                              demo-none</span><br><span class="line">b81b8c20a0e9        registry            <span class="string">&quot;/entrypoint.sh /etc…&quot;</span>   7 days ago          Up 21 minutes               0.0.0.0:5000-&gt;5000/tcp   registry</span><br><span class="line">0872f00a1f2f        fcbda7df0e5d        <span class="string">&quot;nginx -g &#x27;daemon of…&quot;</span>   7 days ago          Exited (255) 7 days ago     0.0.0.0:8001-&gt;80/tcp     nginx-demo</span><br><span class="line">7ea6cd265e08        7c0176581c2a        <span class="string">&quot;/bin/sh -c &#x27;yum ins…&quot;</span>   7 days ago          Exited (1) 7 days ago                                funny_payne</span><br><span class="line">fbcdf64af907        7c0176581c2a        <span class="string">&quot;/bin/sh -c &#x27;yum ins…&quot;</span>   7 days ago          Exited (1) 7 days ago                                fervent_wiles</span><br></pre></td></tr></table></figure><p>删除镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master <span class="built_in">test</span>]<span class="comment"># docker image rm 192.168.80.100:5000/nginx:v1.0</span></span><br></pre></td></tr></table></figure><p>导出镜像</p><p>#导出镜像为 tar 包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master /]<span class="comment"># docker image save nginx:latest &gt; nginx.tar.gz</span></span><br></pre></td></tr></table></figure><p>导入镜像<br>#直接使用tar 包导入镜像,注意如果原来导出的源镜像还是在存在于系统中，那么新导入的<br>镜像在系统将不可见。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master /]<span class="comment"># docker image load -i nginx.tar.gz</span></span><br><span class="line">Loaded image: nginx:latest</span><br></pre></td></tr></table></figure><p>#强制删除原来的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master /]<span class="comment"># docker rmi nginx:latest --force</span></span><br><span class="line"><span class="comment">#再执行导入</span></span><br><span class="line">[root@master /]<span class="comment"># docker image load -i nginx.tar.gz</span></span><br><span class="line">Loaded image: nginx:latest</span><br><span class="line"></span><br><span class="line"><span class="comment">#最后查看</span></span><br><span class="line">[root@master /]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY TAG IMAGE ID CREATED SIZE</span><br><span class="line">nginx latest 6678c7c2e56c 9 days ago 127MB</span><br></pre></td></tr></table></figure><p>镜像tag标签<br>语法：docker image tag 源_IMAGE[:TAG] 目标_IMAGE[:TAG]<br>类似linux 硬链接,在推送镜像到私有仓库时，需要添加tag。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@master <span class="built_in">test</span>]<span class="comment"># docker image tag nginx:latest repo.abc.com/nginx:v1.0</span></span><br><span class="line">[root@master <span class="built_in">test</span>]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">busybox              latest              a416a98b71e2        2 months ago        4.26MB</span><br><span class="line">hello-world          latest              9c7a54a9a43c        4 months ago        13.3kB</span><br><span class="line">nginx                latest              605c77e624dd        20 months ago       141MB</span><br><span class="line">repo.abc.com/nginx   v1.0                605c77e624dd        20 months ago       141MB</span><br><span class="line">registry             latest              b8604a3fe854        22 months ago       26.2MB</span><br><span class="line">centos               latest              5d0da3dc9764        2 years ago         231MB</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以使用新的 tag 标签启动容器</span></span><br><span class="line">[root@master /]<span class="comment"># docker run -d -p 9091:80 repo.abc.com/nginx:v1.0</span></span><br><span class="line">1f5f20b763ccb7661b41701b9319876a0bd074da12e4e77ba0ff7879c2b19627</span><br></pre></td></tr></table></figure><hr><h3 id="镜像构建过程"><a href="#镜像构建过程" class="headerlink" title="镜像构建过程"></a>镜像构建过程</h3><p>构建容器：通过父镜像上创建一个容器，重新封装成一个镜像，变成下一个新启动容器的<br>只读层(LOWER)。 但是如果当前容器需要对镜像进行修改，就需要加载所有镜像的只读层<br>到容器中进行修改。<br>#特别注意之前提到的容器启动，修改镜像内容是不会修改源镜像；只是修改启动容器的<br>内容。在下一节将详细讲述镜像存储的原理。</p><hr><h3 id="Docker-镜像和-Overlay2-关系"><a href="#Docker-镜像和-Overlay2-关系" class="headerlink" title="Docker 镜像和 Overlay2 关系"></a>Docker 镜像和 Overlay2 关系</h3><p>Docker 需要OverlayFS文件系统存储</p><ol><li>Docker中的镜像采用分层构建设计,每个层可以称之为”layer”, 镜像文件默认存在目<br>录:&#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2</li><li>Docker支持的文件存储如下: AUFS、OverlayFS、VFS、Brtfs等。<br>3)通过Docker Info命令查看当前的存储驱动</li></ol><p>OverlayFS 存储原理<br><img src="/images/docker/docker-overlay.png"></p><p>OverlayFS 结构分为三个层: LowerDir、Upperdir、MergedDir</p><ol><li>LowerDir （只读）<br>只读的 image layer，其实就是 rootfs, 在使用 Dockfile 构建镜像的时候, Image Layer 可<br>以分很多层,所以对应的 lowerdir 会很多（源镜像）。</li><li>Upperdir （读写）<br>upperdir 则是在 lowerdir 之上的一层, 为读写层。容器在启动的时候会创建, 所有对容<br>器的修改, 都是在这层。比如容器启动写入的日志文件，或者是应用程序写入的临时<br>文件。</li><li>MergedDir （展示）<br>merged 目录是容器的挂载点,在用户视角能够看到的所有文件，都是从这层展示的。</li></ol><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>所挂载的目录层为 Lower 层，然后通过 Merged 展示所有的文件目录与文件。用户<br>写入的所有文件都是在 UpperDir 目录,并且会在 UpperDir 建立于 Merged 层展示的文件<br>目录结构, 所以用户就可以看到写入的文件。并且底层的镜像是不能被修改(如果挂载目<br>录为 UpperDir,则可以修改源镜像)。</li><li>在下次重新启动已经停止的容器的时候, 如果容器的 ID 没有发生改变，那么所写入的文<br>件是存在物理系统中的; 反之就会是一个新的容器，之前手工创建的文件是不存在的。</li><li>基于容器创建的镜像，就相当于容器的快照, 可以删除原来的容器, 但是不能删除原来<br>的镜像</li><li>基于镜像创建的镜像，原来的镜像就是新镜像的 low 层 (build), tag 则是没有区别</li><li>容器启动以后，镜像就存在于容器的 lower 层，所有的写入都是在 upper</li></ol><hr><h3 id="容器基本操作"><a href="#容器基本操作" class="headerlink" title="容器基本操作"></a>容器基本操作</h3><p>查看 Docker 命令行帮助</p><p>Docker 操作命令分为: 管理命令与直接命令参数</p><ol><li>管理命令为区分每个项目的命令, 比如说镜像操作, 就是以docker image 开头</li><li>直接命令参数就是在docker 命令之后直接的命令, 比如说删除镜像 docker rmi</li><li>管理命令相对于直接命令参数,更加严谨。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node-2 ~]<span class="comment"># docker --help</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>命令行</th><th>解释</th></tr></thead><tbody><tr><td>docker container create image_name</td><td>创建container</td></tr><tr><td>docker container run -it image_id CMD</td><td></td></tr><tr><td>-i 交互模式</td><td></td></tr><tr><td>-t 终端</td><td></td></tr><tr><td>-it 为分配一个交互式终端</td><td></td></tr><tr><td>-d 放在后台</td><td></td></tr><tr><td>-p 端口映射</td><td></td></tr><tr><td>-v 源地址(宿主机):目标地址(容器)</td><td></td></tr><tr><td>–name 指定容器的名字</td><td></td></tr><tr><td>-h 指定容器主机名</td><td></td></tr><tr><td>–restart&#x3D;always 每次重启服务，容器</td><td></td></tr><tr><td>跟着重启</td><td>创建并运行container 及进入交互终端参数</td></tr><tr><td>docker container run -p [port in container]:[port in physical system] -d [image] [command]</td><td>创建并运行container 并让其在后台运行，并端口映射</td></tr><tr><td>docker container ps</td><td>查看正在运行的所有container 信息</td></tr><tr><td>docker container ps -l</td><td>查看最后创建的container</td></tr><tr><td>docker container ps -a</td><td>查看所有container，包括正在运行和已经关闭的</td></tr><tr><td>docker container logs -f [container]</td><td>输出指定container 的stdout 信息（用来看log，效果和tail -f 类似，会实时输出。）</td></tr><tr><td>docker container port [container] [port]</td><td>获取container 指定端口映射关系</td></tr><tr><td>docker container top [container]</td><td>查看container 进程列表</td></tr><tr><td>docker container inspect [container]</td><td>查看container 详细信息</td></tr><tr><td>docker container stop [container]</td><td>停止continer</td></tr><tr><td>docker container kill [container]</td><td>强制停止container</td></tr><tr><td>docker container start [container]</td><td>启动一个已经停止的container</td></tr><tr><td>docker container restart [container]</td><td>重启container(若container 处于关闭状态，则直接启动)</td></tr><tr><td>docker container rm [container]-f 强制参数</td><td>删除container</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动容器, -P 生成随机映射端口</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker run --name t1 -d -P nginx</span></span><br><span class="line"><span class="comment">#查看日志</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker logs -f t1</span></span><br><span class="line"><span class="comment">#获取到端口</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker ps -a</span></span><br><span class="line"><span class="comment">#访问容器</span></span><br><span class="line">[root@localhost ~]<span class="comment"># curl http://localhost:32770</span></span><br><span class="line"><span class="comment">#显示日志</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker logs -f t1</span></span><br><span class="line">172.17.0.1 - - [20/Mar/2020:03:59:44 +0000] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 612 <span class="string">&quot;-&quot;</span> <span class="string">&quot;curl/7.29.0&quot;</span> <span class="string">&quot;-&quot;</span></span><br></pre></td></tr></table></figure><hr><h3 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h3><p>语法：docker container run [OPTIONS] IMAGE[:TAG] [COMMAND] [ARG…]<br>-i 交互模式<br>-t 终端<br>-it 为分配一个交互式终端<br>-d 放在后台 （nohup command &amp;）<br>-p 端口映射<br>-v 源地址(宿主机):目标地址(容器) (本地的宿主机的目录挂载到容器目录)<br>-h 指定容器主机名<br>–name 指定容器的名字<br>–restart&#x3D;always 每次重启服务，容器跟着重启<br>#创建容器, 并且挂载本地目录到容器目录<br>#把宿主机的&#x2F;test目录挂载到容器的&#x2F;mnt目录（新开终端）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#宿主机建立目录</span></span><br><span class="line">[root@docker ~]<span class="comment"># mkdir /test</span></span><br><span class="line"><span class="comment">#启动新容器, 指定主机名为 test, 容器名为 t11, 在终端打开-it</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker run -it --name t11 -h test -v /test:/mnt centos /bin/bash</span></span><br><span class="line"><span class="comment">#宿主机建立文件</span></span><br><span class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># touch /test/1.txt</span></span><br><span class="line"><span class="comment">#容器查看文件</span></span><br><span class="line">[root@1444e17a8998 mnt]<span class="comment"># ls /mnt/1.txt</span></span><br><span class="line">/mnt/1.txt</span><br></pre></td></tr></table></figure><p>创建一台新容器，并进入镜像系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># docker container run -it centos /bin/bash</span></span><br><span class="line">[root@f30520fafcbf /]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>Docker 容器内的第一个进程必须一直处于前台运行的状态（必须挂起），否则这个容器，<br>就会处于退出状态（-d 后台运行）。<br>当执行 docker run 时，Docker会启动一个新进程，同时给这个进程分配其独占的文件系<br>统。<br>注：使用run选项会打开另外一个会话窗口，进入容器，ID不同，并不是同一个容器，相当<br>于在系统当中又开启一个新容器，但是镜像是使用相同的镜像。</p><p>容器启动、停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：docker container start [OPTIONS] CONTAINER [CONTAINER...]</span><br><span class="line">完整信息，请查看:docker container start --<span class="built_in">help</span></span><br><span class="line">启动一个 container。</span><br><span class="line"><span class="comment">#列出所有容器，包括运行与停止的容器, 获取到容器 id</span></span><br><span class="line">[root@docker ~]<span class="comment"># docker ps -a</span></span><br><span class="line"><span class="comment">#根据容器 id 启动容器</span></span><br><span class="line">[root@docker ~]<span class="comment"># docker start c06fc46a1176</span></span><br><span class="line">c06fc46a1176</span><br><span class="line">[root@docker ~]<span class="comment"># docker ps # 列出正在运行的容器</span></span><br></pre></td></tr></table></figure><hr><h3 id="进入docker-容器exec"><a href="#进入docker-容器exec" class="headerlink" title="进入docker 容器exec"></a>进入docker 容器exec</h3><p>语法：docker container exec [OPTIONS] CONTAINER [CONTAINER…]<br>完整信息，请查看:docker exec–help</p><p>exec 会分配一个新的终端(pts)</p><p>docker container exec -it 容器id 或容器名字 &#x2F;bin&#x2F;bash<br>#执行进入必须要带参数和COMMAND（如：&#x2F;bin&#x2F;bash）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入容器可以用容器运行的 id, 也可以用容器名称, 其目的都是唯一定位到容器</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker container exec -it t11 /bin/bash (父镜像)</span></span><br></pre></td></tr></table></figure><p>attach</p><p>docker container attach CONTAINER</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果 Docker 容器是使用/bin/bash 命令启动的，则可以使用 attach</span></span><br><span class="line">[root@localhost temp]<span class="comment"># docker attach t11</span></span><br></pre></td></tr></table></figure><p>#exec 与attach 区别<br>EXEC: 在一个正在运行的容器中执行命令，exec是针对已运行的容器实例进行操作，在已运行的容器中执行命令，不创建和启动新的容器，退出shell不会导致容器停止运行。<br>Attach: 将本机的标准输入（键盘）、标准输出（屏幕）、错误输出（屏幕）附加到一个运行的容器，也就是说本机的输入直接输到容器中，容器的输出会直接显示在本机的屏幕上，如果退出容器的shell，容器会停止运行。</p><p>重启服务，容器自启动</p><p>当Docker重启时，容器能自动启动<br>命令行添加参数docker run –restart&#x3D;always</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># docker run -d --restart=always nginx</span></span><br><span class="line">[root@master ~]<span class="comment"># service docker restart</span></span><br></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># docker ps | grep nginx</span></span><br><span class="line">5b9a13d0aedb nginx <span class="string">&quot;nginx -g &#x27;daemon of…&quot;</span> About a minute ago Up 48 seconds</span><br><span class="line">80/tcp fervent_lehmann</span><br></pre></td></tr></table></figure><p>容器其他操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭所有正在运行的容器</span></span><br><span class="line">[root@master ~]<span class="comment"># docker kill $(docker ps -q)</span></span><br><span class="line"><span class="comment"># 移除所有停止的容器</span></span><br><span class="line">[root@master ~]<span class="comment"># docker rm $(docker ps -a -q)</span></span><br><span class="line">[root@demo ~]<span class="comment"># docker container prune</span></span><br><span class="line"><span class="comment"># 根据状态移除</span></span><br><span class="line">[root@master ~]<span class="comment"># docker rm $(docker ps -q -f &#x27;status=exited&#x27; -n 3)</span></span><br><span class="line">[root@master ~]<span class="comment"># docker rm $(docker ps -q -f &#x27;status=exited&#x27;)</span></span><br><span class="line"><span class="comment"># 根据标签移除</span></span><br><span class="line">[root@master ~]<span class="comment"># docker rm $(docker ps -a | grep nginx | awk &#x27;&#123;print $1&#125;&#x27;)</span></span><br></pre></td></tr></table></figure><p>容器资源限制</p><p>#查看容器资源情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># docker stats 67d1b66c71ce</span></span><br></pre></td></tr></table></figure><p>#CPU 资源限制<br>#根据CPU核心去绑定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 容器可占用的 CPU 核编号，0-3 表示占用四个核，0,1 表示占用两个核</span></span><br><span class="line">[root@master ~]<span class="comment"># docker run --name nginx-cpu-t1 --cpuset-cpus=0-1 -d -P nginx</span></span><br><span class="line">[root@master ~]<span class="comment"># docker run --name nginx-cpu-t2 --cpuset-cpus=0 -d -P nginx</span></span><br></pre></td></tr></table></figure><p>#内存限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># docker run --name nginx-memoy-t3 -d --cpuset-cpus=0 -m 300M -P nginx</span></span><br></pre></td></tr></table></figure><p>#容器空间限制</p><p>#限制单个容器使用的磁盘空间（非全局）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@master ~]<span class="comment"># docker run -it --storage-opt size=12m alpine:latest /bin/df -h | grep overlay</span></span><br></pre></td></tr></table></figure><p>Dokcer 中使用overlay2.size （注意存储驱动overlay），限制每个容器可以占用的磁盘空<br>间，并且需要xfs(CentOS 7默认的文件)文件系统支持，xfs挂载时使用pquota参数， 在实际<br>的生产中，建议用独立的磁盘作为docker的存储盘.<br>#限制单个容器使用的磁盘空间（全局）<br>#增加一块硬盘格式化为xfs<br>#<a href="https://github.com/moby/moby/issues/40667">https://github.com/moby/moby/issues/40667</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@demo ~]<span class="comment"># mkdir /data</span></span><br><span class="line">[root@demo jdk]<span class="comment"># docker info | grep &quot;Storage Driver&quot;</span></span><br><span class="line"> Storage Driver: overlay2</span><br><span class="line">[root@demo ~]<span class="comment"># docker info | grep &quot;Backing&quot;</span></span><br><span class="line"> Backing Filesystem: &lt;unknown&gt;</span><br><span class="line">[root@demo ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">[root@master ~]<span class="comment"># mkfs.xfs /dev/sdb1</span></span><br><span class="line">[root@demo ~]<span class="comment"># ll /dev/disk/by-uuid/*</span></span><br></pre></td></tr></table></figure><p>#正常情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@demo yum.repos.d]<span class="comment"># docker info</span></span><br><span class="line">Server Version: 19.03.6</span><br><span class="line">Storage Driver: overlay2</span><br><span class="line">Backing Filesystem: xfs</span><br><span class="line"><span class="comment">#设置/etc/fstab</span></span><br><span class="line">UUID=c620987d-9e05-441d-b67b-c6015c51975a /data xfs rw,pquota 0 0</span><br><span class="line">Mount -a</span><br></pre></td></tr></table></figure><p>#查看挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># cat /proc/mounts | grep sdb</span></span><br><span class="line">/dev/sdb1 /data xfs rw,relatime,attr2,inode64,prjquota 0 0</span><br></pre></td></tr></table></figure><p>#配置docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># mkdir -p /data/docker</span></span><br><span class="line">[root@master ~]<span class="comment"># vi /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://plqjafsr.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line"> <span class="string">&quot;data-root&quot;</span>: <span class="string">&quot;/data/docker&quot;</span>,</span><br><span class="line"> <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span>,</span><br><span class="line"> <span class="string">&quot;storage-opts&quot;</span>: [</span><br><span class="line"> <span class="string">&quot;overlay2.override_kernel_check=true&quot;</span>,</span><br><span class="line"> <span class="string">&quot;overlay2.size=1G&quot;</span></span><br><span class="line"> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>#重启docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># service docker restart</span></span><br><span class="line">Redirecting to /bin/systemctl restart docker.service</span><br></pre></td></tr></table></figure><p>#查看docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># docker info | grep &#x27;Docker Root Dir&#x27;</span></span><br><span class="line">WARNING: API is accessible on http://0.0.0.0:2375 without encryption.</span><br><span class="line"> Access to the remote API is equivalent to root access on the host. Refer</span><br><span class="line"> to the <span class="string">&#x27;Docker daemon attack surface&#x27;</span> section <span class="keyword">in</span> the documentation <span class="keyword">for</span></span><br><span class="line"> more information: https://docs.docker.com/engine/security/security/<span class="comment">#docker-daemon-attacksurface</span></span><br><span class="line"> Docker Root Dir: /data/docker</span><br></pre></td></tr></table></figure><p>#启动容器测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># docker run -it centos /bin/bash</span></span><br><span class="line">[root@f6b9617d3736 /]<span class="comment"># dd if=/dev/zero of=/test.txt bs=130M count=10</span></span><br><span class="line"><span class="built_in">dd</span>: error writing <span class="string">&#x27;/ test.txt&#x27;</span>: No space left on device</span><br></pre></td></tr></table></figure><p>#启动新容器，写入文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># docker run -it centos /bin/bash</span></span><br><span class="line">[root@4dd62c6ef62e /]<span class="comment"># dd if=/dev/zero of=/test1.txt bs=230M count=1</span></span><br><span class="line">1+0 records <span class="keyword">in</span></span><br><span class="line">1+0 records out</span><br></pre></td></tr></table></figure><hr><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p><a href="https://juejin.cn/post/7085176928465846308">https://juejin.cn/post/7085176928465846308</a></p>]]></content>
      
      
      <categories>
          
          <category> environment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
            <tag> container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Begining（认识与安装）</title>
      <link href="/2023/09/18/env/docker/1/"/>
      <url>/2023/09/18/env/docker/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/docker/docker-containers.png"><br>Docker是一种容器化平台，用于开发、部署和管理应用程序。它允许开发人员将应用程序及其所有依赖项打包到一个独立的容器中，该容器可以在任何支持Docker的环境中运行，而无需担心环境差异或依赖项冲突。</p><span id="more"></span><h3 id="Docker-基本实现原理"><a href="#Docker-基本实现原理" class="headerlink" title="Docker 基本实现原理"></a>Docker 基本实现原理</h3><p>通过三个方面实现容器化技术的前置：<br>1） 操作系统的 NameSpace 隔离系统资源技术，通过隔离网络、PID 进程、系统信号<br>量、文件系统挂载、主机名与域名, 来实现在同一宿主机系统中，运行不同的容<br>器，而每个容器之间相互隔离，运行互不干扰。<br>2） 使用系统的 Cgroups 系统资源配额功能, 限制资源包括: CPU、Memory、Blkio(块设<br>备)、Network。<br>3） 通过 OverlayFS 数据存储技术, 实现容器镜像的物理存储与新建容器存储。</p><hr><h3 id="OverlayFS"><a href="#OverlayFS" class="headerlink" title="OverlayFS"></a>OverlayFS</h3><p>OverlayFS 是一种堆叠文件系统,它依赖并建立在其它的文件系统之上(例如 ext4fs 和 xfs 等),<br>并不直接参与磁盘空间结构的划分,仅仅将原来系统文件中的文件或者目录进行”合并一起”,<br>最后向用户展示”合并”的文件是在同一级的目录, 这就是联合挂载技术, 相对于 AUFS<br>（&lt;1.12 早期使用的存储技术）, OverlayFS 速度更快,实现更简单。<br>Linux 内核为 Docker 提供的 OverlayFS 驱动有两种：Overlay 和 Overlay2。而 Overlay2 是相<br>对于 Overlay 的一种改进,在 Inode 利用率方面比 Overlay 更有效。但是 Overlay 有环境需<br>求：Docker 版本 17.06.02+,宿主机文件系统需要是 EXT4 或 XFS 格式。</p><hr><h3 id="OverlayFS-实现方式"><a href="#OverlayFS-实现方式" class="headerlink" title="OverlayFS 实现方式"></a>OverlayFS 实现方式</h3><p>OverlayFS 通过三个目录：lower 目录、upper 目录、以及 work 目录实现,其中 lower 目录可<br>以是多个, upper 目录为可以进行读写操作的目录, work 目录为工作基础目录,挂载后内容会<br>被清空,且在使用过程中其内容用户不可见,最后联合挂载完成给用户呈现的统一视图称为<br>merged 目录。</p><hr><h3 id="Docker-优势与局限性"><a href="#Docker-优势与局限性" class="headerlink" title="Docker 优势与局限性"></a>Docker 优势与局限性</h3><p>优势</p><ol><li>Docker 让软件开发者与维护人员可以非常方便的启动应用程序以及将程序的依赖，<br>包到一个容器中，然后启动 Docker 应用到支持 Docker 的系统平台中，就可以实现应用<br>虚拟化。</li><li>Docker 镜像中包含了应用运行环境和配置文件，所以 Docker 可以简化部署多种应用<br>的工作。比如说 Web 应用、后台应用（Java&#x2F;C++）、数据库应用、Hadoop 集群、消息<br>队列等等都可以打包成一个个独立的 Docker 应用镜像来部署。</li><li>提升宿主机(物理服务器&#x2F;云虚拟机), 系统资源的利用率。</li></ol><p>局限性</p><ol><li>基本的 Docker 网络管理模式比较简单，主要是基于系统使用 Namespace 隔离。</li><li>与其他系统的网络连通性，使用自定义的地址网段，需要借助其他插件实现与其他网<br>段的互通, 提高了网络的整体复杂度。</li><li>容器中应用程序日志不方便查看与收集。</li><li>容器中无法运行 Windows</li></ol><hr><h3 id="Docker-基本术语"><a href="#Docker-基本术语" class="headerlink" title="Docker 基本术语"></a>Docker 基本术语</h3><table><thead><tr><th>名称</th><th>解释</th></tr></thead><tbody><tr><td>Docker 镜像(Images)</td><td>Docker 镜像是用于创建 Docker 容器的模板。</td></tr><tr><td>Docker 容器(Container)</td><td>容器是独立运行的一个或一组应用。</td></tr><tr><td>Docker 客户端(Client)</td><td>Docker 客户端通过命令行或者其他工具使用 Docker API (<a href="https://docs.docker.com/reference/api/docker_remote_api">https://docs.docker.com/reference/api/docker_remote_api</a>) 与Docker 的守护进程通信。</td></tr><tr><td>Docker 主机(Host)</td><td>一个物理或者虚拟的机器用于执行 Docker 守护进程和容器</td></tr></tbody></table><hr><h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><p>操作系统版本要求<br>CentOS 7 要求系统为 64 位、系统内核版本为 3.10 以上。<br>CentOS-6.5 或更高的版本的 CentOS 上，要求系统为 64 位、系统内核版本为 2.6.32-431<br>或者更高版本。</p><p>查看系统内核版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br></pre></td></tr></table></figure><p>关闭系统防火墙与 Selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># service firewalld stop</span></span><br><span class="line">[root@docker ~]<span class="comment"># service firewalld status</span></span><br><span class="line">[root@docker ~]<span class="comment"># getenforce</span></span><br><span class="line">[root@docker ~]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@docker ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><p>安装 Docker 的准备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># yum remove docker \</span></span><br><span class="line">docker-client \</span><br><span class="line">    docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure><p>#device-mapper-persistent-data and lvm2 are required by the devicemapper storage driver.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># yum install -y yum-utils device-mapper-persistent-data lvm2</span></span><br></pre></td></tr></table></figure><p>下载 Docker CE Yum 源 (社区版)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@docker ~]<span class="comment"># yum-config-manager  --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span></span><br></pre></td></tr></table></figure><p>安装开源版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># yum install wget net-tools vim -y</span></span><br><span class="line">[root@docker ~]<span class="comment"># yum search docker-ce #可省略</span></span><br><span class="line">[root@docker ~]<span class="comment"># yum install docker-ce-19.03.6 docker-ce-cli-19.03.6 containerd.io</span></span><br><span class="line">[root@docker ~]<span class="comment"># servie docker start</span></span><br><span class="line">[root@docker ~]<span class="comment"># chkconfig docker on #开机启动</span></span><br></pre></td></tr></table></figure><p>Docker 信息查询</p><p>Docker 是传统的 CS 架构分为 Docker Client 和 Docker Server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           19.03.6</span><br><span class="line"> API version:       1.40</span><br><span class="line"> Go version:        go1.12.16</span><br><span class="line"> Git commit:        369ce74a3c</span><br><span class="line"> Built:             Thu Feb 13 01:29:29 2020</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          19.03.6</span><br><span class="line">  API version:      1.40 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.12.16</span><br><span class="line">  Git commit:       369ce74a3c</span><br><span class="line">  Built:            Thu Feb 13 01:28:07 2020</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.6.22</span><br><span class="line">  GitCommit:        8165feabfdfe38c65b599c4993d227328c231fca</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.8</span><br><span class="line">  GitCommit:        v1.1.8-0-g82f18fe</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.18.0</span><br><span class="line">  GitCommit:        fec3683</span><br></pre></td></tr></table></figure><p>docker 开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># systemctl enable docker</span></span><br></pre></td></tr></table></figure><p>1.7.9 #查看 ip 地址<br>Docker 启动后，会自动创建一个 docker 0 的网桥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line">    <span class="built_in">link</span>/ether 02:42:8f:4f:a4:2f brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::42:8fff:fe4f:a42f/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p>Docker 状态信息查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">Client:</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line">Server:</span><br><span class="line"> Containers: 16</span><br><span class="line">  Running: 2</span><br><span class="line">  Paused: 0</span><br><span class="line">  Stopped: 14</span><br><span class="line"> Images: 4</span><br><span class="line"> Server Version: 19.03.6</span><br><span class="line"> Storage Driver: overlay2</span><br><span class="line">  Backing Filesystem: xfs</span><br><span class="line">  Supports d_type: <span class="literal">true</span></span><br><span class="line">  Native Overlay Diff: <span class="literal">true</span></span><br><span class="line"> Logging Driver: json-file</span><br><span class="line"> Cgroup Driver: cgroupfs</span><br><span class="line"> Plugins:</span><br><span class="line">  Volume: <span class="built_in">local</span></span><br><span class="line">  Network: bridge host ipvlan macvlan null overlay</span><br><span class="line">  Log: awslogs fluentd gcplogs gelf journald json-file <span class="built_in">local</span> logentries splunk syslog</span><br><span class="line"> Swarm: inactive</span><br><span class="line"> Runtimes: runc</span><br><span class="line"> Default Runtime: runc</span><br><span class="line"> Init Binary: docker-init</span><br><span class="line"> containerd version: 8165feabfdfe38c65b599c4993d227328c231fca</span><br><span class="line"> runc version: v1.1.8-0-g82f18fe</span><br><span class="line"> init version: fec3683</span><br><span class="line"> Security Options:</span><br><span class="line">  seccomp</span><br><span class="line">   Profile: default</span><br><span class="line"> Kernel Version: 3.10.0-1160.71.1.el7.x86_64</span><br><span class="line"> Operating System: CentOS Linux 7 (Core)</span><br><span class="line"> OSType: linux</span><br><span class="line"> Architecture: x86_64</span><br><span class="line"> CPUs: 1</span><br><span class="line"> Total Memory: 972.3MiB</span><br><span class="line"> Name: master</span><br><span class="line"> ID: JHUW:GPKZ:3KUI:JX2J:ZIRD:KTBS:KHV5:I2EO:V26A:KBWS:BJAI:MG3A</span><br><span class="line"> Docker Root Dir: /home/docker/data</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line"> Registry: https://index.docker.io/v1/</span><br><span class="line"> Labels:</span><br><span class="line"> Experimental: <span class="literal">false</span></span><br><span class="line"> Insecure Registries:</span><br><span class="line">  192.168.80.100:5000</span><br><span class="line">  127.0.0.0/8</span><br><span class="line"> Registry Mirrors:</span><br><span class="line">  https://registry.cn-hangzhou.aliyuncs.com/</span><br><span class="line"> Live Restore Enabled: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">WARNING: API is accessible on http://0.0.0.0:2375 without encryption.</span><br><span class="line">         Access to the remote API is equivalent to root access on the host. Refer</span><br><span class="line">         to the <span class="string">&#x27;Docker daemon attack surface&#x27;</span> section <span class="keyword">in</span> the documentation <span class="keyword">for</span></span><br><span class="line">         more information: https://docs.docker.com/engine/security/security/<span class="comment">#docker-daemon-attack-surface</span></span><br><span class="line">WARNING: bridge-nf-call-iptables is disabled</span><br><span class="line">WARNING: bridge-nf-call-ip6tables is disabled</span><br></pre></td></tr></table></figure><p>修改 Docker 存储数据存储目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]<span class="comment"># vi /usr/lib/systemd/system/docker.service</span></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/bin/dockerd --graph=/data/docker -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line">[root@docker ~]<span class="comment"># systemctl restart docker #重启服务</span></span><br><span class="line">[root@docker ~]<span class="comment"># docker info #查看是否修改成功</span></span><br></pre></td></tr></table></figure><p>添加阿里云镜像加速器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://plqjafsr.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">[root@master ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@master ~]<span class="comment"># systemctl restart docker</span></span><br></pre></td></tr></table></figure><p>运行第一个 Docker 应用<br>检验 Docker 是否可以正常运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@docker ~]<span class="comment"># docker pull hello-world</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">719385e32844: Pull complete </span><br><span class="line">Digest: sha256:4f53e2564790c8e7856ec08e384732aa38dc43c52f02952483e3f003afbf23db</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> hello-world:latest</span><br><span class="line">docker.io/library/hello-world:latest</span><br><span class="line">[root@docker ~]<span class="comment"># docker run hello-world</span></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">&quot;hello-world&quot;</span> image from the Docker Hub.</span><br><span class="line"> (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line"> executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">to your terminal</span><br></pre></td></tr></table></figure><hr><h3 id="Docker-C-x2F-S-模式"><a href="#Docker-C-x2F-S-模式" class="headerlink" title="Docker C&#x2F;S 模式"></a>Docker C&#x2F;S 模式</h3><p>Docker 客户端和服务端是使用 Socket 方式连接，主要有以下几种方式：<br>1） 本地的 socket 文件 unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker&#x2F;sock （默认）<br>2） tcp:&#x2F;&#x2F;host:prot （演示）<br>3） fd:&#x2F;&#x2F;socketfd<br>Docker 默认连接方式<br>#未启动的状态, 说明 Docker 在默认情况下使用本地的 var&#x2F;run&#x2F;docker.sock 连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># service docker stop</span></span><br><span class="line">[root@ master ~]<span class="comment"># docker info</span></span><br><span class="line">Client:</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line">Server:</span><br><span class="line">ERROR: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</span><br><span class="line">errors pretty printing info</span><br></pre></td></tr></table></figure><p>设置 Docker 远程使用 TCP 的连接方式<br>#打开 sock 与 tcp 连接方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ master ~]<span class="comment"># vim /usr/lib/systemd/system/docker.service</span></span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br><span class="line"><span class="comment">#修改为:</span></span><br><span class="line">ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock -H fd:// --containerd=/run/containerd/containerd.sock</span><br></pre></td></tr></table></figure><p>重启 Docker 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root@master ~]<span class="comment"># service docker restart</span></span><br></pre></td></tr></table></figure><p>查看 Docker 运行状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@master-1 ~]<span class="comment"># service docker status</span></span><br><span class="line">Redirecting to /bin/systemctl status docker.service</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Sun 2023-09-17 22:51:08 EDT; 9min ago</span><br><span class="line">     Docs: https://docs.docker.com</span><br><span class="line"> Main PID: 970 (dockerd)</span><br><span class="line">    Tasks: 19</span><br><span class="line">   Memory: 136.8M</span><br><span class="line">   CGroup: /system.slice/docker.service</span><br><span class="line">           ├─ 970 /usr/bin/dockerd --graph=/home/docker/data -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock -H fd:// --containerd=/run/contai...</span><br><span class="line">           └─1400 /usr/bin/docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 5000 -container-ip 172.17.0.2 -container-port 5000</span><br><span class="line"></span><br><span class="line">Sep 17 22:51:04 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:04.476230911-04:00&quot;</span> level=warning msg=<span class="string">&quot;Error (Unable to complete atomic opera...ying....&quot;</span></span><br><span class="line">Sep 17 22:51:04 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:04.565101020-04:00&quot;</span> level=info msg=<span class="string">&quot;Default bridge (docker0) is assigned with... address&quot;</span></span><br><span class="line">Sep 17 22:51:07 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:07.896283158-04:00&quot;</span> level=info msg=<span class="string">&quot;Loading containers: done.&quot;</span></span><br><span class="line">Sep 17 22:51:07 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:07.968520229-04:00&quot;</span> level=info msg=<span class="string">&quot;Docker daemon&quot;</span> commit=369ce74a3c graphdri...n=19.03.6</span><br><span class="line">Sep 17 22:51:07 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:07.970779971-04:00&quot;</span> level=info msg=<span class="string">&quot;Daemon has completed initialization&quot;</span></span><br><span class="line">Sep 17 22:51:08 master systemd[1]: Started Docker Application Container Engine.</span><br><span class="line">Sep 17 22:51:08 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:08.146697185-04:00&quot;</span> level=info msg=<span class="string">&quot;API listen on /var/run/docker.sock&quot;</span></span><br><span class="line">Sep 17 22:51:08 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:08.159226282-04:00&quot;</span> level=info msg=<span class="string">&quot;API listen on [::]:2375&quot;</span></span><br><span class="line">Sep 17 22:51:08 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:51:08.159299588-04:00&quot;</span> level=info msg=<span class="string">&quot;API listen on var/run/docker.sock&quot;</span></span><br><span class="line">Sep 17 22:57:01 master dockerd[970]: time=<span class="string">&quot;2023-09-17T22:57:01.115190903-04:00&quot;</span> level=info msg=<span class="string">&quot;Attempting next endpoint for pull after e...quired\n&quot;</span></span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure><p>查看地址端口监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment">#  netstat -nltup |grep 2375</span></span><br><span class="line">tcp6       0      0 :::2375                 :::*                    LISTEN      970/dockerd</span><br></pre></td></tr></table></figure><p>远程连接 Docker TCP 查看 Docker 信息</p><p>在另外一台安装 Docker 的宿主机连接(从 192.168.80.100 客户端远程到 192.168.80.101 服务端)<br>192.168.80.101 需要安装 Docker 客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@node-1 ~]<span class="comment"># docker -H 192.168.80.101:2375 info</span></span><br><span class="line">Containers: 12</span><br><span class="line"> Running: 0</span><br><span class="line"> Paused: 0</span><br><span class="line"> Stopped: 12</span><br><span class="line">Images: 1</span><br><span class="line">Server Version: 19.03.4</span><br><span class="line">Storage Driver: overlay2</span><br><span class="line"> Backing Filesystem: extfs</span><br><span class="line"> Supports d_type: <span class="literal">true</span></span><br><span class="line"> Native Overlay Diff: <span class="literal">true</span></span><br><span class="line">Logging Driver: json-file</span><br><span class="line">Cgroup Driver: cgroupfs</span><br><span class="line">Plugins:</span><br><span class="line"> Volume: <span class="built_in">local</span></span><br><span class="line"> Network: bridge host ipvlan macvlan null overlay</span><br><span class="line">Swarm: inactive</span><br><span class="line">Kernel Version: 3.10.0-862.el7.x86_64</span><br><span class="line">Operating System: CentOS Linux 7 (Core)</span><br><span class="line">OSType: linux</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Number of Docker Hooks: 3</span><br><span class="line">CPUs: 1</span><br><span class="line">Total Memory: 3.685 GiB</span><br><span class="line">Name: master-1</span><br><span class="line">Docker Root Dir: /var/lib/docker</span><br><span class="line">Registry: https://index.docker.io/v1/</span><br></pre></td></tr></table></figure><p>远程连接查看 Docker Images</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@node-1 ~]<span class="comment"># docker -H 192.168.80.101:2375 images</span></span><br><span class="line">REPOSITORY TAG IMAGE ID CREATED SIZE</span><br><span class="line">hello-world latest fce289e99eb9 14 months ago 1.84kB</span><br><span class="line"><span class="comment">#远程启动容器</span></span><br><span class="line">[root@node-1 ~]<span class="comment"># docker -H 192.168.80.101:2375 ps --all</span></span><br><span class="line">[root@node-1 ~]<span class="comment"># docker -H 192.168.80.101:2375 start 8a9ec62bea66</span></span><br></pre></td></tr></table></figure><hr><h3 id="Docker-应用程序运行条件"><a href="#Docker-应用程序运行条件" class="headerlink" title="Docker 应用程序运行条件"></a>Docker 应用程序运行条件</h3><ol><li>计算机硬件: CPU、内存、磁盘、显卡、网卡(物理机&#x2F;虚拟机)。</li><li>支持运行 Docker 的操作系统 (NS、Cgroups、OverlayFS)。</li><li>安装 Docker 服务，并且能够正常运行。<br>4）需要可以运行在 Docker 里面的镜像, 镜像来自本地、docker hub、远程私有仓库。</li><li>在镜像加载需要运行的程序（最终目的）。</li></ol>]]></content>
      
      
      <categories>
          
          <category> environment </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
            <tag> container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure OpenAI Begining</title>
      <link href="/2023/09/14/ms/openai/1/"/>
      <url>/2023/09/14/ms/openai/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/openai/azure_openai.png"><br>Azure OpenAI 服务通过 OpenAI GPT-4、GPT-3、Codex 和 DALL-E 模型为客户提供高级语言 AI，并能够实现 Azure 的安全性和企业前景。 Azure OpenAI 与 OpenAI 共同开发 API，确保兼容性的同时能够实现二者之间的平稳过渡。<br>使用 Azure OpenAI，客户可在运行与 OpenAI 相同的模型时获得 Microsoft Azure 的安全功能。 Azure OpenAI 提供专用网络、区域可用性和负责任 AI 内容筛选功能。</p><span id="more"></span><h3 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h3><p>深度学习（Deep Learning）（也称为深度结构学习【Deep Structured Learning】、层次学习【Hierarchical Learning】或者是深度机器学习【Deep Machine Learning】）是⼀类算法集合，是机器学习的⼀个分⽀。</p><ul><li><strong>定义</strong>：深度学习是一种机器学习方法，它试图通过模拟人类大脑神经网络的工作方式来学习和理解数据。深度学习模型通常包括多层神经网络，这些网络可以自动从数据中提取特征并进行预测或分类。</li><li><strong>应用</strong>：深度学习已经在计算机视觉、自然语言处理、语音识别、推荐系统等领域取得了巨大的成功。一些著名的深度学习架构包括卷积神经网络（CNN）、循环神经网络（RNN）和变换器（Transformer）等。</li><li><strong>训练方式</strong>：深度学习模型通常通过监督学习进行训练，即提供输入和相应的目标输出，然后模型通过损失函数来调整自己的权重以最小化预测错误。</li></ul><hr><h3 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h3><ul><li><strong>定义</strong>：强化学习是一种机器学习范式，其中智能体通过与环境互动来学习如何做出决策以最大化累积奖励。强化学习的目标是找到一个策略，该策略可以在不断的试验和错误中改进，以获得最大的奖励。</li><li><strong>应用</strong>：强化学习在自动驾驶、游戏玩法、机器人控制、金融交易等领域有广泛的应用。例如，AlphaGo就是一个使用强化学习技术的国际象棋和围棋程序。</li><li><strong>训练方式</strong>：强化学习模型通常不依赖于带有标签的数据，而是通过试错和探索来学习。模型根据环境的反馈，即奖励信号，来调整策略，以获得更好的奖励。</li></ul><hr><h3 id="迁移学习"><a href="#迁移学习" class="headerlink" title="迁移学习"></a>迁移学习</h3><ul><li><strong>定义</strong>：迁移学习是一种机器学习方法，旨在通过将一个领域或任务中学到的知识应用于另一个相关的领域或任务，来提高性能。迁移学习的关键思想是，通过利用已有的知识，可以加速新领域或任务的学习过程。</li><li><strong>应用</strong>：迁移学习广泛应用于自然语言处理、计算机视觉、医疗诊断等领域。例如，可以使用在大规模图像分类任务上训练的模型来加速小规模图像分类任务的训练，从而节省时间和资源。</li><li><strong>方法</strong>：迁移学习的方法包括特征提取、模型微调和知识传输等技术。特征提取可以使用从源任务中学到的特征来表示目标任务的数据，模型微调可以通过微调源任务的模型权重来适应目标任务，知识传输可以将源任务的模型层次或知识结构应用于目标任务。</li></ul><hr><h3 id="元学习"><a href="#元学习" class="headerlink" title="元学习"></a>元学习</h3><ul><li><strong>定义</strong>：元学习是一种机器学习方法，旨在训练模型以在面对新任务时更快地适应和学习。元学习的目标是使模型能够在只有少量训练示例的情况下快速学习新任务，而不是依赖大量的训练数据。</li><li><strong>应用</strong>：元学习通常用于具有快速适应性要求的领域，如机器人控制、优化问题、少样本学习等。例如，元学习可以用于训练一个模型，使其能够在看到几个样本后快速识别新的手写数字。</li><li><strong>方法</strong>：元学习的方法包括模型架构设计、损失函数设计和元学习算法的开发。一种常见的元学习方法是元学习优化器，它可以训练模型以快速适应不同的任务。</li></ul><hr><h3 id="LLM"><a href="#LLM" class="headerlink" title="LLM"></a>LLM</h3><p>大型语言模型，也称大语言模型、大模型（Large Language Model，LLM；Large Language Models，LLMs)。<br>大语言模型是一种深度学习模型，特别是属于自然语言处理（NLP）的领域，一般是指包含数干亿（或更多）参数的语言模型，这些参数是在大量文本数据上训练的，例如模型GPT-3，PaLM，LLaMA等，大语言模型的目的是理解和生成自然语言，通过学习大量的文本数据来预测下一个词或生成与给定文本相关的内容。<br>可以这么通俗的理解：<strong>如果一个模型”足够大”，那它就可以称为大模型</strong>。</p><p>GPT，全称”Generative Pre-training Transformer”</p><p><img src="/images/openai/gpt.png"><br>补充Transformer架构：<br>Transformer 架构是一种用于自然语言处理（NLP）和其他序列数据处理任务的深度学习模型架构，最早由Vaswani等人于2017年提出。它的主要特点是使用自注意力机制（Self-Attention Mechanism）来处理输入序列，使得模型能够同时考虑序列中所有位置的信息，而无需依赖于固定的滑动窗口或卷积核。</p><p>以下是 Transformer 架构的一些关键组成部分和特点：</p><ol><li><strong>自注意力机制</strong>：Transformer 使用自注意力机制来计算输入序列中不同位置之间的关联性。这意味着模型可以为每个输入位置分配不同的注意权重，从而在处理序列时捕捉到全局信息。自注意力机制是 Transformer 架构的核心部分，它有助于解决长距离依赖性问题。</li><li><strong>多头自注意力</strong>：Transformer 中的自注意力机制通常是多头的，这意味着模型学习多组不同的注意权重，以便在不同的表示空间中捕捉不同的关系。多头自注意力机制有助于模型处理多种关系和特征。</li><li><strong>位置编码</strong>：由于 Transformer 不使用递归或卷积操作，因此需要将序列中的位置信息引入模型。通常，位置编码被添加到输入嵌入中，以便模型了解每个位置在序列中的相对位置。</li><li><strong>残差连接和层归一化</strong>：Transformer 中的每个子层都包括残差连接和层归一化，这有助于解决梯度消失和梯度爆炸的问题，使得训练更加稳定。</li><li><strong>编码器和解码器</strong>：Transformer 架构通常包括编码器和解码器两个部分，分别用于处理输入序列和生成输出序列。这使得 Transformer 在机器翻译和文本生成等任务中非常有效。</li><li><strong>注意力遮蔽（Masked Attention）</strong>：在解码器中，为了保持自注意力的因果关系，常常需要在计算注意力时遮蔽未来位置的信息，以便只依赖于已经生成的部分。</li></ol><p>LLM的特点：</p><ol><li>大规模训练数据：LLM的训练需要大规模的文本数据作为语料，这些数据可以是从互联网上抓取的网页、新闻文章、书籍等。大规模训练数据可以提供丰富的语言知识和上下文信息，有助于模型学习到更准确的语言模式和规律。</li><li>深度神经网络架构：LLM通常采用深度神经网络作为模型架构，其中常见的是基于循环神经网络（RNN）或其变种（如LSTM、GRU）的模型。这是因为RNN能够处理序列数据，并具有记忆能力，能够捕捉到文本中的上下文信息。</li><li>自监督学习：LLM的训练过程通常采用自监督学习的方法。自监督学习是指利用模型自身生成的文本作为训练目标，通过最大化预测下一个单词的概率来进行训练。模型通过前面的单词预测下一个单词，并将预测结果与真实的下一个单词进行比较，通过反向传播算法来更新模型的参数，不断优化模型的预测能力。</li><li>预训练和微调：LLM的训练通常分为两个阶段：预训练和微调。预训练阶段使用大规模的无标签数据进行训练，以学习到通用的语言表示。然后，在预训练好的模型基础上，使用有标签的任务数据进行微调，以适应具体的任务和领域。</li><li>生成文本：训练完成的LLM可以用于生成文本。给定一个初始文本序列，模型根据已有的上下文信息，预测下一个单词，并将预测结果作为输入与已有的文本序列拼接，再次进行预测，重复该过程直到生成所需长度的文本。<br>LLM的优点是可以生成高质量的自然语言文本，具有很强的语言模型能力。然而，LLM也面临一些挑战，如训练时间长、资源消耗大、对大规模数据的依赖等。因此，在实际应用中需要权衡利弊，并根据具体需求选择合适的模型和训练策略。</li></ol><hr><h3 id="嵌入模型和补全模型"><a href="#嵌入模型和补全模型" class="headerlink" title="嵌入模型和补全模型"></a>嵌入模型和补全模型</h3><p>嵌入模型（Embedding Model）和补全模型（Completion Model）是深度学习领域中的两种不同类型的模型，它们用于不同的任务和应用。</p><p><strong>嵌入模型（Embedding Model）</strong>：</p><ol><li><strong>定义</strong>：嵌入模型是一种用于将高维数据映射到低维表示的模型。它通过学习数据的嵌入（embedding）表示，将数据的特征映射到一个连续的向量空间中，从而捕获数据的语义信息。</li><li><strong>应用</strong>：嵌入模型常常用于自然语言处理（NLP）和推荐系统等领域。在NLP中，词嵌入模型（如Word2Vec、GloVe）将单词映射到低维向量空间，以便在计算单词之间的语义相似度时更加有效。在推荐系统中，用户和物品的嵌入模型可以用于学习用户兴趣和物品特征。</li><li><strong>训练方式</strong>：嵌入模型通常通过大规模数据集进行无监督训练。训练过程旨在最大化或最小化特定的相似度或损失函数，以使嵌入向量能够捕获数据之间的关系。</li><li><strong>嵌入模型的例子</strong>：词嵌入模型在自然语言处理中的应用。</li></ol><ul><li><strong>任务</strong>：文本分类。</li><li><strong>示例</strong>：假设我们有一个文本分类任务，需要判断一篇新闻文章的主题。为了将文本数据表示成机器学习模型可以理解的形式，我们可以使用词嵌入模型，如Word2Vec。这个模型将单词映射到低维向量空间，使得相似含义的单词在向量空间中更接近。通过将文章中的单词嵌入向量取平均或进行其他组合，我们可以将文章表示成一个连续的向量，然后用于文本分类任务。</li></ul><hr><p><strong>补全模型（Completion Model）</strong>：</p><ol><li><strong>定义</strong>：补全模型是一种用于预测、生成或填补缺失数据的模型。它的目标是根据给定的部分信息来生成完整的数据。</li><li><strong>应用</strong>：补全模型在图像生成、自动文本生成、音频恢复、推荐系统中的填充用户-物品关系矩阵等任务中有广泛应用。例如，生成对抗网络（GANs）是一种常用于图像生成和生成式模型训练的补全模型。</li><li><strong>训练方式</strong>：补全模型的训练方式因任务而异。例如，在图像生成任务中，可以使用GANs进行对抗训练，其中生成器模型试图生成逼真的图像，而判别器模型试图区分生成的图像和真实图像。</li><li><strong>补全模型的例子</strong>：生成对抗网络（GANs）在图像生成中的应用。</li></ol><ul><li><strong>任务</strong>：生成逼真的人脸图像。</li><li><strong>示例</strong>：假设我们希望生成逼真的人脸图像，但我们只有有限数量的训练数据。我们可以使用生成对抗网络（GANs）来解决这个问题。GAN包括一个生成器和一个判别器，它们在对抗过程中相互训练。生成器负责生成图像，而判别器负责区分生成的图像和真实的图像。随着训练的进行，生成器逐渐学会生成逼真的人脸图像，从而可以用于图像生成任务。</li></ul><hr><h3 id="Fine-tune"><a href="#Fine-tune" class="headerlink" title="Fine-tune"></a>Fine-tune</h3><p>“Fine-tune” 是一个在机器学习和深度学习中经常使用的术语，它指的是在一个已经训练过的模型基础上，继续对模型的参数进行微小的调整，以适应特定任务或数据集。Fine-tuning通常用于以下情况：</p><ol><li><strong>迁移学习</strong>：在迁移学习中，一个已经在一个任务或领域上训练得很好的模型可以被复用，并在不同但相关的任务或领域上进行 fine-tune，以加速训练并提高性能。这可以通过微调模型的权重来实现，使其适应新任务的需求。</li><li><strong>小样本学习</strong>：当你面对的任务有非常有限的训练数据时，可以使用一个在大规模数据上预训练的模型，然后在小样本数据上 fine-tune。通过利用预训练模型的知识，可以更好地适应小样本数据，提高模型的性能。</li><li><strong>个性化推荐</strong>：在推荐系统中，可以使用一个通用的模型，如协同过滤或内容过滤，然后根据用户的行为和反馈信息对模型进行 fine-tune，以提供个性化的推荐结果。</li></ol><hr><h3 id="AML-REST-API"><a href="#AML-REST-API" class="headerlink" title="AML REST API"></a>AML REST API</h3><p>记录一个使用OpenAI做聊天补全的API</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">POST https<span class="punctuation">:</span><span class="comment">//lalulasi2.openai.azure.com/openai/deployments/my-first-gpt-model/chat/completions?api-version=2023-08-01-preview</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;system&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Please be my assistant.&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">Response<span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chatcmpl-7ywyPDC4uUmbJM2AoJFyapyfjgdsV&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chat.completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1694760729</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-35-turbo-16k&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prompt_filter_results&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;prompt_index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;content_filter_results&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;hate&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;self_harm&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sexual&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;violence&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;finish_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stop&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Of course! I&#x27;m here to help you. What do you need assistance with?&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;content_filter_results&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;hate&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;self_harm&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sexual&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;violence&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;filtered&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;safe&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;usage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;completion_tokens&quot;</span><span class="punctuation">:</span> <span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prompt_tokens&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total_tokens&quot;</span><span class="punctuation">:</span> <span class="number">29</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI&amp;IOT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> microsoft </tag>
            
            <tag> Azure </tag>
            
            <tag> OpenAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure Machine Learning Begining</title>
      <link href="/2023/09/14/ms/ml/1/"/>
      <url>/2023/09/14/ms/ml/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/machinelearning/1.jpg"><br>Azure Machine Learning（Azure ML）是微软Azure云平台上的一项机器学习服务，它旨在简化和加速机器学习模型的开发、训练、部署和管理。</p><span id="more"></span><h3 id="AML"><a href="#AML" class="headerlink" title="AML"></a>AML</h3><p>Azure ML提供了一整套工具和资源，帮助数据科学家和开发人员更轻松地构建和运行机器学习项目，无论是针对传统的机器学习任务还是深度学习任务。</p><hr><h3 id="数据、算法、计算力（人工智能）"><a href="#数据、算法、计算力（人工智能）" class="headerlink" title="数据、算法、计算力（人工智能）"></a>数据、算法、计算力（人工智能）</h3><p>计算⼒之CPU、GPU对⽐：<br>CPU主要适合I\O密集型的任务<br>GPU主要适合计算密集型任务</p><p>什么类型的程序适合在GPU上运⾏？<br>（1）计算密集型的程序。<br>所谓计算密集型(Compute-intensive)的程序，就是其⼤部分运⾏时间花在了寄存器<br>运算上，寄存器的速度和处理器的速度相当，从寄存器读写数据⼏乎没有延时。可<br>以做⼀下对⽐，读内存的延迟⼤概是⼏百个时钟周期；读硬盘的速度就不说了，即<br>便是SSD, 也实在是太慢了。<br>（2）易于并⾏的程序。<br>GPU其实是⼀种SIMD(Single Instruction Multiple Data)架构， 他有成百上千个<br>核，每⼀个核在同⼀时间最好能做同样的事情。</p><h3 id="什么是机器学习"><a href="#什么是机器学习" class="headerlink" title="什么是机器学习"></a>什么是机器学习</h3><p>机器学习是从数据中⾃动分析获得模型，并利⽤模型对未知数据进⾏预测。</p><h3 id="机器学习工作流程"><a href="#机器学习工作流程" class="headerlink" title="机器学习工作流程"></a>机器学习工作流程</h3><p><img src="/images/machinelearning/process.png"></p><hr><h3 id="数据与特征工程"><a href="#数据与特征工程" class="headerlink" title="数据与特征工程"></a>数据与特征工程</h3><p>数据基本处理<br>即对数据进⾏缺失值、去除异常值等处理<br>特征⼯程<br>什么是特征⼯程<br>特征⼯程(Feature Engineering)是使⽤专业背景知识和技巧处理数据，使得特征能<br>在机器学习算法上发挥更好的作⽤的过程。</p><p>注：业界⼴泛流传：数据和特征决定了机器学习的上限，⽽模型和算法只是<br>逼近这个上限⽽已。</p><hr><h3 id="机器学习算法分类"><a href="#机器学习算法分类" class="headerlink" title="机器学习算法分类"></a>机器学习算法分类</h3><table><thead><tr><th></th><th>In</th><th>Out</th><th>目的</th><th>案例</th></tr></thead><tbody><tr><td>监督学习(supervisedlearning)</td><td>有标签</td><td>有反馈</td><td>预测结果</td><td>猫狗分类，房价预测</td></tr><tr><td>⽆监督学习(unsupervisedlearning)</td><td>⽆标签</td><td>⽆反馈</td><td>发现潜在结构</td><td>“物以类聚，⼈以群分”</td></tr><tr><td>半监督学习(SemiSupervisedLearning)</td><td>部分有标签，部分⽆标签</td><td>有反馈</td><td>降低数据标记的难度</td><td></td></tr><tr><td>强化学习(reinforcementlearning)</td><td>决策流程及激励系统</td><td>⼀系列⾏动</td><td>⻓期利益最⼤化</td><td>学下棋</td></tr></tbody></table><hr><h3 id="模型评估"><a href="#模型评估" class="headerlink" title="模型评估"></a>模型评估</h3><p>模型评估是模型开发过程不可或缺的⼀部分。它有助于发现表达数据的最佳模型和所选模型将来⼯作的性能如何。<br>按照数据集的⽬标值不同，可以把模型评估分为分类模型评估和回归模型评估。</p><ul><li>分类模型评估</li></ul><p><img src="/images/machinelearning/cancer.png"></p><p>准确率<br>预测正确的数占样本总数的⽐例。<br>其他评价指标：精确率、召回率、F1-score、AUC指标等</p><ul><li>回归模型评估</li></ul><p><img src="/images/machinelearning/house.png"></p><p>均⽅根误差（Root Mean Squared Error，RMSE）<br>RMSE是⼀个衡量回归模型误差率的常⽤公式。 不过，它仅能⽐较误差是相同<br>单位的模型。<br>RMSE &#x3D;a 为真实值；p 为预测值</p><p>举例：<br>假设上⾯的房价预测，只有五个样本，对应的<br>真实值为：100,120,125,230,400<br>预测值为：105,119,120,230,410</p><p>那么使⽤均⽅根误差求解得：</p><p><img src="/images/machinelearning/%E5%9D%87%E6%96%B9%E6%A0%B9.png"></p><p>其他评价指标：<br>相对平⽅误差（Relative Squared Error，RSE）、<br>平均绝对误差（Mean Absolute Error，MAE)、<br>相对绝对误差（Relative Absolute Error，RAE)</p><ul><li>拟合</li></ul><p>模型评估⽤于评价训练好的的模型的表现效果，其表现效果⼤致可以分为两类：过<br>拟合、⽋拟合。</p><ul><li>⽋拟合</li></ul><p>因为机器学习到的天鹅特征太少了，导致区分标准太粗糙，不能准确识别出天鹅</p><ul><li>过拟合</li></ul><p>所建的机器学习模型或者是深度学习模型在训练样本中表<br>现得过于优越，导致在测试数据集中表现不佳。</p><p>机器已经基本能区别天鹅和其他动物了。然后，很不巧已有的天鹅图⽚全是⽩天鹅<br>的，于是机器经过学习后，会认为天鹅的⽻⽑都是⽩的，以后看到⽻⽑是⿊的天鹅<br>就会认为那不是天鹅。</p><hr><h3 id="超参数"><a href="#超参数" class="headerlink" title="超参数"></a>超参数</h3><p>在机器学习中，超参数（Hyperparameters）是指那些不能通过模型训练学习得到的参数，需要人工设定的参数。超参数对于模型的性能和效果有着重要的影响，因此其选择和调整是机器学习中的重要任务。</p><p>常见的超参数包括学习率、正则化参数、迭代次数、批量大小、隐藏层的神经元数量等。这些超参数的选择会直接影响模型的性能和训练过程。不同的超参数设定可能会导致模型的欠拟合或过拟合，因此需要通过实验和验证来选择最佳的超参数组合。</p><hr><h3 id="数据漂移"><a href="#数据漂移" class="headerlink" title="数据漂移"></a>数据漂移</h3><p>数据漂移（Data Drift）是指在机器学习模型部署后，训练数据和实际应用数据之间的分布发生变化的现象。简单来说，数据漂移是指模型训练时使用的数据与实际应用时的数据不一致的情况。</p><p>数据漂移对机器学习模型的影响可以是两种情况：</p><ol><li>概念漂移（Concept Drift）：概念漂移是指实际应用中的目标变量或决策边界发生变化的情况。例如，在一个电商推荐系统中，用户的偏好可能会随着时间的推移而发生变化，导致模型在推荐时的准确性下降。</li><li>特征漂移（Feature Drift）：特征漂移是指实际应用中的特征分布发生变化的情况。例如，在一个航空公司的客户分类模型中，如果新的特征数据中包含了之前未见过的特征，那么模型就会面临特征漂移的问题。</li></ol><hr><h3 id="Azure中的ML"><a href="#Azure中的ML" class="headerlink" title="Azure中的ML"></a>Azure中的ML</h3><p>Azure Studio中各个标签</p><p><img src="/images/machinelearning/Azure_ML.png"></p><p>按上述过程和特点绘制一个Azure中ML的流程。</p><p><img src="/images/machinelearning/process_on_Azure.png"></p><hr><h3 id="AML-REST-API"><a href="#AML-REST-API" class="headerlink" title="AML REST API"></a>AML REST API</h3><p>记录一个获取Azure ML jobs的API</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">GET https<span class="punctuation">:</span><span class="comment">//management.azure.com/subscriptions/4ee172cf-2c1a-444b-94ec-0c49051f7fda/resourceGroups/junluo-org/providers/Microsoft.MachineLearningServices/workspaces/junluoworkspace/jobs/985752e0-9a61-40da-813f-8caa9732b5a0?api-version=2023-04-01</span></span><br><span class="line">Authorization<span class="punctuation">:</span> Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuY29yZS53aW5kb3dzLm5ldCIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0Ny8iLCJpYXQiOjE2OTQ3NjAxNDQsIm5iZiI6MTY5NDc2MDE0NCwiZXhwIjoxNjk0NzY1NTE5LCJhY3IiOiIxIiwiYWlvIjoiQVlRQWUvOFVBQUFBeFRqOWFpUE9ldExiN3V6UzAvRW1zTENFc3l5WngrOHZMMGtkT3piRzFIdUtwdnpKOVcwaTAzU3VQWmlnYUsxMjdwWG9YKzlMa2t6MnVkOCtWTTRKbEM1cFBHWE1VRXR1RDJ5T28zclpkQndZd0IyZ1QrbVV0ZlVFZWpNWVFUQmh2WE9JMVBRbHkwNS9yemlvYzUvbDZiQXlLS0RuaGhVU2tPblJuYi9qa0FRPSIsImFtciI6WyJyc2EiLCJtZmEiXSwiYXBwaWQiOiIxOGZiY2ExNi0yMjI0LTQ1ZjYtODViMC1mN2JmMmIzOWIzZjMiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6IjNmZDUxNmVmLTkwZmUtNGI1Zi05NGI5LTRiYjZhZWE1ZmFjMSIsImZhbWlseV9uYW1lIjoiTHVvIiwiZ2l2ZW5fbmFtZSI6Ikp1biIsImdyb3VwcyI6WyJlN2M0M2QwMC00MjAwLTQ0ZmUtOGJkYi1kNDhmYzQ4NDFlMmEiLCJjZmZiZWIwNi05MmFjLTRlNzgtYTQ0NS05ZDM0NTMyZGMxYmMiLCI4YjYzZDAwYi1hOTUyLTQwYTMtOTNjMy0zMDhlMjVkNjc5NTIiLCIyODQ2MTkwZC0wNWRjLTQwNDgtOTBiYy03ZTIzNmYzNGQ4NGIiLCI1Y2I0ODExMS1kODdhLTQ2YjEtYTI4Mi0zNGFmY2UyOTgyYTciLCIwYjk0MWYxNS1jMmUyLTQ5ODktYjJhZi02YmE3NDg2ZWI5NGUiLCJkZjRlZGExNS02YmY3LTQzZGMtOGRmZi03Zjg4ZTA0YzE3NDUiLCJjZDJkMDIxZC1mMDZjLTRmMDYtOTU5Ni1hZjVkNTMwZTc0NWMiLCI3M2I3NGExZC01YWRmLTQzNTUtYjYxZS05YzExZTE1M2QwNWQiLCI0YzY3YjMxZi05ZmQ3LTQ1ODUtYmFkZC1lNGUxOGUxNDk1MDQiLCIxNGRlNGEyNy0yYmM2LTRkZmItYjE1NC03MzgxMjY5NjJkYTMiLCIyMjI1NTQyOC0zYmI3LTQxMGMtOTBiYi00NWNmYWJhMDEwM2YiLCIzOWRlYzUyOC0zYTgwLTQwYzYtYWJlMy1lZTQ1ZjQwZmQ3ZTYiLCI2ZjQzNDgyYS1mYWM1LTQyOGYtYmVkNy01ODVlOTkwNzkxM2MiLCIwM2RlMzMyZS1hYjJmLTRlMTQtYjU1OC05ZTNhNjQ4YjRmODQiLCI3NzI1ZjMyZi00ZjM4LTQ0OWYtYTNjMS05NGQ4NzU1YTg3ZjciLCJiZjEzM2EzMC0zNDg4LTRhMWYtODQ3NC0zMTQxNGZkMzUzYWYiLCJmYmNlYTMzMi01NGVhLTQzNjYtODc2MS0zZDliOGRmYmZhNjQiLCJmZGZhZGEzNC02NGZmLTRmMWItOGYwMS1iOWE5ZGU4NjJlNWIiLCI0YWM4NTM0ZC1kZWQ3LTQ5YWQtOGU2MS01NzNhZjk1MjJmYWYiLCI3YmM2MTI0Zi00Yjc4LTQxZWQtOTkyYS0zZWVlYTAxNTZjMGUiLCI0OWZmMmM0Zi1kOTc5LTQ5ZTQtOWFkYy03NWE2ZmFjYjY3OGYiLCIyZmQ1NjY1Mi1kMDA1LTQwMDgtYTFmZC04Y2RhZmQ3NDU5ZjQiLCI3YjMxYTk1Mi04NzJiLTRkNWItYjhjZC05MmY5ZTUwNzdiY2UiLCI0OGUxZDQ1Mi00NDk1LTQ1ZjQtOWFkNy1mMjQxYmI2MDAyNzUiLCI4ZjQwYWY1NS01NjE3LTQzZDAtODA1Mi0yNDQ4OGVkZDlkNjYiLCI5MWJiMDM1OC00MGQ5LTRjNGQtODllZi02ZjY2ZWQwN2U2Y2MiLCJkMWYxMWU2MC0xODNlLTQ2M2MtYWY3Ny1hMDUwY2QxMzIwNjciLCI2NDQ1NmU2OS03NWM0LTRhNDQtODkxMC0xN2Y5OTZhYWNjNzYiLCJjMTM3ZDg3Mi04ZGE2LTQ3ODAtODQ3ZC1mOTBmMzA2NWNmYzYiLCJiZThjYTM3OC1iYzc0LTQ2YzEtYjkyMi1lN2Y1NTI0ODZlZGUiLCJmY2FkMDQ3OS0zYzMyLTQxNzEtYmVjNC0zNWZjZDkyZmU5YzgiLCJkOWRkNTA3YS02OTU5LTQ3ZTUtOTM3ZS05ZDVkNzNjMWNiZGMiLCI2MmVkYmQ3Yi04ZDQ2LTRkMmMtYTVhMS1kYTViNzhiYTFkMzgiLCI1MDk2YWM3ZC02NmZhLTQxYzMtYjZjMy00ZGZhNGJmZDM2ZDQiLCI1NzI4OWY4My1lZTg1LTRjNWItYjBjMS1lOTdhNGE4MWM1NTIiLCJiNjEyNzM4Ni0xMDk0LTQ3ZDAtOTE5Ny0yYjc4MzZhOTAyYmUiLCIzNGVmN2I4Ny00YzhmLTQwZDgtYWE4NC05Y2ZkNGU0ZTQ0NDgiLCJmYzFhNDk4OC02MjY3LTRmOWQtYWI4Mi1kNWYwMmIyNGU0NWIiLCI3YWU1YjE5MC1lOTk0LTRlYTUtYmZmNi1jMjdiYmE5MzA3YTMiLCJkMmEyNmM5MS02MmNhLTRhZWUtOGU3My0zZmM5NWJiMDU0NTciLCJhNjQ4YzM5Mi0xYmZiLTRkZWYtYWFjNi0xNWE1NTcwNWMxMWUiLCIwOTc4ZjM5Ni0wOTJkLTQzZTMtYTJmZC1hNmY2OTExMGNlMzgiLCIxZTAyNjlhMC0zMDQ1LTQ0NTEtOTAyZC0wZGY2NGNhNDFjMmIiLCIxOTBlNzlhMS01ZGQzLTRhNGEtODZhZS0zMmFjM2IxNmE4YjMiLCI0NDY1ZjhhMS1iNjNmLTQ5ZmQtOWIwNC1kNjA1N2ZkMjY3NDkiLCJiMDFjMTRhNC1lNzc0LTRkN2ItYWUzNi1kNTI3Y2E2NTBlZmMiLCI4ZmMzYWZhOS1kYjQ5LTQyODAtYjI1ZC04N2IwNmNiMGIyOGQiLCI3NzZkM2ZhZC0zYmQyLTQyOWQtYjkzNC1kZmZiN2RiYTU2NzAiLCI4ZjQzNzhhZS04MWI1LTRlYjQtYTAzMi03YzdmMjQ4MGUzMzEiLCJkMWMwNTBiMC0xNzBiLTRjY2YtYjFjMS1hNDQwOTE1Njc2MTkiLCI0Y2Y0NDliMy1lNzhlLTQxMmEtOGViYy0xMGM5ZGIxOTk1ZGYiLCI1ODgwMGViNC0zOTQwLTQ5MzQtYjNlYi1kZmQyYWM2NGE4NjIiLCJlMjA1ZjZiNC04ZDBiLTQ3NGUtOTQzZS04MjRkMjFhNDA1MDYiLCIwOWYyNWViNS00YzgzLTQyOWQtODdiZC05YjUyMTljNDE2NTEiLCI3YjUzYzViNy04M2QxLTQxYzAtOWZhZS1mNzRiYWFjZjM3MTgiLCJkNmU2NGFiOC03MGExLTQ4NjUtYmI4MC0zMzIyYmI0Y2EyNWIiLCIwNTg3Y2JiOS0xOGViLTQ3YjQtYmFlOC01MzdhMjFlYjNjNjYiLCJiYzI1MWNiYy1mMzA5LTQ3MjktYmYzYi1lMWU2MmI5MjAyYWIiLCJiNmUxNmViZC1lNzBjLTQ0MzQtODE5Yi0wM2EyMDlhMzI0MmEiLCI1ODM4NGZiZS1iZTgzLTQ4MzktYWY4Mi0wMTI5YWNiZTBlNDciLCIxZGMyZjJjMC1hNGIyLTRjODktOWMxMy1mYjZiMGRhZDUzNjAiLCI2Yzk3NjRjMS1mYWUxLTQyOTYtOTE0NC1mZjM5MDg1NjE5NjQiLCI1OTM1NmZjMi01Y2IwLTQ5NjMtODg4Yi1mNDQxNGFiMTA4MmEiLCI1NWVmYTljOS05MjQ2LTQ4YmYtOTdhNC05OTg3OTc3YzRkNWQiLCIyMWY1Y2NjYS0xYTkzLTQwNjktOTM1My0xOGE3MzhlNjFjZmYiLCI2YTY1MjhkNC1iNmIzLTQ0NWQtYWEzYi04YzIzNWI2OTM4YjEiLCIxNTI2OTVkYS01NjAwLTRlMTAtOTY5NS1hYWU0YmFkZDdjMzgiLCI0YmVjYmJlMS02YWM2LTRiNDctYWQyMC1mMDE3ZjNkNmIwOGIiLCI5YmFjODBlNi03ZGFjLTRiMmQtOTEzYi0yZjZkYTgwOTNjMDEiLCJlMjA2M2VlNy1jYzIyLTRjOTYtYTJlZS02ZDRhMjllMWJlMWIiLCJjMmQyZjNlNy1hZTg1LTQwMDYtYTFkNC1hYzhkNzEwNjVkMzAiLCIxNjkyY2NmMS0wMTRhLTQzZDQtYmY4ZC1lNjUzOWYyMTM2NjMiLCIyYWI2N2VmMy0xMjAxLTQ5OTUtOGU5NC1jMWM0MmFmN2Q3YWIiLCI4ZDViZDBmMy03NzgyLTQ3YjctYTRiZS01Y2M2ZWEyMzBjYzgiLCIyYjI2YWJmNS0zYTY5LTQ4NzEtYjkzZi1iNTIxMDA5MzJjMDgiLCIxNjA2MThmOC05MDUxLTRiZTktOWFhZS1hNzQ1ZDQ1MjRkZDgiLCI0MDgwZmFmOS0zMTY0LTQ3ZmUtODMxNy00ZDI4MTEwMTM5M2QiLCJhNWY0MDVmZC1jNDVmLTQ4YzctYTU5YS04M2U3ZmZhYjgxNzMiXSwiaXBhZGRyIjoiMjQwNDpmODAxOjkwMDA6MWE6MmEyODpiYTFkOmU3MmU6MzUwZiIsIm5hbWUiOiJKdW4gTHVvIChTaGFuZ2hhaSBXaWNyZXNvZnQgQ28gTHRkKSIsIm9pZCI6IjAxYjg1Y2VhLTkxNGItNDk3OC05ZTM5LTg3YzQ1YTBhMTkzMSIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS0yMTI3NTIxMTg0LTE2MDQwMTI5MjAtMTg4NzkyNzUyNy03MDY0ODQwOCIsInB1aWQiOiIxMDAzMjAwMkRCQjlCREZDIiwicmgiOiIwLkFRRUF2NGo1Y3ZHR3IwR1JxeTE4MEJIYlIwWklmM2tBdXRkUHVrUGF3ZmoyTUJNYUFBUS4iLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzdWIiOiJ1cmNEaGhKV1kxVHZGX2t6MDRzdWdSUXlib01leVJlNWstalhuNURfSmt3IiwidGlkIjoiNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3IiwidW5pcXVlX25hbWUiOiJ2LWx1b2p1QG1pY3Jvc29mdC5jb20iLCJ1cG4iOiJ2LWx1b2p1QG1pY3Jvc29mdC5jb20iLCJ1dGkiOiJtTlFXcHN0NE8wbXExaGNfNmdjQ0FBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX3RjZHQiOjEyODkyNDE1NDd9.WFz-B_LQdDOYeiM3Ry6YqVIPNhiM6FyQxDW7o7Ja93QC3ig5hTNjlacnPpOTL<span class="number">-8</span>vFO3-y9tNNpUMFbiFaB1F1juivtD7Z-q0gzXMWRQ4i4108tHp9NwJ4iCn-b6uUGD4EbgJoT7cEQrdcGcdTwAao3BJrYxn76dYLbUe67Wraev1GAfSreKlupE57dYCmdch_3qQ58uIH9LXJ9J9YLSlcBdoA7aiBw310AAFs4uRXP8H9xiqz-DvKl<span class="number">-33</span>VwdqYIsNQ94V-ANfDH9OmJUDhNBbNdck60BpnrutMwjNjoKAkq9QKWPpfpYv9xqHjLz6XG4HRa-VYm7eASg4cXVb91pYg</span><br><span class="line"></span><br><span class="line">Response<span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/subscriptions/4ee172cf-2c1a-444b-94ec-0c49051f7fda/resourceGroups/junluo-org/providers/Microsoft.MachineLearningServices/workspaces/junluoworkspace/jobs/985752e0-9a61-40da-813f-8caa9732b5a0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;985752e0-9a61-40da-813f-8caa9732b5a0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Microsoft.MachineLearningServices/workspaces/jobs&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iris-prs&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;azureml.runsource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;azureml.PipelineRun&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;runSource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SDK&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;runType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SDK&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;azureml.parameters&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;azureml.continue_on_step_failure&quot;</span><span class="punctuation">:</span> <span class="string">&quot;False&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;azureml.continue_on_failed_optional_input&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;azureml.pipelineComponent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pipelinerun&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;azureml.pipelines.stages&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;\&quot;Initialization\&quot;:null,\&quot;Execution\&quot;:&#123;\&quot;StartTime\&quot;:\&quot;2023-09-07T06:24:19.0908771+00:00\&quot;,\&quot;EndTime\&quot;:\&quot;2023-09-07T06:32:28.4991091+00:00\&quot;,\&quot;Status\&quot;:\&quot;Failed\&quot;&#125;&#125;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;displayName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sincere_carrot_fxq6fmrk&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Failed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;experimentName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iris-prs&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;services&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Tracking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;jobServiceType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tracking&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;azureml://eastus2.api.azureml.ms/mlflow/v1.0/subscriptions/4ee172cf-2c1a-444b-94ec-0c49051f7fda/resourceGroups/junluo-org/providers/Microsoft.MachineLearningServices/workspaces/junluoworkspace?&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;errorMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;nodes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Studio&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;jobServiceType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Studio&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;endpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://ml.azure.com/runs/985752e0-9a61-40da-813f-8caa9732b5a0?wsid=/subscriptions/4ee172cf-2c1a-444b-94ec-0c49051f7fda/resourcegroups/junluo-org/workspaces/junluoworkspace&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;errorMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;nodes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;computeId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isArchived&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;identity&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;componentId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jobType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Pipeline&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jobs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;inputs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outputs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sourceJobId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;systemData&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;createdAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-09-07T06:24:17.8867689+00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;createdBy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Jun Luo&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;createdByType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;User&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI&amp;IOT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> microsoft </tag>
            
            <tag> Azure </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure Begining</title>
      <link href="/2023/09/13/ms/Azure/1/"/>
      <url>/2023/09/13/ms/Azure/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/Azure/title.png"><br>作为一个老开发，云服务也用了不少。现在从使用者变成了技术支持，尤其是接触了新的领域，从头开始记录整个学习和工作过程。</p><span id="more"></span><h3 id="开篇介绍"><a href="#开篇介绍" class="headerlink" title="开篇介绍"></a>开篇介绍</h3><p>简单的介绍让GPT帮我写吧。<br>Azure是由微软公司提供的云计算平台和服务。它是一个全球性的云计算解决方案，旨在帮助个人、组织和企业构建、部署和管理各种应用程序和服务，从简单的网站到复杂的企业级应用程序。<br>Azure是一个强大而灵活的云平台，可以帮助组织在云中构建、管理和扩展应用程序，提高效率、降低成本，并为未来的数字化转型提供支持。无论您是一家初创企业还是一家大型企业，Azure都可以提供适合您需求的云解决方案。<br>全球性覆盖：Azure拥有众多数据中心和服务器分布在全球范围内，覆盖了多个地理区域，这使得用户可以将应用程序和数据部署在离其用户最近的数据中心，以实现更低的延迟和更好的性能。<br>Azure有以下特点：<br>1.广泛的服务：Azure提供了丰富的云服务，包括计算、存储、数据库、人工智能、分析、物联网、区块链等多种类型的服务，以满足不同需求和行业的要求。<br>2.弹性伸缩：Azure允许用户根据需求快速扩展或缩减计算资源，从而降低了成本并确保应用程序的高可用性。<br>3.安全性：Azure提供了多层次的安全措施，包括身份验证、数据加密、威胁检测和防御等，以保护用户的数据和应用程序安全。<br>4.开放性：Azure支持多种编程语言、操作系统和开发工具，使开发人员可以使用他们熟悉的技术来构建应用程序。<br>5.集成和扩展：Azure与其他微软产品（如Office 365、Dynamics 365）以及第三方应用程序和服务集成紧密，帮助用户构建全面的解决方案。<br>6.计费模型：Azure提供多种计费选项，包括按使用量计费、预留实例、混合使用权等，以满足不同组织的财务需求。<br>7.生态系统：Azure拥有庞大的合作伙伴生态系统，包括独立软件供应商、咨询公司和培训提供商，可以提供技术支持和解决方案。</p><hr><h3 id="服务提供"><a href="#服务提供" class="headerlink" title="服务提供"></a>服务提供</h3><p>下图展示了Azure提供的服务（时效性无法确认，今后关注AI&amp;IOT和相关即可）<br><img src="/images/Azure/azure_services.png"></p><hr><h3 id="服务使用"><a href="#服务使用" class="headerlink" title="服务使用"></a>服务使用</h3><p>以Azure Machine Learning为例，简单看一下如何创建并使用一个服务。</p><ol><li>注册Azure账号（忽略）</li><li>下图中可以查看到一些Azure提供的服务，选择Azure机器学习<br><img src="/images/Azure/services_page.png"></li><li>填写或选择详细的创建信息，选择subscription，选择包括storage在内的各个关联服务，Azure的服务互相之间都会调用，因此在创建ML workspace时，如果不自己定义，Azure也会帮助你创建那些默认需要调用的服务，例如storage。<br><img src="/images/Azure/create_ml2.png"><br><img src="/images/Azure/create_ml_storage.png"></li><li>创建成功后，即可看到这些信息，如果作为外部的服务开发者可以下载左上角的config.json获取配置文件。<br><img src="/images/Azure/create_ml.png"></li></ol><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上是对于整体服务的简单介绍和使用，单一服务的使用并不复杂，各个服务内部需要更深入的研究和了解，目前助攻方向还是放在AML上，等整体的K8S环境搭完可以尝试配上虚拟机等服务，搭一个完整的开发环境和训练环境。但是我之前创建的VM好像在家中的网络没办法访问到，这点之后再去查看。</p>]]></content>
      
      
      <categories>
          
          <category> AI&amp;IOT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> microsoft </tag>
            
            <tag> Azure </tag>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JUC原子类</title>
      <link href="/2023/03/28/java/concurrency/4/"/>
      <url>/2023/03/28/java/concurrency/4/</url>
      
        <content type="html"><![CDATA[<p>JUC中多数类是通过volatile和CAS来实现的，CAS本质上提供的是一种无锁方案，而Synchronized和Lock是互斥锁方案; java原子类本质上使用的是CAS，而CAS底层是通过Unsafe类实现的。</p><span id="more"></span><h3 id="CAS"><a href="#CAS" class="headerlink" title="CAS"></a>CAS</h3><p>CAS全称为Compare-And-Swap，是一条CPU的原子指令，其作用是让CPU比较两个值是否相等，然后原子的更新某个位置的值，其实现方式是基于硬件平台的汇编指令，JVM只是封装了汇编调用。AtomicInteger类是使用了这些封装后的接口。</p><p>CAS操作需要输入两个数值，一个旧值(期望操作前的值)和一个新值，在操作期间先比较下在旧值有没有发生变化，如果没有发生变化，才交换成新值，发生了变化则不交换。</p><p>Java使用CAS示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CASTest</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">AtomicInteger</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">addAndGet</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i.getAndIncrement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CAS为乐观锁，synchronized为悲观锁，因此CAS性能更优。但CAS也会存在问题。</p><p>以下转载：</p><h3 id="ABA问题"><a href="#ABA问题" class="headerlink" title="ABA问题"></a>ABA问题</h3><p>因为CAS需要在操作值的时候，检查值有没有发生变化，比如没有发生变化则更新，但是如果一个值原来是A，变成了B，又变成了A，那么使用CAS进行检查时则会发现它的值没有发生变化，但是实际上却变化了。</p><p>ABA问题的解决思路就是使用版本号。在变量前面追加上版本号，每次变量更新的时候把版本号加1，那么A-&gt;B-&gt;A就会变成1A-&gt;2B-&gt;3A。</p><p>从Java 1.5开始，JDK的Atomic包里提供了一个类AtomicStampedReference来解决ABA问题。这个类的compareAndSet方法的作用是首先检查当前引用是否等于预期引用，并且检查当前标志是否等于预期标志，如果全部相等，则以原子方式将该引用和该标志的值设置为给定的更新值</p><h3 id="循环时间长开销大"><a href="#循环时间长开销大" class="headerlink" title="循环时间长开销大"></a>循环时间长开销大</h3><p>自旋CAS如果长时间不成功，会给CPU带来非常大的执行开销。如果JVM能支持处理器提供的pause指令，那么效率会有一定的提升。pause指令有两个作用：第一，它可以延迟流水线执行命令(de-pipeline)，使CPU不会消耗过多的执行资源，延迟的时间取决于具体实现的版本，在一些处理器上延迟时间是零；第二，它可以避免在退出循环的时候因内存顺序冲突(Memory Order Violation)而引起CPU流水线被清空(CPU Pipeline Flush)，从而提高CPU的执行效率。</p><h3 id="只能保证一个共享变量的原子操作"><a href="#只能保证一个共享变量的原子操作" class="headerlink" title="只能保证一个共享变量的原子操作"></a>只能保证一个共享变量的原子操作</h3><p>当对一个共享变量执行操作时，我们可以使用循环CAS的方式来保证原子操作，但是对多个共享变量操作时，循环CAS就无法保证操作的原子性，这个时候就可以用锁。</p><p>还有一个取巧的办法，就是把多个共享变量合并成一个共享变量来操作。比如，有两个共享变量i &#x3D; 2，j &#x3D; a，合并一下ij &#x3D; 2a，然后用CAS来操作ij。</p><p>从Java 1.5开始，JDK提供了<strong>AtomicReference</strong>类来保证引用对象之间的原子性，就可以把多个变量放在一个对象里来进行CAS操作</p><p>上文我们了解到Java原子类是通过UnSafe类实现的。</p><hr><p>著作权归@pdai所有<br>原文链接：<a href="https://pdai.tech/md/java/thread/java-thread-x-juc-AtomicInteger.html">https://pdai.tech/md/java/thread/java-thread-x-juc-AtomicInteger.html</a></p><hr><h3 id="AtomicInteger常用API"><a href="#AtomicInteger常用API" class="headerlink" title="AtomicInteger常用API"></a>AtomicInteger常用API</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前的值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">()</span></span><br><span class="line"><span class="comment">//获取当前的值，并设置新的值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getAndSet</span><span class="params">(<span class="type">int</span> newValue)</span></span><br><span class="line"><span class="comment">//获取当前的值，并自增</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getAndIncrement</span><span class="params">()</span></span><br><span class="line"><span class="comment">//获取当前的值，并自减</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getAndDecrement</span><span class="params">()</span></span><br><span class="line"><span class="comment">//获取当前的值，并加上预期的值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">getAndAdd</span><span class="params">(<span class="type">int</span> delta)</span></span><br><span class="line"><span class="comment">//最终会设置成newValue,使用lazySet设置值后，可能导致其他线程在之后的一小段时间内还是可以读到旧的值。</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">lazySet</span><span class="params">(<span class="type">int</span> newValue)</span></span><br></pre></td></tr></table></figure><h3 id="AtomicReference"><a href="#AtomicReference" class="headerlink" title="AtomicReference"></a>AtomicReference</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AtomicReferenceTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;a&quot;</span>, <span class="number">15</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;b&quot;</span>, <span class="number">16</span>);</span><br><span class="line"><span class="comment">// 初始student1</span></span><br><span class="line">        AtomicReference&lt;Student&gt; studentReference = <span class="keyword">new</span> <span class="title class_">AtomicReference</span>&lt;&gt;(student1);</span><br><span class="line"><span class="comment">// student1与student2不相等，所以会进行交换</span></span><br><span class="line">        studentReference.compareAndSet(student1, student2);</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student3</span> <span class="operator">=</span> studentReference.get();</span><br><span class="line">        System.out.println(student3);</span><br><span class="line"><span class="comment">// 此时的student3与student2不相等返回false</span></span><br><span class="line">        System.out.println(student3.equals(student1));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">结果</span></span><br><span class="line"><span class="comment">Student&#123;name=&#x27;b&#x27;, age=16&#125;</span></span><br><span class="line"><span class="comment">false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="原子更新字段类"><a href="#原子更新字段类" class="headerlink" title="原子更新字段类"></a><strong><strong>原子更新字段类</strong></strong></h3><ul><li>AtomicIntegerFieldUpdater: 原子更新整型的字段的更新器。</li><li>AtomicLongFieldUpdater: 原子更新长整型字段的更新器。</li><li>AtomicReferenceFieldUpdater: 上面已经说过此处不在赘述。</li></ul><p>类的字段必须满足以下条件</p><ul><li>原子更新字段类都是抽象类，每次使用的时候必须使用静态方法newUpdater()创建一个更新器，并且需要设置想要更新的类和属性。</li><li>更新类的字段必须使用public volatile修饰。</li></ul><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserData</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">volatile</span> <span class="type">int</span> <span class="variable">publicIntField</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">volatile</span> <span class="type">int</span> <span class="variable">protectedIntField</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="type">int</span> <span class="variable">privateIntField</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">volatile</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">staticIntField</span> <span class="operator">=</span> <span class="number">156</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">volatile</span> <span class="type">Integer</span> <span class="variable">integerVar</span> <span class="operator">=</span> <span class="number">48</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">volatile</span> <span class="type">Long</span> <span class="variable">longVar</span> <span class="operator">=</span> <span class="number">56L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fieldName</span> <span class="operator">=</span> <span class="string">&quot;publicIntField&quot;</span>;</span><br><span class="line">        <span class="comment">// 设置更新的字段是publicIntField</span></span><br><span class="line">        AtomicIntegerFieldUpdater&lt;UserData&gt; userDataAtomicIntegerFieldUpdater =</span><br><span class="line">                AtomicIntegerFieldUpdater.newUpdater(UserData.class, fieldName);</span><br><span class="line">        <span class="type">UserData</span> <span class="variable">userData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserData</span>();</span><br><span class="line">        <span class="comment">// 将字段值更新为100</span></span><br><span class="line">        userDataAtomicIntegerFieldUpdater.getAndSet(userData, <span class="number">100</span>);</span><br><span class="line">        System.out.println(userData.publicIntField);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字段有所限制</p><ul><li>字段必须是volatile类型的，在线程之间共享变量时保证立即可见.eg:volatile int value &#x3D; 3</li><li>字段的描述类型(修饰符public&#x2F;protected&#x2F;default&#x2F;private)是与调用者与操作对象字段的关系一致。也就是说调用者能够直接操作对象字段，那么就可以反射进行原子操作。但是对于父类的字段，子类是不能直接操作的，尽管子类可以访问父类的字段。</li><li>只能是实例变量，不能是类变量，也就是说不能加static关键字。</li><li>只能是可修改变量，不能使final变量，因为final的语义就是不可修改。实际上final的语义和volatile是有冲突的，这两个关键字不能同时存在。</li><li>对于AtomicIntegerFieldUpdater和AtomicLongFieldUpdater只能修改int&#x2F;long类型的字段，不能修改其包装类型(Integer&#x2F;Long)。如果要修改包装类型就需要使用AtomicReferenceFieldUpdater</li></ul><hr><p>著作权归@pdai所有<br>原文链接：<a href="https://pdai.tech/md/java/thread/java-thread-x-juc-AtomicInteger.html">https://pdai.tech/md/java/thread/java-thread-x-juc-AtomicInteger.html</a></p><hr><h3 id="AtomicStampedReference"><a href="#AtomicStampedReference" class="headerlink" title="AtomicStampedReference"></a><strong><strong>AtomicStampedReference</strong></strong></h3><p>针对变量值的元素值没有改变，但是版本号发生了改变的情况。也就是上文所说的ABA问题。此外，AtomicMarkableReference也提供了支持，但是使用的是一个boolean类型的标记。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Lock</title>
      <link href="/2023/03/24/java/concurrency/3/"/>
      <url>/2023/03/24/java/concurrency/3/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/java/lock.gif"><br>本文介绍Java.concurrent下Lock接口。</p><span id="more"></span><h3 id="synchronized与Lock比较"><a href="#synchronized与Lock比较" class="headerlink" title="synchronized与Lock比较"></a>synchronized与Lock比较</h3><p>在JDK 1.5之前，我们若想实现线程同步，只能通过synchronized关键字这一种方式来达成；底层，Java也是通过synchronized关键字来做到数据的<br>原子性维护的；synchronized关键字是JVM实现的一种内置锁，从底层角度来说，这种锁的获取与释放都是由JVM帮助我们隐式实现的。<br>从JDK 1.5开始，并发包引入了Lock锁，Lock同步锁是基于Java来实现的，因此锁的获取与释放都是通过Java代码来实现与控制的；然而，synchronized是基于底层操作系统的Mutex Lock来实现的，每次对锁的获取与释放动作都会带来用户态与内核态之间的切换，这种切换会极大地增加系统的负担；在并发量较高时，也就是说锁的竞争比较激烈时，synchronized锁在性能上的表现就非常差。</p><p>从JDK 1.6开始，synchronized锁的实现发生了很大的变化；JVM引入了相应的优化手段来提升synchronized锁的性能，这种提升涉及到偏向锁、轻量级锁及重量级锁等，从而减少锁的竞争所带来的用户态与内核态之间的切换；这种锁的优化实际上是通过Java对象头中的一些标志位来去实现的；对于锁的访问与改变，实际上都与Java对象头息息相关。</p><p>从JDK 1.6开始，对象实例在堆当中会被划分为三个组成部分：对象头、实例数据与对齐填充。对象头主要也是由3块内容来构成：</p><p>Mark Word</p><p>指向类的指针</p><p>数组长度</p><p>其中Mark Word（它记录了对象、锁及垃圾回收相关的信息，在64位的JVM中，其长度也是64bit）的位信息包括了如下组成部分：</p><ol><li>无锁标记</li><li>偏向锁标记</li><li>轻量级锁标记</li><li>重量级锁标记</li><li>GC标记</li></ol><p>对于synchronized锁来说，锁的升级主要都是通过Mark Word中的锁标志位与是否是偏向锁标志位来达成的；synchronized关键字所对应的锁都是先从偏向锁<br>开始，随着锁竞争的不断升级，逐步演化至轻量级锁，最后则变成了重量级锁。<br>对于锁的演化来说，它会经历如下阶段：<br>无锁 -&gt; 偏向锁 -&gt; 轻量级锁 -&gt; 重量级锁</p><hr><h3 id="偏向锁bias"><a href="#偏向锁bias" class="headerlink" title="偏向锁bias"></a>偏向锁bias</h3><p>针对于一个线程来说的，它的主要作用就是优化同一个线程多次获取一个锁的情况；如果一个synchronized方法被一个线程访问，那么这个方法所在的对象<br>就会在其Mark Word中将偏向锁进行标记，同时还会有一个字段来存储该线程的ID；当这个线程再次访问同一个synchronized方法时，它会检查这个对象<br>的Mark Word的偏向锁标记以及是否指向了其线程ID，如果是的话，那么该线程就无需再去进入管程（Monitor）了，而是直接进入到该方法体中。<br>如果是另外一个线程访问这个synchronized方法，那么实际情况会如何呢？<br>偏向锁会被取消掉。</p><hr><h3 id="轻量级锁"><a href="#轻量级锁" class="headerlink" title="轻量级锁"></a>轻量级锁</h3><p>适合两个线程的轮流访问，不适合多个线程的访问<br>若第一个线程已经获取到了当前对象的锁，这时第二个线程又开始尝试争抢该对象的锁，由于该对象的锁已经被第一个线程获取到，因此它是偏向锁，而第二个线程<br>在争抢时，会发现该对象头中的Mark Word已经是偏向锁，但里面存储的线程ID并不是自己（是第一个线程），那么它会进行CAS（Compare and Swap），从而<br>获取到锁，这里面存在两种情况：</p><p>获取锁成功：那么它会直接将Mark Word中的线程ID由第一个线程变成自己（偏向锁标记位保持不变），这样该对象依然会保持偏向锁的状态。</p><p>获取锁失败：则表示这时可能会有多个线程同时在尝试争抢该对象的锁，那么这时偏向锁就会进行升级，升级为轻量级锁</p><hr><h3 id="自旋锁"><a href="#自旋锁" class="headerlink" title="自旋锁"></a>自旋锁</h3><p>若自旋失败（依然无法获取到锁），那么锁就会转化为重量级锁，在这种情况下，无法获取到锁的线程都会进入到Monitor（即内核态）<br>自旋最大的一个特点就是避免了线程从用户态进入到内核态。</p><hr><h3 id="重量级锁"><a href="#重量级锁" class="headerlink" title="重量级锁"></a>重量级锁</h3><p>线程最终从用户态进入到了内核态。</p><hr><h3 id="编译器对于锁的优化措施"><a href="#编译器对于锁的优化措施" class="headerlink" title="编译器对于锁的优化措施"></a>编译器对于锁的优化措施</h3><p>锁消除技术<br>JIT编译器（Just In Time编译器）可以在动态编译同步代码时，使用一种叫做逃逸分析的技术，来通过该项技术判别程序中所使用的锁对象是否只被<br>一个线程所使用，而没有散布到其他线程当中；如果情况就是这样的话，那么JIT编译器在编译这个同步代码时就不会生成synchronized关键字所标识<br>的锁的申请与释放机器码，从而消除了锁的使用流程。</p><p>锁粗化</p><p>JIT编译器在执行动态编译时，若发现前后相邻的synchronized块使用的是同一个锁对象，那么它就会把这几个synchronized块给合并为一个较大<br>的同步块，这样做的好处在于线程在执行这些代码时，就无需频繁申请与释放锁了，从而达到申请与释放锁一次，就可以执行完全部的同步代码块，从而提升了性能。</p><p>死锁：线程1等待线程2互斥持有的资源，而线程2也在等待线程1互斥持有的资源，两个线程都无法继续执行。<br>活锁：线程持续重试一个总是失败的操作，导致无法继续执行。<br>饿死：线程一直被调度器延迟访问其赖以执行的资源，也许是调度器先于低优先级的线程而执行高优先级的线程，同时总是会有一个高优先级的线程可以执行，饿死也叫做无限延迟。</p><hr><h3 id="Lock与synchronized重要差别"><a href="#Lock与synchronized重要差别" class="headerlink" title="Lock与synchronized重要差别"></a>Lock与synchronized重要差别</h3><ol><li>锁的获取方式：前者是通过程序代码的方式由开发者手工获取，后者是通过JVM来获取（无需开发者干预）</li><li>具体实现方式：前者是通过Java代码的方式来实现，后者是通过JVM底层来实现 （无需开发者关注）</li><li>锁的释放方式：前者务必通过unlock()方法在finally块中手工释放，后者是通过JVM来释放（无需开发者关注）</li><li>锁的具体类型：前者提供了多种，如公平锁、非公平锁，后者与前者均提供了可重入锁。</li></ol><hr><h3 id="Lock使用示例"><a href="#Lock使用示例" class="headerlink" title="Lock使用示例"></a>Lock使用示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTest2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">BoundedContainer</span> <span class="variable">boundedContainer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoundedContainer</span>();</span><br><span class="line"></span><br><span class="line">        IntStream.range(<span class="number">0</span>, <span class="number">10</span>).forEach(i -&gt; <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                boundedContainer.put(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start());</span><br><span class="line"></span><br><span class="line">        IntStream.range(<span class="number">0</span>, <span class="number">10</span>).forEach(i -&gt; <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                boundedContainer.take();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BoundedContainer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] elements = <span class="keyword">new</span> <span class="title class_">String</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可重入锁</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Lock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//非空条件，唤醒take线程的条件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Condition</span> <span class="variable">notEmptyCondition</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line">    <span class="comment">//非满条件，唤醒put线程的条件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Condition</span> <span class="variable">notFullCondition</span> <span class="operator">=</span> lock.newCondition();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> elementCount; <span class="comment">// elements数组中已有的元素数量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> putIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> takeIndex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(String element)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="built_in">this</span>.lock.lock();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">this</span>.elementCount == <span class="built_in">this</span>.elements.length) &#123;</span><br><span class="line">                <span class="comment">// 当队列已满时，让非满条件等待</span></span><br><span class="line">                notFullCondition.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            elements[putIndex] = element;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (++putIndex == <span class="built_in">this</span>.elements.length) &#123;</span><br><span class="line">                putIndex = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ++elementCount;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;put method: &quot;</span> + Arrays.toString(elements));</span><br><span class="line"><span class="comment">// 通知另一个线程可以获取了</span></span><br><span class="line">            notEmptyCondition.signal();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">take</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="built_in">this</span>.lock.lock();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">0</span> == <span class="built_in">this</span>.elementCount) &#123;</span><br><span class="line">                <span class="comment">// 当队列为空时，让非满条件等待</span></span><br><span class="line">                notEmptyCondition.await();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">element</span> <span class="operator">=</span> elements[takeIndex];</span><br><span class="line"></span><br><span class="line">            elements[takeIndex] = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (++takeIndex == <span class="built_in">this</span>.elements.length) &#123;</span><br><span class="line">                takeIndex = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            --elementCount;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;take method: &quot;</span> + Arrays.toString(elements));</span><br><span class="line"><span class="comment">// 通知另一个线程往里面放数据</span></span><br><span class="line">            notFullCondition.signal();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> element;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">执行结果</span><br><span class="line">put method: [hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [hello, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">take method: [<span class="literal">null</span>, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [<span class="literal">null</span>, hello, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [<span class="literal">null</span>, hello, hello, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [<span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [<span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, hello, <span class="literal">null</span>, <span class="literal">null</span>]</span><br><span class="line">put method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, hello, hello, <span class="literal">null</span>]</span><br><span class="line">put method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, hello, hello, hello]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, hello, hello]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello, hello]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello, hello]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello, hello]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello, hello]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, hello]</span><br><span class="line">take method: [<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java synchronized</title>
      <link href="/2023/03/21/java/concurrency/2/"/>
      <url>/2023/03/21/java/concurrency/2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/java/thread_synchronized.png"><br>本文从synchronized关键字入手，介绍Java中线程的同步互斥机制。</p><span id="more"></span><p>开篇介绍系统的内核与用户态</p><ol><li>内核：本质上看是一种软件——控制计算机的硬件资源，并提供上层应用程序运行的环境。<br>cpu可以访问内存的所有数据，包括外围设备，例如硬盘，网卡，cpu也可以将自己从一个程序切换到另一个程序。</li><li>用户态：上层应用程序的活动空间，只能受限的访问内存，且不允许访问外围设备，占用cpu的能力被剥夺，cpu资源可以被其他程序获取。<br>应用程序的执行必须依托于内核提供的资源，包括CPU资源、存储资源、I&#x2F;O资源等。为了使上层应用能够访问到这些资源，内核必须为上层应用提供访问的接口：即系统调用。</li></ol><p>线程同步互斥synchronized<br>同步代码块：作用于一个对象，当两个线程调用一个对象的同步代码块时，当一个线程进入同步语句块时，另一个线程就必须等待。<br>同步方法：与代码块一样，作用与同一个对象。<br>同步类：sychronized(xxx.class)，作用于整个类，即使是不同的对象，不同的线程也会进行同步等待。<br>同步静态方法：同样作用于整个类</p><hr><h3 id="线程间协作"><a href="#线程间协作" class="headerlink" title="线程间协作"></a>线程间协作</h3><p>当多个线程可以一起工作去解决某个问题时，如果某些部分必须在其它部分之前完成，那么就需要对线程进行协调。</p><ul><li>join()</li></ul><p>在线程中调用另一个线程的 join() 方法，会将当前线程挂起，而不是忙等待，直到目标线程结束。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">先启动B线程，正常情况下B线程耗时较少应该会首先完成，但B线程中使用了A线程的join()方法</span></span><br><span class="line"><span class="comment">因此B线程会等到A线程执行成功后才会完成。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadCooperation</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ThreadA</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;ThreadA execute start&quot;</span>);</span><br><span class="line">                Thread.sleep(<span class="number">4000</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;ThreadA execute end&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ThreadB</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Thread threadA;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ThreadB</span><span class="params">(Thread threadA)</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.threadA = threadA;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;ThreadB execute start&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                threadA.join();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;ThreadB execute end&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ThreadA</span>());</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">ThreadB</span>(t1));</span><br><span class="line">        t2.start();</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ThreadB execute start</span><br><span class="line">ThreadA execute start</span><br><span class="line">ThreadA execute end</span><br><span class="line">ThreadB execute end</span><br></pre></td></tr></table></figure><hr><ul><li>wait() notify() notifyAll()</li></ul><p>在调用wait方法时，线程必须要持有被调用对象的锁，当调用wait方法后，<br>线程就会释放掉该对象的锁(monitor)<br>在调用Thread类的sleep方法时，线程是不会释放掉对象的锁的。</p><p>关于wait与notify和notifyAll方法的总结：</p><ol><li>当调用wait时，首先需要确保调用了wait方法的线程已经持有了对象的锁。</li><li>当调用wait后，该线程就会释放掉这个对象的锁，然后进入到等待状态（wait set）。</li><li>当线程调用了wait后进入到等待状态时，它就可以等待其他线程调用相同对象的notify或notifyAll方法来使得自己被唤醒。</li><li>一旦这个线程被其他线程唤醒后，该线程就会与其他线程一同开始竞争这个对象的锁（公平竞争）；只有当该线程获取到了这个对象的锁后，线程才会继续往下执行。</li><li>调用wait方法的代码片段需要放在一个synchronized块或是synchronized方法中，这样才可以确保线程在调用wait方法前已经获取到了对象的锁。</li><li>当调用对象的notify方法时，它会随机唤醒该对象等待集合（wait set）中的任意一个线程，当某个线程被唤醒后，它就会与其他线程一同竞争对象的锁。</li><li>当调用对象的notifyAll方法时，它会唤醒该对象等待集合（wait set）中的所有线程，这些线程被唤醒后，又会开始竞争对象的锁。</li><li>在某一时刻，只有唯一一个线程可以拥有对象的锁。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">以下代码实现两个线程同时调用但结果实现101010..且不会出现交叉错误。</span></span><br><span class="line"><span class="comment">当add被notify唤醒时，会先进行counter的判断，如果因其他线程唤满足了满段条件，</span></span><br><span class="line"><span class="comment">会继续执行wait()等待</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Counter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    Object[] items = <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line"><span class="comment">// 当counter==1时，将线程wait，等待被唤醒</span></span><br><span class="line"><span class="keyword">while</span>(counter != <span class="number">0</span>)&#123;</span><br><span class="line">            wait();</span><br><span class="line">        &#125;</span><br><span class="line">        counter++;</span><br><span class="line">        System.out.print(counter);</span><br><span class="line">        notify();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">minus</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="keyword">while</span>(counter != <span class="number">1</span>)&#123;</span><br><span class="line">            wait();</span><br><span class="line">        &#125;</span><br><span class="line">        counter--;</span><br><span class="line">        System.out.print(counter);</span><br><span class="line">        notify();</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">decimal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">Counter</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Counter</span>();</span><br><span class="line">        <span class="type">Runnable</span> <span class="variable">addThread</span> <span class="operator">=</span> () -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>; i&lt;<span class="number">30</span>; i++)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep((<span class="type">long</span>) (Math.random() * <span class="number">1000</span>));</span><br><span class="line">                    counter.add();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">Runnable</span> <span class="variable">minusThread</span> <span class="operator">=</span> () -&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">30</span>; i++)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep((<span class="type">long</span>) (Math.random() * <span class="number">1000</span>));</span><br><span class="line">                    counter.minus();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(addThread);</span><br><span class="line">        t1.start();</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(minusThread);</span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>wait() 和 sleep() 的区别</p><ul><li>wait() 是 Object 的方法，而 sleep() 是 Thread 的静态方法；</li><li>wait() 会释放锁，sleep() 不会。</li></ul><hr><h3 id="synchronized原理"><a href="#synchronized原理" class="headerlink" title="synchronized原理"></a>synchronized原理</h3><p>Sychronized方法执行前，该线程一定是已经获得了对象的锁才能继续往下执行。<br>使用while代替if可以保证在两个以上的多线程情况下正确执行，if下程序被唤醒时counter的状态不一定为设定的条件，所以需要使用while对其再做判断才能保证条件wait的条件是否被满足。这也是为何上文所说到的sychronized与while通常要一起使用。<br>当我们使用synchronized关键字来修饰代码块时，字节码层面上是通过monitorenter与monitorexit指令来实现的锁的获取与释放动作。<br>当线程进入到monitorenter指令后，线程将会持有Monitor对象，退出monitorenter指令后，线程将会释放Monitor对象。<br>对于synchronized关键字修饰方法来说，并没有出现monitorenter与monitorexit指令，而是出现了一个ACC_SYNCHRONIZED标志。JVM使用了ACC_SYNCHRONIZED访问标志来区分一个方法是否为同步方法；当方法被调用时，调用指令会检查该方法是否拥有ACC_SYNCHRONIZED标志，如果有，那么执行线程将会先持有方法所在对象的Monitor对象，然后再去执行方法体；在该方法执行期间，其他任何线程均无法再获取到这个Monitor对象，当线程执行完该方法后，它会释放掉这个Monitor对象。</p><hr><h3 id="synchronized底层实现"><a href="#synchronized底层实现" class="headerlink" title="synchronized底层实现"></a>synchronized底层实现</h3><p>JVM中的同步是基于进入与退出监视器对象（管程对象）（Monitor）来实现的，每个对象实例都会有一个Monitor对象，Monitor对象会和Java对象一同创建并销毁。Monitor对象是由C++来实现的。<br>当多个线程同时访问一段同步代码时，这些线程会被放到一个EntryList集合中，处于阻塞状态的线程都会被放到该列表当中。接下来，当线程<br>获取到对象的Monitor时，Monitor是依赖于底层操作系统的mutex lock来实现互斥的，线程获取mutex成功，则会持有该mutex，这时其他线程就无法再获取到该mutex。<br>如果线程调用了wait方法，那么该线程就会释放掉所持有的mutex，并且该线程会进入到WaitSet集合（等待集合）中，等待下一次被其他线程调用notify&#x2F;notifyAll唤醒。如果当前线程顺利执行完毕方法，那么它也会释放掉所持有的mutex。<br>总结一下：同步锁在这种实现方式当中，因为Monitor是依赖于底层的操作系统实现，这样就存在用户态与内核态之间的切换，所以会增加性能开销。通过对象互斥锁的概念来保证共享数据操作的完整性。每个对象都对应于一个可称为『互斥锁』的标记，这个标记用于保证在任何时刻，只能有一个线程访问该对象。那些处于EntryList与WaitSet中的线程均处于阻塞状态，阻塞操作是由操作系统来完成的，在linux下是通过pthread_mutex_lock函数实现的。线程被阻塞后便会进入到内核调度状态，这会导致系统在用户态与内核态之间来回切换，严重影响锁的性能。<br>解决上述问题的办法便是自旋（Spin）。其原理是：当发生对Monitor的争用时，若Owner能够在很短的时间内释放掉锁，则那些正在争用的线程就可以稍微等待一下（即所谓的自旋），在Owner线程释放锁之后，争用线程可能会立刻获取到锁，从而避免了系统阻塞。不过，当Owner运行的时间超过了临界值后，争用线程自旋一段时间后依然无法获取到锁，这时争用线程则会停止自旋而进入到阻塞状态。所以总体的思想是：先自旋，不成功再进行阻塞，尽量降低阻塞的可能性，这对那些执行时间很短的代码块来说有极大的性能提升。显然，自旋在多处理器（多核心）上才有意义。</p><hr><p>补充：互斥锁的属性</p><ol><li>PTHREAD_MUTEX_TIMED_NP：这是缺省值，也就是普通锁。当一个线程加锁以后，其余请求锁的线程将会形成一个等待队列，并且在解锁后按照优先级<br>获取到锁。这种策略可以确保资源分配的公平性。</li><li>PTHREAD_MUTEX_RECURSIVE_NP：嵌套锁。允许一个线程对同一个锁成功获取多次，并通过unlock解锁。如果是不同线程请求，则在加锁线程解锁时<br>重新进行竞争。</li><li>PTHREAD_MUTEX_ERRORCHECK_NP：检错锁。如果一个线程请求同一个锁，则返回EDEADLK，否则与PTHREAD_MUTEX_TIMED_NP类型动作相同，这样<br>就保证了当不允许多次加锁时不会出现最简单情况下的死锁。</li><li>PTHREAD_MUTEX_ADAPTIVE_NP：适应锁，动作最简单的锁类型，仅仅等待解锁后重新竞争。</li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java并发基础</title>
      <link href="/2023/03/21/java/concurrency/1/"/>
      <url>/2023/03/21/java/concurrency/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/java/thread_convert.png"><br>本系列文章将从基础开始介绍Java并发，从最简单的Thread开始到线程池，归纳、介绍总结Java并发的使用和原理。</p><span id="more"></span><p>介绍线程之前，我们先了解一下几个概念</p><ul><li>进程：是操作系统对一个正在执行的程序的一种抽象结构。进程在运行时需要一定的资源，如cpu、存储空间和I&#x2F;O。</li><li>线程： 线程时进程内部的一条访问路径。线程能独立运行，独立调度，拥有资源。同一个进程的多个线程共享进程的资源。</li><li>协程&#x2F;纤程：协程是用户模式下的轻量级线程，操作系统内核对协程一无所知。协程的调度完全由应用程序来控制。一个线程包含多个协程。协程与线程的区别在于在多处理器下，多线程程序可以同时运行多个线程；而协同程序需要通过协作来完成，在任一时刻只有一个协同程序在运行。Windows下的协程叫纤程。</li></ul><p>通过以下问题逐步了解Java中的线程</p><blockquote><p>线程有哪些状态，状态之间如何转换？</p></blockquote><blockquote><p>如何创建线程，有哪些方式？</p></blockquote><blockquote><p>线程机制有哪些？</p></blockquote><hr><h3 id="线程状态与转换"><a href="#线程状态与转换" class="headerlink" title="线程状态与转换"></a>线程状态与转换</h3><ol><li>新建（New）：创建后尚未启动。</li><li>可运行（Runnable）：可能正在运行，也可能正在等待 CPU 时间片。包含了操作系统线程状态中的 Running 和 Ready。</li><li>阻塞（Blocking）：等待获取一个排它锁，如果其线程释放了锁就会结束此状态。</li><li>无限等待（Waiting）：等待其他线程唤醒。Object.wait()、Thread.join()、LockSupport.park()</li><li>期限等待（Timed Waiting）：无需等待其他线程唤醒。在设置时间结束之后会被系统自动的唤醒</li><li>死亡（Terminate）：可以是线程结束任务之后自己结束，或者产生了异常而结束。</li></ol><hr><h3 id="线程的使用方法"><a href="#线程的使用方法" class="headerlink" title="线程的使用方法"></a>线程的使用方法</h3><ul><li>实现Runnable接口，使用Thread类启动。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread1</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run my thread 1 using implementing Runnable method&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>实现Callable接口，使用FutureTask启动，此方法可以设定线程的返回值。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread2</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;String&gt;&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run my thread 2 using implementing Callable method and return sth&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;result&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>集成Thread，重写run()方法，使用Thread启动。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MyThread3</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;run my thread 3 using extending Thread&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>线程启动</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="comment">// 启动线程1</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">MyThread1</span>());</span><br><span class="line">        t1.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动线程2，并获取返回值</span></span><br><span class="line">        FutureTask&lt;String&gt; future = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">MyThread2</span>());</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(future);</span><br><span class="line">        t2.start();</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> future.get();</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动线程3</span></span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">MyThread3</span>());</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>使用线程时，推荐使用实现Runnable或Callable接口的方法。实现接口只需实现方法，继承整个Thread开销过大，同时Java类可以实现多个接口但无法继承多个类。</p><hr><h3 id="基础线程机制"><a href="#基础线程机制" class="headerlink" title="基础线程机制"></a>基础线程机制</h3><ul><li>Daemon守护线程</li></ul><p>守护线程（Daemon Thread）是个服务线程，准确地来说就是服务其他的线程，这是它的作用——而其他的线程只有一种，就是用户线程。所以Java线程分2种。</p><ol><li>守护线程：比如垃圾回收线程。</li><li>用户线程：就是应用程序里的自定义线程。</li></ol><p>当用户线程完成时，为他所创建的守护线程就会终止。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DaemonThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;send message every 1s&quot;</span>);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;sub thread finished&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">DaemonThread</span>());</span><br><span class="line">        t1.setDaemon(<span class="literal">true</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;finish the main task&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有将定义的线程设为守护线程，则主程序执行完成后，子线程依然会继续每秒打印信息，相反，则DaemonThread会随着主线程的执行退出，从结果看在主线程停留的2s内执行了两次。符合预期。</p><hr><ul><li>Thread.sleep(millisec)</li></ul><p>方法会休眠当前正在执行的线程，millisec 单位为毫秒。</p><hr><ul><li>yield()</li></ul><p>暂停当前正在执行的线程对象，并执行其他线程。对静态方法 Thread.yield() 的调用声明了当前线程已经完成了生命周期中最重要的部分，可以切换给其它线程来执行。该方法只是对线程调度器的一个建议，而且也只是建议具有相同优先级的其它线程可以运行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YieldThreadTest</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">YieldThreadTest</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;t1&quot;</span>.equals(name) &amp;&amp; i == <span class="number">5</span>)&#123;</span><br><span class="line">                System.out.println(name + <span class="string">&quot; : &quot;</span> + <span class="string">&quot;pause&quot;</span>);</span><br><span class="line">                Thread.<span class="keyword">yield</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(name + <span class="string">&quot; execute : &quot;</span> + (i + <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">YieldThreadTest</span>(<span class="string">&quot;t1&quot;</span>));</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">YieldThreadTest</span>(<span class="string">&quot;t2&quot;</span>));</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">YieldThreadTest</span>(<span class="string">&quot;t3&quot;</span>));</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ul><li>Interrupted()</li></ul><p>中断线程，调用interrupted()方法会设置线程的中断标记，此时调用interrupted()方法会返回true。可以通过判断interrupted()方法来提前结束线程。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java函数式编程</title>
      <link href="/2023/02/04/java/1/"/>
      <url>/2023/02/04/java/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/java/1.png"><br>函数式编程关注于流程而非具体实现。可以将函数作为参数或返回值。所有数据的操作都通过函数来实现。</p><span id="more"></span><p>函数式编程：函数式编程关注于流程而非具体实现。可以将函数作为参数或返回值。所有数据的操作都通过函数来实现。可以理解为数学中的函数。较新的语言基本上追求语法上的简洁基本都有支持。更关注于函数实现什么功能。</p><p>代表语言有：JAVA（8以上），js（ES6），C#，Scala，python等。<br>命令式变成：命令式编程的主要思想是关注计算机执行的步骤，即一步一步告诉计算机先做什么再做什么。<br>代表语言有：C, C++, Java, Javascript, BASIC,Ruby等多为老牌语言。<br><strong>JAVA函数式编程可以简单概括</strong></p><p><strong>lambda + 方法引用 + stream API &#x3D; java函数式编程</strong></p><hr><h3 id="lambda表达式"><a href="#lambda表达式" class="headerlink" title="lambda表达式"></a>lambda表达式</h3><p>利用lambda表达式创建一个线程，“-&gt;” 左边参数，右边方法体</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt; System.out.println(<span class="string">&quot;use lambda to create a thread&quot;</span>)).start();</span><br><span class="line"><span class="comment">// 返回实现了指定接口的对象实例</span></span><br><span class="line"><span class="type">Runnable</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(()-&gt; System.out.println(<span class="string">&quot;use lambda to create a thread&quot;</span>));</span><br></pre></td></tr></table></figure><p>函数式接口的实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个提供转换功能的函数式接口</span></span><br><span class="line"><span class="comment">// @FunctionInterface，这也是为了函数调用时避免带来二义性。</span></span><br><span class="line"><span class="comment">// @FunctionInterface并不是一定要标注但若是标注可以在编译时就给你提示错误</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ConvertToolInterface</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">convert</span><span class="params">(String num)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">// 实现函数式接口，将传入的字符串转换成int，并*2</span></span><br><span class="line">    <span class="comment">// 第一种实现方式</span></span><br><span class="line">    <span class="type">ConvertToolInterface</span> <span class="variable">convertTool</span> <span class="operator">=</span> str -&gt; Integer.parseInt(str) * <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// 第二种实现方式</span></span><br><span class="line">    <span class="type">ConvertToolInterface</span> <span class="variable">convertTool2</span> <span class="operator">=</span> (String str) -&gt; Integer.parseInt(str) * <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// 第三种实现方式</span></span><br><span class="line">    <span class="type">ConvertToolInterface</span> <span class="variable">convertTool3</span> <span class="operator">=</span> (String str) -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(str) * <span class="number">2</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>default接口默认方法</p><p>默认方法：目的是为了解决接口的修改与现有的实现不兼容的问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Phone接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Phone</span> &#123;</span><br><span class="line">    <span class="keyword">default</span> String <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;This is a basic phone&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SmartPhone接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SmartPhone</span> &#123;</span><br><span class="line">    <span class="keyword">default</span> String <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;This is a smart Phone&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个解决方案是创建自己的默认方法，来覆盖重写接口的默认方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Iphone</span> <span class="keyword">implements</span> <span class="title class_">Phone</span>, SmartPhone &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;this is iphone&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种解决方案可以使用 super 来调用指定接口的默认方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Iphone</span> <span class="keyword">implements</span> <span class="title class_">Phone</span>, SmartPhone &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Phone.<span class="built_in">super</span>.show();</span><br><span class="line">        <span class="comment">// return SmartPhone.super.show();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本函数</p><table><thead><tr><th>接口</th><th>输入类型</th><th>返回类型</th><th>说明</th></tr></thead><tbody><tr><td>Predicate<T></T></td><td>T</td><td>bool</td><td>断言</td></tr><tr><td>Consumer<T></T></td><td>T</td><td>&#x2F;</td><td>消费一个数据</td></tr><tr><td>Function&lt;T,R&gt;</td><td>T</td><td>R</td><td>输入T输出R的函数</td></tr><tr><td>Supplier<T></T></td><td>&#x2F;</td><td>T</td><td>提供一个数据</td></tr><tr><td>UnaryOperator<T></T></td><td>T</td><td>T</td><td>一元函数（输入，输出类型相同）</td></tr><tr><td>BiFunction&lt;T,U,R&gt;</td><td>T,U</td><td>R</td><td>2个输入的函数</td></tr><tr><td>BinaryOperator<T></T></td><td>T,T</td><td>T</td><td>二元函数（输入，输出类型相同）</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Predicate</span></span><br><span class="line">Predicate&lt;String&gt; predicate = str -&gt; str.equalsIgnoreCase(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line"><span class="type">IntPredicate</span> <span class="variable">intPredicate</span> <span class="operator">=</span> i -&gt; i &lt; <span class="number">0</span>;</span><br><span class="line">System.out.println(predicate.test(<span class="string">&quot;OK&quot;</span>));</span><br><span class="line">System.out.println(intPredicate.test(-<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//Consumer</span></span><br><span class="line">Consumer&lt;String&gt; consumer = str -&gt; System.out.println(str);</span><br><span class="line">consumer.accept(<span class="string">&quot;result&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Function</span></span><br><span class="line">Function&lt;Integer, String&gt; function = i -&gt; String.valueOf(i);</span><br><span class="line">System.out.println(function.apply(<span class="number">1234</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//Supplier</span></span><br><span class="line">Supplier&lt;String&gt; supplier = () -&gt; <span class="string">&quot;this is result&quot;</span>;</span><br><span class="line">System.out.println(supplier.get());</span><br><span class="line"></span><br><span class="line"><span class="comment">//UnaryOperator</span></span><br><span class="line">UnaryOperator&lt;Integer&gt; unaryOperator = x -&gt; ++x;</span><br><span class="line">System.out.println(unaryOperator.apply(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//BiFunction</span></span><br><span class="line">BiFunction&lt;String, String, Integer&gt; biFunction = </span><br><span class="line">(a, b) -&gt; Integer.parseInt(a) + Integer.parseInt(b);</span><br><span class="line">System.out.println(biFunction.apply(<span class="string">&quot;123&quot;</span>, <span class="string">&quot;234&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//BinaryOperator</span></span><br><span class="line">BinaryOperator&lt;Integer&gt; binaryOperator = (x, y) -&gt; x * y;</span><br><span class="line">binaryOperator.apply(<span class="number">55</span>, <span class="number">35</span>);</span><br></pre></td></tr></table></figure><hr><h3 id="方法引用"><a href="#方法引用" class="headerlink" title="方法引用"></a>方法引用</h3><p>可以直接使用两个冒号::来调用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">consumer</span><span class="params">()</span>&#123;</span><br><span class="line">    Consumer&lt;String&gt; consumer = System.out::println;</span><br><span class="line">    consumer.accept(<span class="string">&quot;我是一个消费者&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个Dog类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">remainder</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bark</span><span class="params">(Dog dog)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;wangcai&quot;</span>;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;this dog is barking&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 非静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">eat</span><span class="params">(<span class="type">int</span> amount)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;eat &quot;</span> + amount);</span><br><span class="line">        <span class="keyword">return</span> remainder - amount;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态方法引用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">callStaticMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    Consumer&lt;Dog&gt; consumer = Dog::bark;</span><br><span class="line">    consumer.accept(<span class="keyword">new</span> <span class="title class_">Dog</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非静态 实例方法引用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">callMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">    Function&lt;Integer, Integer&gt; function = dog::eat;</span><br><span class="line">    System.out.println(<span class="string">&quot;remain&quot;</span> + function.apply(<span class="number">3</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非静态 类方法引用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">callMethodByClass</span><span class="params">()</span> &#123;</span><br><span class="line">    BiFunction&lt;Dog, Integer, Integer&gt; biFunction  = Dog::eat;</span><br><span class="line">    System.out.println(<span class="string">&quot;remain&quot;</span> + biFunction.apply(<span class="keyword">new</span> <span class="title class_">Dog</span>(),<span class="number">4</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数方法引用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">callConstructorMethod</span><span class="params">()</span> &#123;</span><br><span class="line">    Supplier&lt;Dog&gt; supplier = Dog::<span class="keyword">new</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;new a object&quot;</span> + supplier.get());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据不变模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">callMethod2</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Dog</span> <span class="variable">dog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>();</span><br><span class="line">    Function&lt;Integer,Integer&gt; function = dog::eat; <span class="comment">//函数声明</span></span><br><span class="line">    dog = <span class="literal">null</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;remain &quot;</span> + function.apply(<span class="number">3</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h3><p>参考链接</p><p>Stream 是 Java8 中处理集合的关键抽象概念，它可以指定你希望对集合进行的操作，可以执行非常复杂的查找、过滤和映射数据等操作。使用Stream API 对集合数据进行操作，就类似于使用 SQL 执行的数据库查询。也可以使用 Stream API 来并行执行操作。简而言之，Stream API 提供了一种高效且易于使用的处理数据的方式。</p><p>特点：</p><ol><li>不是数据结构，不会保存数据。</li><li>不会修改原来的数据源，它会将操作后的数据保存到另外一个对象中。（保留意见：毕竟peek方法可以修改流中元素）</li><li>惰性求值，流在中间处理过程中，只是对操作进行了记录，并不会立即执行，需要等到执行终止操作的时候才会进行实际的计算。</li></ol><p>使用参考链接</p><p><a href="https://blog.csdn.net/y_k_y/article/details/84633001">https://blog.csdn.net/y_k_y&#x2F;article&#x2F;details&#x2F;84633001</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#中的委托与事件（二）</title>
      <link href="/2023/02/02/csharp/2/"/>
      <url>/2023/02/02/csharp/2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/csharp/2.png"><br>C#中的委托与事件介绍，使用方式。</p><span id="more"></span><h2 id="1-C-事件：发布与订阅"><a href="#1-C-事件：发布与订阅" class="headerlink" title="1. C#事件：发布与订阅"></a>1. C#事件：发布与订阅</h2><p>事件：事件属于类的成员，所以放在类的内部。</p><p>委托+事件相当于观察者模式，委托类似于观察者，它关心某种事件，一旦这种事件被触发，这个观察者就会行动</p><p>C#中使用事件需要的步骤：</p><ol><li>创建一个委托；</li><li>将创建的委托与特定事件关联(.Net类库中的很多事件都是已经定制好的，所以他们也就有相应的一个委托，在编写关联C#事件处理程序–也就是当有事件发生时我们要执行的方法的时候我们需要和这个委托有相同的签名)；</li><li>编写C#事件处理程序；</li><li>利用编写的C#事件处理程序生成一个委托实例；</li><li>把这个委托实例添加到产生事件对象的事件列表中去，这个过程又叫订阅事件</li></ol><hr><h2 id="2-事件实现"><a href="#2-事件实现" class="headerlink" title="2. 事件实现"></a>2. 事件实现</h2><p>定义一个观察者和接收者实现事件的订阅和发布</p><ol><li>声明观察者类</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义委托事件</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">Notification</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Watcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 定义一个Observe的事件</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> Notification notification;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startSendNotification</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 观察者向接收者发送通知</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;send notification &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>声明接收者类</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Receiver</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 接收者自有字段</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> _name;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Receiver</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>._name = name;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 接收者接收通知后执行的方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomethingWithNotification</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;_name&#125;</span> do something with notification&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试类</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 发布者</span></span><br><span class="line">            <span class="keyword">var</span> wathcr = <span class="keyword">new</span> Watcher();</span><br><span class="line">            <span class="comment">// 订阅者</span></span><br><span class="line">            <span class="keyword">var</span> receiver = <span class="keyword">new</span> Receiver(<span class="string">&quot;wang&quot;</span>);</span><br><span class="line">            <span class="comment">// 将订阅者的动作绑定到发布者，就进行了这个动作的订阅</span></span><br><span class="line">            wathcr.strNotification += receiver.doSomethingWithNotification;</span><br><span class="line">            <span class="comment">// 每次发布者进行发布动作，订阅者就会执行了</span></span><br><span class="line">            wathcr.startSendNotification();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><p>C#中定义了一个标准的用于事件的委托 EventHandler简化上述步骤</p><ol><li>定义观察者类</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义委托事件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">Notification</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Watcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 使用EventHandler，可以传入继承EventArgs的自定义参数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler&lt;StringEventArgs&gt; strNotification;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startSendNotification</span>(<span class="params">String content</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> arg = <span class="keyword">new</span> StringEventArgs();</span><br><span class="line">            arg._notificationContent = content;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;send notification &quot;</span> + content);</span><br><span class="line">            strNotification?.Invoke(<span class="keyword">this</span>, arg); <span class="comment">// 进行通知</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义String类型的EventArgs参数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StringEventArgs</span> : <span class="title">EventArgs</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> _notificationContent;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>定义接收者</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Receiver</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> _name;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Receiver</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _name = name;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 可以添加入参StringEventArgs接收到观察者发送的内容</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doSomethingWithNotification</span>(<span class="params">Object sender, StringEventArgs args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;_name&#125;</span> do <span class="subst">&#123;args._notificationContent&#125;</span> with notification&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试类</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 发布者</span></span><br><span class="line">            <span class="keyword">var</span> wathcr = <span class="keyword">new</span> Watcher();</span><br><span class="line">            <span class="comment">// 订阅者</span></span><br><span class="line">            <span class="keyword">var</span> receiver = <span class="keyword">new</span> Receiver(<span class="string">&quot;wang&quot;</span>);</span><br><span class="line">            <span class="comment">// 将订阅者的动作绑定到发布者，就进行了这个动作的订阅</span></span><br><span class="line">            wathcr.strNotification += receiver.doSomethingWithNotification;</span><br><span class="line">            <span class="comment">// 发布Please clean room的通知</span></span><br><span class="line">            wathcr.startSendNotification(<span class="string">&quot;Please clean room&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#中的委托与事件（一）</title>
      <link href="/2023/02/01/csharp/1/"/>
      <url>/2023/02/01/csharp/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/csharp/1.png"><br>C#中的委托与事件介绍，使用方式。</p><span id="more"></span><h2 id="1-C-委托"><a href="#1-C-委托" class="headerlink" title="1. C#委托"></a>1. C#委托</h2><p>委托：存储具有相同参数的方法，与类、接口类似，通常定义在类的外部。也可以定义在类的内部，如果频繁调用，不适合放在内部。</p><p>事件：事件属于类的成员，所以放在类的内部。</p><p>委托+事件相当于观察者模式，委托类似于观察者，它关心某种事件，一旦这种事件被触发，这个观察者就会行动</p><hr><h2 id="2-委托实现"><a href="#2-委托实现" class="headerlink" title="2. 委托实现"></a>2. 委托实现</h2><p>C#中可以通过四种方式实现委托</p><ul><li><p>deletegate</p><ol><li>声明委托</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">PrintTool</span>()</span>;</span><br><span class="line">    <span class="comment">// 定义一个类，创建三个需要委托的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Class1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PrintX</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PrintY</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PrintZ</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;z&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>初始化委托</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PrintTool printTool;</span><br></pre></td></tr></table></figure><ol start="3"><li>委托注册事件</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class1 cls = <span class="keyword">new</span> Class1();</span><br><span class="line">printTool = cls.PrintX;</span><br><span class="line">printTool += cls.PrintY;</span><br><span class="line">printTool += cls.PrintZ;</span><br></pre></td></tr></table></figure><ol start="4"><li>调用</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printTool?.Invoke();</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>Action Action中的方法可以传参，但不能有返回值</p><ol><li>声明委托</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Class1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 声明一个带有一个string入参的委托</span></span><br><span class="line">        <span class="keyword">public</span> Action&lt;<span class="built_in">string</span>&gt; _actionPrint;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PrintX</span>(<span class="params"><span class="built_in">string</span> str</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;using printX to print : &quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PrintY</span>(<span class="params"><span class="built_in">string</span> str</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;using printY to print : &quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PrintZ</span>(<span class="params"><span class="built_in">string</span> str</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;using printZ to print : &quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>委托注册事件</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Class1 cls = <span class="keyword">new</span> Class1();</span><br><span class="line">cls._actionPrint += cls.PrintX;</span><br><span class="line">cls._actionPrint += cls.PrintY;</span><br><span class="line">cls._actionPrint += cls.PrintZ;</span><br><span class="line">cls._actionPrint(<span class="string">&quot;result&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>调用</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cls._actionPrint(<span class="string">&quot;result&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>Func Func添加的方法必须有返回值</p><ol><li>声明委托</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Class1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; _funcCal;</span><br><span class="line">        <span class="comment">// 声明三个计算的方法</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">Sum</span>(<span class="params"><span class="built_in">string</span> a, <span class="built_in">string</span> b</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) + <span class="built_in">int</span>.Parse(b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">Multi</span>(<span class="params"><span class="built_in">string</span> a, <span class="built_in">string</span> b</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) * <span class="built_in">int</span>.Parse(b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">Minus</span>(<span class="params"><span class="built_in">string</span> a, <span class="built_in">string</span> b</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) - <span class="built_in">int</span>.Parse(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>委托注册事件</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class1 cls = <span class="keyword">new</span> Class1();</span><br><span class="line">cls._funcCal += cls.Sum;</span><br><span class="line">cls._funcCal += cls.Multi;</span><br><span class="line">cls._funcCal += cls.Minus;</span><br></pre></td></tr></table></figure><ol start="3"><li>调用</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = cls._funcCal(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;100&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><p>Lambda</p><ol><li>声明Func委托</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; _funcCal  = (a, b) =&gt; &#123; </span><br><span class="line"><span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) + <span class="built_in">int</span>.Parse(b); </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li>委托注册</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Class1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">Sum</span>(<span class="params"><span class="built_in">string</span> a, <span class="built_in">string</span> b</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) + <span class="built_in">int</span>.Parse(b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">Multi</span>(<span class="params"><span class="built_in">string</span> a, <span class="built_in">string</span> b</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) * <span class="built_in">int</span>.Parse(b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">Minus</span>(<span class="params"><span class="built_in">string</span> a, <span class="built_in">string</span> b</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) - <span class="built_in">int</span>.Parse(b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Class1 cls = <span class="keyword">new</span> Class1();</span><br><span class="line">            Func&lt;<span class="built_in">string</span>, <span class="built_in">string</span>, <span class="built_in">int</span>&gt; _funcCal = (a, b) =&gt; &#123; <span class="keyword">return</span> <span class="built_in">int</span>.Parse(a) + <span class="built_in">int</span>.Parse(b); &#125;;</span><br><span class="line">            _funcCal += cls.Sum;</span><br><span class="line">            _funcCal += cls.Multi;</span><br><span class="line">            _funcCal += cls.Minus;</span><br><span class="line">            <span class="keyword">var</span> result = _funcCal(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;100&quot;</span>);</span><br><span class="line">            Console.WriteLine(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>调用</li></ol>  <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = _funcCal(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;100&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-举一个在Unity制作游戏中的例子"><a href="#3-举一个在Unity制作游戏中的例子" class="headerlink" title="3. 举一个在Unity制作游戏中的例子"></a>3. 举一个在Unity制作游戏中的例子</h2><p>背景：塔防游戏包含两个脚本Tower.cs和Monster.cs。Tower对进入范围内的敌人进行攻击，使用队列将每个进入的怪物存放，离开范围或死亡则移除。死亡时可以使用委托进行怪物的队列移除。</p><p><img src="/images/csharp/gif/1.gif"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Monster.cs</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Monster</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 使用Action定义一个委托</span></span><br><span class="line">        <span class="keyword">public</span> Action&lt;Monster&gt; deathEvent;</span><br><span class="line">        <span class="comment">// 省略一些代码</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TakeDamage</span>(<span class="params"><span class="built_in">float</span> damage</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ani.SetTrigger(<span class="string">&quot;Dead&quot;</span>);</span><br><span class="line">            navMeshAgent.isStopped = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">// 执行委托</span></span><br><span class="line">            deathEvent?.Invoke(<span class="keyword">this</span>);</span><br><span class="line">            capsuleCollider.enabled = <span class="literal">false</span>;</span><br><span class="line">            Destroy(gameObject, <span class="number">0.9f</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Tower.cs</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Tower</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 定义进入怪物的列表</span></span><br><span class="line">            monsterList = <span class="keyword">new</span> List&lt;Monster&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果进入的gameObject tag==Monster</span></span><br><span class="line">            <span class="keyword">if</span> (other.tag == <span class="string">&quot;Monster&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Monster currentMonster = other.GetComponent&lt;Monster&gt;();</span><br><span class="line">                monsterList.Add(currentMonster);</span><br><span class="line">                <span class="comment">// 将怪物的死亡事件绑定</span></span><br><span class="line">                currentMonster.deathEvent += RemoveMonsterFromList;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (other.tag == <span class="string">&quot;Monster&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Monster currentMonster = other.GetComponent&lt;Monster&gt;();</span><br><span class="line">                monsterList.Remove(currentMonster);</span><br><span class="line">                <span class="comment">// 将怪物的死亡事件解除</span></span><br><span class="line">                currentMonster.deathEvent -= RemoveMonsterFromList;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 需要注册的方法：将怪物移除队列</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RemoveMonsterFromList</span>(<span class="params">Monster monster</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (monsterList.Contains(monster))</span><br><span class="line">            &#123;</span><br><span class="line">                monsterList.Remove(monster);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第24课　李さんは　もう　すぐ　来ると　思います</title>
      <link href="/2023/01/16/japanese/24/"/>
      <url>/2023/01/16/japanese/24/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/24.png"><br>概述：表示说话人思考；转述他人说话的复合句。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">ハイキング</td><td align="center"></td><td align="center">郊游，远足</td></tr><tr><td align="center">お別れ</td><td align="center">おわかれ</td><td align="center">分别，分手</td></tr><tr><td align="center">見送り</td><td align="center">みおくり</td><td align="center">送行，送别</td></tr><tr><td align="center">間</td><td align="center">あいだ</td><td align="center">时间，期间</td></tr><tr><td align="center">法律</td><td align="center">ほうりつ</td><td align="center">法律</td></tr><tr><td align="center">思う</td><td align="center">おもう</td><td align="center">想，思考</td></tr><tr><td align="center">言う</td><td align="center">いう</td><td align="center">说，讲</td></tr><tr><td align="center">探す</td><td align="center">さがす</td><td align="center">找，寻找</td></tr><tr><td align="center">笑う</td><td align="center">わらう</td><td align="center">笑</td></tr><tr><td align="center">寝坊する</td><td align="center">ねぼうする</td><td align="center">睡懒觉</td></tr><tr><td align="center">外出します</td><td align="center">がいしゅつします</td><td align="center">外出，出去</td></tr><tr><td align="center">研究します</td><td align="center">けんきゅうします</td><td align="center">研究</td></tr><tr><td align="center">おかしい</td><td align="center"></td><td align="center">可笑，滑稽</td></tr><tr><td align="center">おもしろい</td><td align="center"></td><td align="center">精彩的，有趣的</td></tr><tr><td align="center">いーぱい</td><td align="center"></td><td align="center">满</td></tr><tr><td align="center">すごい／すげい</td><td align="center"></td><td align="center">惊人的，了不起的</td></tr><tr><td align="center">とうとう</td><td align="center"></td><td align="center">终于，终究</td></tr><tr><td align="center">必ず</td><td align="center">かならず</td><td align="center">一定，必定</td></tr><tr><td align="center">絶対に</td><td align="center">ぜったいに</td><td align="center">绝对</td></tr><tr><td align="center">馬</td><td align="center">ば</td><td align="center">马</td></tr><tr><td align="center">お世話になりました</td><td align="center">おせわになりました</td><td align="center">承蒙照顾</td></tr><tr><td align="center">よろしくお伝えください</td><td align="center">よろしくおつたえください</td><td align="center">请带问好</td></tr><tr><td align="center">お元気で</td><td align="center">おげんきで</td><td align="center">请多保重，正常没有生病的人</td></tr><tr><td align="center">さようなら</td><td align="center"></td><td align="center">再见</td></tr><tr><td align="center">どうやって</td><td align="center"></td><td align="center">怎样，如何</td></tr><tr><td align="center">役に立ちます</td><td align="center">やくにたちます</td><td align="center">有用</td></tr><tr><td align="center">おなかがいっぱいです</td><td align="center"></td><td align="center">对……有用</td></tr><tr><td align="center">～中／について</td><td align="center"></td><td align="center">关于……</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【小句（简体形）】と-思います"><a href="#2-1【小句（简体形）】と-思います" class="headerlink" title="2.1【小句（简体形）】と　思います"></a>2.1【小句（简体形）】と　思います</h3><p>表示说话人的思考内容，“~と　思います”前的小句谓语必须是简体形。</p><ul><li>李さんは　もう　すぐ　来る　<strong>と　思います</strong>。</li><li>田中さんは　来ない　<strong>と　思います</strong>。</li><li>日本は　きれいだ　<strong>と　思います</strong>。</li><li>馬さんは　日本へ　行きたい　<strong>と　思っています</strong>。</li></ul><hr><h3 id="2-2【名（人）】は【小句（简体形）】と-言いました"><a href="#2-2【名（人）】は【小句（简体形）】と-言いました" class="headerlink" title="2.2【名（人）】は【小句（简体形）】と　言いました"></a>2.2【名（人）】は【小句（简体形）】と　言いました</h3><p>向第三者转述他人所说的话。</p><ul><li>陳さんは　パーティーに　行く　<strong>と　言いました</strong>。</li><li>森さんは　中国語の　試験は　難しかった　<strong>と　言いました</strong>。</li><li>小野さんは　李さんに　ちょっと　休みたい　<strong>と　言いました</strong>。<br>“~と　思います”及“と　言いました”前面出现名词或二类形容词小句时必须加”だ”</li></ul><hr><h3 id="2-3-～のです／んです"><a href="#2-3-～のです／んです" class="headerlink" title="2.3 ～のです／んです"></a>2.3 ～のです／んです</h3><p>表示所讲的内容与前句或前向内容有关联。用于说明状况或解释原因、理由。“～のです／んです”前接简体形，但是名词和二类形容词的现在将来形的肯定形，“だ”要换成“な”。</p><ul><li>すみません，頭が　痛いんです。</li><li>そうなんですが，やめる　ことが　できないんです。</li><li>あの　歌手は　日本では　とても　有名なんです。</li></ul><hr><h3 id="2-4-どうして～のです／んです"><a href="#2-4-どうして～のです／んです" class="headerlink" title="2.4 どうして～のです／んです"></a>2.4 どうして～のです／んです</h3><p>询问理由的完整形式，回答使用2.3的“～のです／んです”形式。</p><ul><li>どうして　食べないんですか。<ul><li>もう　おなかが　いっぱいなんです。</li></ul></li><li>どうして　遅刻したんですか。<ul><li>寝坊したんです。</li></ul></li></ul><hr><h3 id="2-5【小句】が，【小句】（铺垫）"><a href="#2-5【小句】が，【小句】（铺垫）" class="headerlink" title="2.5【小句】が，【小句】（铺垫）"></a>2.5【小句】が，【小句】（铺垫）</h3><p>“が”用来提示接下来要说的内容，多用于书面语。</p><ul><li>東京タワーへ　行きたいんです<strong>が</strong>，どうやって　行きますか。</li><li>李さんを　探して　いるんです<strong>が</strong>，どこに　いますか。</li><li>明日から　連休だ<strong>けど</strong>，どうするか　決めた？</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第23课　休みの日，散歩したり　買い物に　行ったり　します</title>
      <link href="/2023/01/13/japanese/23/"/>
      <url>/2023/01/13/japanese/23/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/23.png"><br>概述：两个动词、形容词、名词连用以及两个句子的连用。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">週末</td><td align="center">しゅうまつ</td><td align="center">周末</td></tr><tr><td align="center">月末</td><td align="center">げつまつ</td><td align="center">月末</td></tr><tr><td align="center">期末</td><td align="center">きまつ</td><td align="center">期末</td></tr><tr><td align="center">年末</td><td align="center">ねんまつ</td><td align="center">年末</td></tr><tr><td align="center">スケート</td><td align="center"></td><td align="center">滑冰，溜冰</td></tr><tr><td align="center">味</td><td align="center">あじ</td><td align="center">口味，味道</td></tr><tr><td align="center">毎回</td><td align="center">まいかい</td><td align="center">每次，没回</td></tr><tr><td align="center">通勤</td><td align="center">つうきん</td><td align="center">上下班，通勤</td></tr><tr><td align="center">船</td><td align="center">ふね</td><td align="center">船</td></tr><tr><td align="center">生地</td><td align="center">きじ</td><td align="center">布料，衣料</td></tr><tr><td align="center">閉店時刻</td><td align="center">へいてんじこく</td><td align="center">关门时间</td></tr><tr><td align="center">卒業式</td><td align="center">そつぎょうしき</td><td align="center">毕业典礼</td></tr><tr><td align="center">入学式</td><td align="center">にゅうがくしき</td><td align="center">入学典礼</td></tr><tr><td align="center">成人式</td><td align="center">せいじんしき</td><td align="center">成人礼</td></tr><tr><td align="center">違う</td><td align="center">ちがう</td><td align="center">不同，不一样</td></tr><tr><td align="center">込む</td><td align="center">こむ</td><td align="center">拥挤，混杂</td></tr><tr><td align="center">口と心が違う</td><td align="center">くちとこころがちがう</td><td align="center">口是心非</td></tr><tr><td align="center">決まる</td><td align="center">きまる</td><td align="center">决定</td></tr><tr><td align="center">知らせる</td><td align="center">しらせる</td><td align="center">告诉</td></tr><tr><td align="center">確かめる</td><td align="center">たしかめる</td><td align="center">查看，弄清</td></tr><tr><td align="center">濃い</td><td align="center">こい</td><td align="center">口味重，浓</td></tr><tr><td align="center">早い</td><td align="center">はやい</td><td align="center">早</td></tr><tr><td align="center">遅い</td><td align="center">おそい</td><td align="center">晚；慢</td></tr><tr><td align="center">たぶん</td><td align="center"></td><td align="center">可能，大概</td></tr><tr><td align="center">東京駅</td><td align="center">とうきょうえき</td><td align="center">东京站</td></tr><tr><td align="center">～によって</td><td align="center"></td><td align="center">根据……不同</td></tr><tr><td align="center">～によります</td><td align="center"></td><td align="center">根据……不同</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【动】たり【动】たり"><a href="#2-1【动】たり【动】たり" class="headerlink" title="2.1【动】たり【动】たり"></a>2.1【动】たり【动】たり</h3><p>用于表示列举若干种有代表性的动作时。将动词“た形”中的“た”变为“たり”</p><ul><li>小野さんは　休みの日，<strong>散歩したり　買い物に　行ったり</strong>。</li><li>家の　<strong>掃除を　したり　洗濯を　したり　します</strong>。</li></ul><hr><h3 id="2-2【一类形】かったり【一类形】かったりです；【二类形-x2F-名词】だったり【二类形-x2F-名词】だったりです"><a href="#2-2【一类形】かったり【一类形】かったりです；【二类形-x2F-名词】だったり【二类形-x2F-名词】だったりです" class="headerlink" title="2.2【一类形】かったり【一类形】かったりです；【二类形&#x2F;名词】だったり【二类形&#x2F;名词】だったりです"></a>2.2【一类形】かったり【一类形】かったりです；【二类形&#x2F;名词】だったり【二类形&#x2F;名词】だったりです</h3><p>用于表示状态或状况有多种可能时，其构成方式是将一类形容词、二类形容词和名词的过去简体形的”かった” “だった”中的”た”变成”たり”<br>一类形容词、二类形容词出现的状态一般是反义。</p><ul><li>飛行機の　チケットは　<strong>高かったり　安かったりづす</strong>。</li><li>この公園は　時間に　<strong>よって　静かだったり　にぎやかだったりです</strong>。</li><li>日本語の　先生は　<strong>中国人だったり　日本人だったりです</strong>。</li></ul><hr><h3 id="2-3【小句】-か"><a href="#2-3【小句】-か" class="headerlink" title="2.3【小句】+ か"></a>2.3【小句】+ か</h3><p>表示某种不确定的内容。动词&#x2F;形1 简体；形2&#x2F;名词简体（だ省略）<br>（1）【小句】+ か　どうか<br>将不包含疑问词的疑问句作为一个长句中的一部分时，将动词、一类形容词的敬体形变为简体形，并在后面加上“か どうか”。<br>大主语は；小主语が</p><ul><li>私は　今年の夏，北京へ　行く（<strong>か　どうか</strong>）わかりません。</li><li>小野さんは　仕事が　終わった<strong>か　どうか</strong>　聞いてください。<br>也可以重复使用动词的“基本形”和“ない形”</li><li>私は　この　料理が　<strong>辛いか　辛くないか</strong>　知りません。</li><li>私は　今年の　夏，北京へ　<strong>行くか　行かないか</strong>　分かりません。<br>名词&#x2F;二类形容词，不加“だ”。“か　どうか”小句中的主语后面必须用“が”，不用“は”。</li><li>私は　キムさんが　<strong>中国人か　どうか</strong>　知りません。</li><li>私は　キムさんが　<strong>中国人か　中国人では　ないか</strong>　知りません。<br>（2）【疑问词小句】+ か<br>将包含“何”、“だれ”、“どこ”等疑问句，作为一个长句中的一部分使用时，需将疑问词小句的动词、一类形容词的敬体形变为简体形，再加“<strong>か</strong>”</li><li>鍵か　<strong>どこに　あるか</strong>　教えて　ください。</li><li>昨日　<strong>何を　食べたか</strong>　忘れました。<br>“<strong>か</strong>”前面出现名词或二类形容词时，“~か　どうか”直接接在名词或二类形容词后面，其间不加“だ”。</li><li>この　歌が　<strong>だれの　歌か</strong>　知って　いますか。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第22课　森さんは　毎晩　テレビを　見る</title>
      <link href="/2023/01/12/japanese/22/"/>
      <url>/2023/01/12/japanese/22/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/22.png"><br>概述：动词、形容词、名词的敬体与简体形式的使用。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">スキー場</td><td align="center">すきーじょう</td><td align="center">滑雪场</td></tr><tr><td align="center">送別会</td><td align="center">そうべつかい</td><td align="center">欢送会</td></tr><tr><td align="center">都合</td><td align="center">つごう</td><td align="center">方便；情况</td></tr><tr><td align="center">予定</td><td align="center">よてい</td><td align="center">预计，预定</td></tr><tr><td align="center">おもちゃ</td><td align="center"></td><td align="center">玩具</td></tr><tr><td align="center">火事</td><td align="center">かじ</td><td align="center">火灾</td></tr><tr><td align="center">期間</td><td align="center">きかん</td><td align="center">时间，期间</td></tr><tr><td align="center">転勤</td><td align="center">てんきん</td><td align="center">调动工作</td></tr><tr><td align="center">携帯</td><td align="center">けいたい</td><td align="center">手机</td></tr><tr><td align="center">バドミントン</td><td align="center"></td><td align="center">羽毛球</td></tr><tr><td align="center">ラケット</td><td align="center"></td><td align="center">球拍</td></tr><tr><td align="center">奥さん</td><td align="center">おくさん</td><td align="center">夫人，（别人的）爱人</td></tr><tr><td align="center">主人</td><td align="center">しゅじん</td><td align="center">歌手</td></tr><tr><td align="center">旦那さん</td><td align="center">だんなさん</td><td align="center">丈夫&#x2F;爱人；先生</td></tr><tr><td align="center">歌手</td><td align="center">かしゅ</td><td align="center">歌手</td></tr><tr><td align="center">大統領</td><td align="center">だいとうりょう</td><td align="center">总统</td></tr><tr><td align="center">やる</td><td align="center"></td><td align="center">做</td></tr><tr><td align="center">うれしい</td><td align="center"></td><td align="center">高兴（主观）</td></tr><tr><td align="center">眠い</td><td align="center">ねむい</td><td align="center">困倦</td></tr><tr><td align="center">重い</td><td align="center">おもい</td><td align="center">重，沉重</td></tr><tr><td align="center">軽い</td><td align="center">かるい</td><td align="center">轻；轻微</td></tr><tr><td align="center">急</td><td align="center">きゅう</td><td align="center">突然，紧急</td></tr><tr><td align="center">まあまあ</td><td align="center"></td><td align="center">大致，还算</td></tr><tr><td align="center">あんまり</td><td align="center"></td><td align="center">太，非常，过于</td></tr><tr><td align="center">ごめん</td><td align="center"></td><td align="center">抱歉</td></tr><tr><td align="center">～以外／方</td><td align="center">いがい／かた</td><td align="center">方式（动词连用形+方）动作的方式</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-动词的简体形"><a href="#2-1-动词的简体形" class="headerlink" title="2.1 动词的简体形"></a>2.1 动词的简体形</h3><table><thead><tr><th>敬体形</th><th>简体形</th></tr></thead><tbody><tr><td>あります</td><td>ある</td></tr><tr><td>ありません</td><td>ない</td></tr><tr><td>ありました</td><td>あった</td></tr><tr><td>ありませんでした</td><td>なかった</td></tr><tr><td>買います</td><td>買う</td></tr><tr><td>買いません</td><td>買わない</td></tr><tr><td>買いました</td><td>買った</td></tr><tr><td>買いませんでした</td><td>買わなかった</td></tr></tbody></table><ul><li>森さんは　毎晩　テレビを　<strong>見る</strong>。</li><li>コーヒー，<strong>飲む</strong>？<ul><li>ううん，<strong>飲まない</strong>。</li></ul></li><li>昨日　テレビ，<strong>見た</strong>？<ul><li>ううん，<strong>見なかった</strong>。</li></ul></li></ul><hr><h3 id="2-2-一类形容词谓语形式的简体形"><a href="#2-2-一类形容词谓语形式的简体形" class="headerlink" title="2.2 一类形容词谓语形式的简体形"></a>2.2 一类形容词谓语形式的简体形</h3><table><thead><tr><th>敬体形</th><th>简体形</th></tr></thead><tbody><tr><td>忙しいです</td><td>忙しい</td></tr><tr><td>忙しくないです</td><td>忙しくない</td></tr><tr><td>忙しかったです</td><td>忙しかったです</td></tr><tr><td>忙しくなかったです</td><td>忙しくなかったです</td></tr></tbody></table><ul><li>その　カレー，<strong>おいしい</strong>？<ul><li>ううん，あんまり　<strong>おいしく　ないよ</strong>。</li></ul></li><li>昨日の　試験，<strong>どうだった</strong>？<ul><li>ちょっと　<strong>難しかった</strong>。</li></ul></li></ul><hr><h3 id="2-3-二类形容词谓语形式的简体形"><a href="#2-3-二类形容词谓语形式的简体形" class="headerlink" title="2.3 二类形容词谓语形式的简体形"></a>2.3 二类形容词谓语形式的简体形</h3><table><thead><tr><th>敬体形</th><th>简体形</th></tr></thead><tbody><tr><td>簡単です</td><td>簡単だ</td></tr><tr><td>簡単ではありません</td><td>簡単ではない</td></tr><tr><td>簡単でした</td><td>簡単だった</td></tr><tr><td>簡単ではありませんでした</td><td>簡単では　なかった</td></tr></tbody></table><ul><li>この　ネクタイ，<strong>派手</strong>？<ul><li>ううん，全然　<strong>派手じゃない</strong>わ。</li></ul></li><li>森さんの　アパート，<strong>静か</strong>？<ul><li>うん，<strong>静かだよ</strong>。</li></ul></li></ul><hr><h3 id="2-4-名词谓语形式的简体形"><a href="#2-4-名词谓语形式的简体形" class="headerlink" title="2.4 名词谓语形式的简体形"></a>2.4 名词谓语形式的简体形</h3><table><thead><tr><th>敬体形</th><th>简体形</th></tr></thead><tbody><tr><td>晴れです</td><td>晴れだ</td></tr><tr><td>晴れではありません</td><td>晴れではない</td></tr><tr><td>晴れでした</td><td>晴れだった</td></tr><tr><td>晴れではありませんでした</td><td>晴れでは　なかった</td></tr></tbody></table><ul><li>今日は　<strong>曇りだ</strong>。</li><li>明日は　<strong>水曜日だ</strong>ね。<ul><li>水曜日じゃ　ないよ。<strong>木曜日だ</strong>よ。</li></ul></li><li>昨日，スキー場は　<strong>雪だった</strong>。<ul><li>ううん，<strong>雪じゃ　なかった</strong>よ。<strong>いい天気だった</strong>。</li></ul></li></ul><hr><h3 id="2-5【小句】けど【小句】转折，铺垫"><a href="#2-5【小句】けど【小句】转折，铺垫" class="headerlink" title="2.5【小句】けど【小句】转折，铺垫"></a>2.5【小句】けど【小句】转折，铺垫</h3><p>“けど”连接两个句子，起着把两个句子归纳成一个句子的作用，用于口语<br>转折：</p><ul><li>昨日の　試験，どうだった。<ul><li>ちょっと　難しかった<strong>けど</strong>，まあまあ　できたよ。<br>铺垫：</li></ul></li><li>来週，送別会を　する<strong>けど</strong>，都合は　どうかな？</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第21课　私は　すき焼きを　食べた　ことが　あります</title>
      <link href="/2023/01/09/japanese/21/"/>
      <url>/2023/01/09/japanese/21/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/21.png"><br>概述：动词的”た”形。叙述过去体验过的事情。提议对方做的事。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">言葉</td><td align="center">ことば</td><td align="center">语言</td></tr><tr><td align="center">メールアドレス</td><td align="center"></td><td align="center">邮件地址</td></tr><tr><td align="center">連休</td><td align="center">れんきゅう</td><td align="center">连休</td></tr><tr><td align="center">ゴールデンウイーク</td><td align="center"></td><td align="center">黄金周</td></tr><tr><td align="center">終わり</td><td align="center">おわり</td><td align="center">结束</td></tr><tr><td align="center">休憩時間</td><td align="center">きゅうけいじかん</td><td align="center">休息时间</td></tr><tr><td align="center">京劇</td><td align="center">きょうげき</td><td align="center">京剧</td></tr><tr><td align="center">切符</td><td align="center">きっぷ</td><td align="center">票（券）</td></tr><tr><td align="center">体</td><td align="center">からだ</td><td align="center">身体</td></tr><tr><td align="center">地震</td><td align="center">じしん</td><td align="center">地震</td></tr><tr><td align="center">泥棒</td><td align="center">どろぼう</td><td align="center">小偷，盗贼</td></tr><tr><td align="center">駐車場</td><td align="center">ちゅうしゃじょう</td><td align="center">停车场</td></tr><tr><td align="center">渡す</td><td align="center">わたす</td><td align="center">交给</td></tr><tr><td align="center">遅れる</td><td align="center">おくれる</td><td align="center">迟到</td></tr><tr><td align="center">考える</td><td align="center">かんがえる</td><td align="center">考虑</td></tr><tr><td align="center">調べる</td><td align="center">しらべる</td><td align="center">调查</td></tr><tr><td align="center">着る</td><td align="center">きる</td><td align="center">穿</td></tr><tr><td align="center">予約します</td><td align="center">よやくします</td><td align="center">预约 预定</td></tr><tr><td align="center">感謝します</td><td align="center">かんしゃします</td><td align="center">感谢</td></tr><tr><td align="center">運動します</td><td align="center">うんどうします</td><td align="center">运动</td></tr><tr><td align="center">洗濯します</td><td align="center">せんたくします</td><td align="center">洗涤</td></tr><tr><td align="center">報告します</td><td align="center">ほうこくします</td><td align="center">报告</td></tr><tr><td align="center">危ない</td><td align="center">あぶない</td><td align="center">危险</td></tr><tr><td align="center">それとも</td><td align="center"></td><td align="center">还是，或者</td></tr><tr><td align="center">そんなに</td><td align="center"></td><td align="center">那么</td></tr><tr><td align="center">～過ぎ</td><td align="center">すぎ</td><td align="center">~过了</td></tr><tr><td align="center">３時過ぎ</td><td align="center"></td><td align="center">超过了3点</td></tr><tr><td align="center">40過ぎ</td><td align="center"></td><td align="center">超过了40</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-动词た形"><a href="#2-1-动词た形" class="headerlink" title="2.1 动词た形"></a>2.1 动词た形</h3><ul><li>1.一类动词（五段动词）。イ——&gt;词尾「く」ー＞いた；词尾「ぐ」ー＞いだ；词尾【ぬ　ぶ　む】——&gt;んだ<table><thead><tr><th align="center">う</th><th align="center">く</th><th align="center">ぐ</th><th align="center">す</th><th align="center">つ</th><th align="center">ぬ</th><th align="center">ぶ</th><th align="center">む</th><th align="center">る</th></tr></thead><tbody><tr><td align="center">会う</td><td align="center">書く</td><td align="center">急ぐ</td><td align="center">話す</td><td align="center">待つ</td><td align="center">死ぬ</td><td align="center">飛ぶ</td><td align="center">休む</td><td align="center">売る</td></tr><tr><td align="center">会った</td><td align="center">書いた</td><td align="center">急いだ</td><td align="center">話した</td><td align="center">待った</td><td align="center">死んだ</td><td align="center">飛んだ</td><td align="center">休んだ</td><td align="center">売った</td></tr></tbody></table></li><li>2.二类动词（一段动词）<table><thead><tr><th align="center"><div style="width: 80pt">原型</div></th><th align="center"><div style="width: 120pt">变形</div></th></tr></thead><tbody><tr><td align="center">食べる</td><td align="center">食べた</td></tr><tr><td align="center">見る</td><td align="center">見た</td></tr></tbody></table></li><li>3.三类动词<table><thead><tr><th align="center"><div style="width: 80pt">原型</div></th><th align="center"><div style="width: 120pt">变形</div></th></tr></thead><tbody><tr><td align="center">来る</td><td align="center">来た</td></tr><tr><td align="center">する</td><td align="center">した</td></tr></tbody></table></li></ul><hr><h3 id="2-2【动词た形】ことが-あります"><a href="#2-2【动词た形】ことが-あります" class="headerlink" title="2.2【动词た形】ことが　あります"></a>2.2【动词た形】ことが　あります</h3><p>叙述过去体验过的事情。通常用于至少半年以前发生的事情。<br>疑问句一般只问有无某种经历。回答时可重复问句中的部分词语。</p><ul><li>私は　すき焼きを　<strong>食べた　ことが　あります</strong>。</li><li>北京へ　<strong>行った　ことが　ありますか</strong>。<ul><li>いいえ，一度も　<strong>行った　ことが　ありません</strong>。</li></ul></li></ul><hr><h3 id="2-3【动词た形】後で，～"><a href="#2-3【动词た形】後で，～" class="headerlink" title="2.3【动词た形】後で，～"></a>2.3【动词た形】後で，～</h3><p>表示一个动作在另一个动作之后发生。<br>这个句型也可以以“名词+の+後で”的形式使用。</p><ul><li>会社が　<strong>終わった　後で</strong>，飲みに　行きます。</li><li>映画を　<strong>見た　後で</strong>，食事を　します。</li><li><strong>仕事の後で</strong>，映画を　見ます。</li></ul><hr><h3 id="2-4【动词た形】ほうが-いいです"><a href="#2-4【动词た形】ほうが-いいです" class="headerlink" title="2.4【动词た形】ほうが　いいです"></a>2.4【动词た形】ほうが　いいです</h3><p>本句型用于在两种事物中进行选择时。否定时，使用动词ない形</p><ul><li>もっと　野菜を　<strong>食べた　ほうが　いいですよ</strong>。</li><li>そんなに　<strong>慌てない　ほうが　いいですよ</strong>。</li><li>ホテルを　<strong>予約した　ほうが　いいですか</strong>。</li></ul><hr><h3 id="2-5【动词】ましょうか「提议」"><a href="#2-5【动词】ましょうか「提议」" class="headerlink" title="2.5【动词】ましょうか「提议」"></a>2.5【动词】ましょうか「提议」</h3><p>用于提议对方和自己一起做某事或向对方提议自己为对方做某事。</p><ul><li>何か　<strong>食べましょうか</strong>。</li><li>荷物を　<strong>持ちましょうか</strong>。<ul><li>はい，<strong>お願いします</strong>。</li></ul></li><li>窓を　<strong>閉めましょうか</strong>。<ul><li>いいえ，<strong>閉めないで　ください</strong>。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第20课　スムスさんは　ピアノを　弾く　にとが　できます</title>
      <link href="/2023/01/08/japanese/20/"/>
      <url>/2023/01/08/japanese/20/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/20.png"><br>概述：动词的基本形使用，前文已赘述其变形方法。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">趣味</td><td align="center">しゅみ</td><td align="center">爱好</td></tr><tr><td align="center">特技</td><td align="center">とくぎ</td><td align="center">特长</td></tr><tr><td align="center">夢</td><td align="center">ゆめ</td><td align="center">梦，理想</td></tr><tr><td align="center">ギター</td><td align="center"></td><td align="center">吉他</td></tr><tr><td align="center">胡弓</td><td align="center">こきゅう</td><td align="center">胡琴</td></tr><tr><td align="center">書道</td><td align="center">しょどう</td><td align="center">书法</td></tr><tr><td align="center">釣り</td><td align="center">つり</td><td align="center">钓鱼</td></tr><tr><td align="center">ドライブ</td><td align="center"></td><td align="center">兜风，开车远游</td></tr><tr><td align="center">編み物</td><td align="center">あみもの</td><td align="center">编织品；编制</td></tr><tr><td align="center">手作り</td><td align="center">てづくり</td><td align="center">手工做</td></tr><tr><td align="center">中華街</td><td align="center">ちゅうかがい</td><td align="center">中华街</td></tr><tr><td align="center">中華料理</td><td align="center">ちゅうかりょうり</td><td align="center">中国菜</td></tr><tr><td align="center">ギョーザ</td><td align="center"></td><td align="center">饺子</td></tr><tr><td align="center">皮</td><td align="center">かわ</td><td align="center">皮</td></tr><tr><td align="center">春節</td><td align="center">しゅんせつ</td><td align="center">春节</td></tr><tr><td align="center">獅子舞</td><td align="center">ししまい</td><td align="center">狮子舞</td></tr><tr><td align="center">寮</td><td align="center">りょう</td><td align="center">宿舍</td></tr><tr><td align="center">洗濯機</td><td align="center">せんたくき</td><td align="center">洗衣机</td></tr><tr><td align="center">シャワー</td><td align="center"></td><td align="center">淋浴</td></tr><tr><td align="center">饅頭</td><td align="center">まんじゅう</td><td align="center">馒头</td></tr><tr><td align="center">おなか</td><td align="center"></td><td align="center">肚子</td></tr><tr><td align="center">授業</td><td align="center">じゅぎょう</td><td align="center">授课，上课</td></tr><tr><td align="center">資料</td><td align="center">しりょう</td><td align="center">资料</td></tr><tr><td align="center">小説</td><td align="center">しょうせつ</td><td align="center">小说</td></tr><tr><td align="center">海岸</td><td align="center">かいがん</td><td align="center">海岸</td></tr><tr><td align="center">冬休み</td><td align="center">ふゆやすみ</td><td align="center">寒假</td></tr><tr><td align="center">キャンプ</td><td align="center"></td><td align="center">野营</td></tr><tr><td align="center">みんな</td><td align="center"></td><td align="center">大家</td></tr><tr><td align="center">自分</td><td align="center">じぶん</td><td align="center">自己</td></tr><tr><td align="center">全員</td><td align="center">ぜんいん</td><td align="center">全员</td></tr><tr><td align="center">弾く</td><td align="center">ひく</td><td align="center">弹</td></tr><tr><td align="center">すく</td><td align="center"></td><td align="center">肚子 饿，空</td></tr><tr><td align="center">腹減った</td><td align="center">はらへった</td><td align="center">肚子饿</td></tr><tr><td align="center">上る</td><td align="center">のぼる</td><td align="center">登，上</td></tr><tr><td align="center">集める</td><td align="center">あつめる</td><td align="center">收集</td></tr><tr><td align="center">浴びる</td><td align="center">あびる</td><td align="center">淋，浇</td></tr><tr><td align="center">ごちそうする</td><td align="center"></td><td align="center">请客</td></tr><tr><td align="center">帰国する</td><td align="center">きこくする</td><td align="center">回国</td></tr><tr><td align="center">特に</td><td align="center">とくに</td><td align="center">特别</td></tr><tr><td align="center">おなかがすきます</td><td align="center"></td><td align="center">肚子饿</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【名-人】は-【动词基本形】ことが-できます"><a href="#2-1【名-人】は-【动词基本形】ことが-できます" class="headerlink" title="2.1【名 人】は　【动词基本形】ことが　できます"></a>2.1【名 人】は　【动词基本形】ことが　できます</h3><p>动词基本形 + ことが　できます 表示能力，肯定情况下可以单用“できます”，否定情况下可以单用“できません”。</p><ul><li>スミスさん　ピアノを　<strong>弾く　ことが　できます</strong>。</li><li>李さんは　中華料理を　<strong>作る　できません</strong>。</li></ul><hr><h3 id="2-2【名】は-【动词基本形】"><a href="#2-2【名】は-【动词基本形】" class="headerlink" title="2.2【名】は　【动词基本形】"></a>2.2【名】は　【动词基本形】</h3><p>当谓语部分的内容是一种动作，行为时使用这个句型。</p><ul><li>私の　趣味は　切手を　<strong>集める　ことです</strong>。</li><li>小野さんは　<strong>車を　運転する</strong>　ことが　できません。</li></ul><hr><h3 id="2-3【动词基本形】／【名词-の】前に，～"><a href="#2-3【动词基本形】／【名词-の】前に，～" class="headerlink" title="2.3【动词基本形】／【名词+の】前に，～"></a>2.3【动词基本形】／【名词+の】前に，～</h3><p>表示一个动作在另一个动作之前发生。</p><ul><li>こちらはへ　<strong>来る　前に</strong>　電話を　かけて　ください。</li><li>毎日　<strong>寝る　前に</strong>　シャワーを　浴びます。</li><li><strong>会議の　前に</strong>，資料を　コピーします。</li></ul><hr><h3 id="2-4-疑问词-か"><a href="#2-4-疑问词-か" class="headerlink" title="2.4 疑问词 + か"></a>2.4 疑问词 + か</h3><p>疑问词“いつ”，”どこ”，”だれ”等词后续“か”，表示“某时”，“某地”，“某人”</p><ul><li>部屋に　誰<strong>か</strong>　いますか。</li><li>部屋に　誰<strong>が</strong>　いますか。<br>“いつか”，“どこか”，“だれか”，“なにか”等本身不表示疑问的意思，可用于陈述句。</li><li>冬休み，<strong>どこか</strong>へ　行きたいです。</li><li>おなかが　すきましたね。<strong>何か</strong>　食べましょう。</li></ul><hr><h3 id="2-5-よね"><a href="#2-5-よね" class="headerlink" title="2.5 ~よね"></a>2.5 ~よね</h3><p>当说话人对自己的意见想法没有足够的把握时用“よね”</p><ul><li>手作りの　ギョーザの　皮は　おいしいですよね。</li><li>この　傘は　森さんのですよね。</li><li>小野さんも　いっしょに　行きますよね。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第19课　部屋の　かぎを　忘れないで　ください</title>
      <link href="/2023/01/07/japanese/19/"/>
      <url>/2023/01/07/japanese/19/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/19.png"><br>概述：动词”ない形”。动词的假设肯定使用方式。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">品物</td><td align="center">しなもの</td><td align="center">物品，商品</td></tr><tr><td align="center">紹介</td><td align="center">しょうかい</td><td align="center">介绍</td></tr><tr><td align="center">物事</td><td align="center">ものごと</td><td align="center">事物</td></tr><tr><td align="center">初級</td><td align="center">しょきゅう</td><td align="center">初级</td></tr><tr><td align="center">中級</td><td align="center">ちゅうきゅう</td><td align="center">中级</td></tr><tr><td align="center">上級</td><td align="center">じょうきゅう</td><td align="center">上级</td></tr><tr><td align="center">初心者</td><td align="center">しょしんしゃ</td><td align="center">初学者</td></tr><tr><td align="center">上級者</td><td align="center">じょうきゅうしゃ</td><td align="center">熟练者</td></tr><tr><td align="center">高級</td><td align="center">こうきゅう</td><td align="center">高级</td></tr><tr><td align="center">高級クラス</td><td align="center">こうきゅうクラス</td><td align="center">高级班</td></tr><tr><td align="center">英会話</td><td align="center">えいかいわ</td><td align="center">英语会话</td></tr><tr><td align="center">コース</td><td align="center"></td><td align="center">路线，滑道</td></tr><tr><td align="center">スキー</td><td align="center"></td><td align="center">滑雪</td></tr><tr><td align="center">レポート</td><td align="center"></td><td align="center">报告</td></tr><tr><td align="center">パスポート</td><td align="center"></td><td align="center">护照</td></tr><tr><td align="center">喉</td><td align="center">のど</td><td align="center">喉咙</td></tr><tr><td align="center">触る</td><td align="center">さわる</td><td align="center">碰，触</td></tr><tr><td align="center">脱ぐ</td><td align="center">ぬぐ</td><td align="center">脱</td></tr><tr><td align="center">転ぶ</td><td align="center">ころぶ</td><td align="center">摔，摔倒</td></tr><tr><td align="center">渇く</td><td align="center">かわく</td><td align="center">渴</td></tr><tr><td align="center">治る</td><td align="center">なおる</td><td align="center">痊愈，医好</td></tr><tr><td align="center">滑る</td><td align="center">すべる</td><td align="center">滑行</td></tr><tr><td align="center">呼ぶ</td><td align="center">よぶ</td><td align="center">呼喊</td></tr><tr><td align="center">返す</td><td align="center">かえす</td><td align="center">归还</td></tr><tr><td align="center">手伝う</td><td align="center">てつだう</td><td align="center">帮忙</td></tr><tr><td align="center">運ぶ</td><td align="center">はこぶ</td><td align="center">搬运</td></tr><tr><td align="center">なくす</td><td align="center"></td><td align="center">丢失</td></tr><tr><td align="center">落とす</td><td align="center">おとす</td><td align="center">他动词 使落下</td></tr><tr><td align="center">落ちる</td><td align="center">おちる</td><td align="center">自动词 落下</td></tr><tr><td align="center">置く</td><td align="center">おく</td><td align="center">放置</td></tr><tr><td align="center">払う</td><td align="center">はらう</td><td align="center">支付</td></tr><tr><td align="center">立つ</td><td align="center">たつ</td><td align="center">站</td></tr><tr><td align="center">忘れする</td><td align="center">わすれ</td><td align="center">忘记</td></tr><tr><td align="center">慌てする</td><td align="center">あわて</td><td align="center">慌张</td></tr><tr><td align="center">捨てする</td><td align="center">すて</td><td align="center">扔，扔掉</td></tr><tr><td align="center">残業する</td><td align="center">ざんぎょう</td><td align="center">加班</td></tr><tr><td align="center">心配する</td><td align="center">しんぱい</td><td align="center">担心</td></tr><tr><td align="center">本当</td><td align="center">ほんとう</td><td align="center">真的，真正</td></tr><tr><td align="center">早く</td><td align="center">はやく</td><td align="center">早点儿</td></tr><tr><td align="center">やっと</td><td align="center"></td><td align="center">好不容易，终于</td></tr><tr><td align="center">だいぶ</td><td align="center"></td><td align="center">很，相当</td></tr><tr><td align="center">初めて</td><td align="center"></td><td align="center">第一次</td></tr><tr><td align="center">先に</td><td align="center">さきに</td><td align="center">先</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-动词-ない-形"><a href="#2-1-动词-ない-形" class="headerlink" title="2.1 动词 ない 形"></a>2.1 动词 ない 形</h3><p>动作否定简体变形。</p><ul><li>一类动词：把“ます形”去掉“ます”后的最后一个音变成相应的“あ段”音，后加“ない”，如果最后音为“い”，把“い”变成“わ”后加“ない”<br>  也可以表示为动词原形把“う”段假名变成同行中″あ”段 + ない”<table><thead><tr><th align="center">う</th><th align="center">く</th><th align="center">ぐ</th><th align="center">す</th><th align="center">つ</th><th align="center">ぬ</th><th align="center">ぶ</th><th align="center">む</th><th align="center">る</th></tr></thead><tbody><tr><td align="center">買う</td><td align="center">書く</td><td align="center">急ぐ</td><td align="center">話す</td><td align="center">立つ</td><td align="center">死ぬ</td><td align="center">呼ぶ</td><td align="center">休む</td><td align="center">売る</td></tr><tr><td align="center">買わない</td><td align="center">書かない</td><td align="center">急がない</td><td align="center">話さない</td><td align="center">立たない</td><td align="center">死なない</td><td align="center">呼ばない</td><td align="center">休まない</td><td align="center">売らない</td></tr></tbody></table></li><li>二类动词：把“ます形”去掉“ます”加“ない”。<table><thead><tr><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">食べる</td><td align="center">食べない</td></tr><tr><td align="center">見る</td><td align="center">見ない</td></tr></tbody></table></li><li>三类动词：来（き）ます—&gt;来（こ）ない　します—&gt;しない</li><li><table><thead><tr><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">来ます</td><td align="center">来ない</td></tr><tr><td align="center">します</td><td align="center">しない</td></tr></tbody></table></li></ul><hr><h3 id="2-2【动词】ないで-ください"><a href="#2-2【动词】ないで-ください" class="headerlink" title="2.2【动词】ないで　ください"></a>2.2【动词】ないで　ください</h3><p>表示否定请求的命令。</p><ul><li>部屋の　かぎを　<strong>忘れないで</strong>　ください。</li><li>無理を　<strong>しないで</strong>　ください。</li><li>この　部屋には　<strong>入らないで</strong>　ください。</li></ul><hr><h3 id="2-3【动词】なければ-なりません"><a href="#2-3【动词】なければ-なりません" class="headerlink" title="2.3【动词】なければ　なりません"></a>2.3【动词】なければ　なりません</h3><p>假定形：必须、不得不，客观上必须做，相当于”have to”。接续方法是将动词”ない形”中的“ない”换成“なければ　なりません”，也可以换成“ないと　いけません”。</p><ul><li>李さんは　今日　早く　<strong>帰ら　なければ　なりません</strong>。</li><li>この　薬は　毎日　<strong>飲ま　なければ　なりません</strong>。</li><li>すぐに　書類を　<strong>送ら　ないと　いけません</strong>。</li></ul><hr><h3 id="2-4【动词】なくても-いいです"><a href="#2-4【动词】なくても-いいです" class="headerlink" title="2.4【动词】なくても　いいです"></a>2.4【动词】なくても　いいです</h3><p>表示不做某事也可以。相当于“なければ　なりません”的否定。将“ない形”中的“ない”替换为<br>“なくても　いいです”</p><ul><li>明日は　<strong>残業し　なくても　いいです</strong>。</li><li>慌て　<strong>なくても　いいです</strong>。</li><li>靴を　<strong>脱が　なくても　いいです</strong>。</li></ul><hr><h3 id="2-5【名1】が-【名2】です"><a href="#2-5【名1】が-【名2】です" class="headerlink" title="2.5【名1】が 【名2】です"></a>2.5【名1】が 【名2】です</h3><p>1.“名词1”是新信息，“名词2”是旧信息。新信息做主语时用“が”来表示。</p><ul><li>山田先生は　どの　方ですか。<ul><li>あの　方<strong>が</strong>　山田先生です。</li></ul></li><li>吉田課長は　いますか。<ul><li>私<strong>が</strong>　吉田です<strong>が</strong>………。</li></ul></li><li>あなたの　かばんは　どれですか。<ul><li>これ<strong>が</strong>　私の　かばんです。<br>2.叙述直接观察到的某事物，而不是作为话题在谈论这个事物时，使用该形式。</li></ul></li><li>子供<strong>が</strong>　公園で　遊んで　います。</li><li>バス<strong>が</strong>　来ました。<br>3.”何”　”誰”　”どこ”　”いつ”等表示疑问的词做主语时不能用“は”，只能用“が”</li><li>誰<strong>が</strong>　いますか。</li><li>どこ<strong>が</strong>　痛いですか。</li><li>何<strong>が</strong>　好きですか。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第18课　携帯電話は　とても　小さく　なりました</title>
      <link href="/2023/01/06/japanese/18/"/>
      <url>/2023/01/06/japanese/18/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/18.png"><br>概述：形容词-&gt;自动词（变化的结果）。比较两个以上事物的性质。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">音</td><td align="center">おと</td><td align="center">声音 物体</td></tr><tr><td align="center">声</td><td align="center">こえ</td><td align="center">声音 人和动物</td></tr><tr><td align="center">空気</td><td align="center">くうき</td><td align="center">空气</td></tr><tr><td align="center">息子</td><td align="center">むすこ</td><td align="center">儿子</td></tr><tr><td align="center">娘</td><td align="center">むすめ</td><td align="center">女儿</td></tr><tr><td align="center">医者</td><td align="center">いしゃ</td><td align="center">医生</td></tr><tr><td align="center">お嬢さん</td><td align="center">おじょうさん</td><td align="center">令爱</td></tr><tr><td align="center">社会人</td><td align="center">しゃかいじん</td><td align="center">社会的一员，成人</td></tr><tr><td align="center">旅行ガイド</td><td align="center">りょこうガイド</td><td align="center">旅行导游</td></tr><tr><td align="center">学者</td><td align="center">がくしゃ</td><td align="center">学者</td></tr><tr><td align="center">パイロット</td><td align="center"></td><td align="center">飞行员</td></tr><tr><td align="center">デザイナー</td><td align="center"></td><td align="center">设计者</td></tr><tr><td align="center">タイムサービス</td><td align="center"></td><td align="center">时段廉价销售</td></tr><tr><td align="center">新春セール</td><td align="center">しんしゅんセール</td><td align="center">新年大甩卖</td></tr><tr><td align="center">三割引き</td><td align="center">さんわりびき</td><td align="center">七折</td></tr><tr><td align="center">定価</td><td align="center">ていか</td><td align="center">定价</td></tr><tr><td align="center">半額</td><td align="center">はんがく</td><td align="center">半价</td></tr><tr><td align="center">値段</td><td align="center">ねだん</td><td align="center">价格</td></tr><tr><td align="center">シャツ</td><td align="center"></td><td align="center">衬衫</td></tr><tr><td align="center">スカート</td><td align="center"></td><td align="center">裙子</td></tr><tr><td align="center">色</td><td align="center">いろ</td><td align="center">颜色</td></tr><tr><td align="center">赤</td><td align="center">あか</td><td align="center">红色</td></tr><tr><td align="center">青</td><td align="center">あお</td><td align="center">蓝色</td></tr><tr><td align="center">お正月</td><td align="center">おしょうがつ</td><td align="center">过年，新年</td></tr><tr><td align="center">時間</td><td align="center">じかん</td><td align="center">时间</td></tr><tr><td align="center">将来</td><td align="center">しょうらい</td><td align="center">将来</td></tr><tr><td align="center">準備</td><td align="center">じゅんび</td><td align="center">准备</td></tr><tr><td align="center">病気</td><td align="center">びょうき</td><td align="center">疾病</td></tr><tr><td align="center">なります</td><td align="center"></td><td align="center">变，当</td></tr><tr><td align="center">開く</td><td align="center">あく</td><td align="center">开</td></tr><tr><td align="center">似合う</td><td align="center">にあう</td><td align="center">适合，相称</td></tr><tr><td align="center">うるさい</td><td align="center"></td><td align="center">闹，使人心烦</td></tr><tr><td align="center">シンプル</td><td align="center"></td><td align="center">单纯，简洁</td></tr><tr><td align="center">間もなく</td><td align="center">まもなく</td><td align="center">马上，一会儿</td></tr><tr><td align="center">もうすぐ</td><td align="center"></td><td align="center">马上</td></tr><tr><td align="center">さらに／もっと</td><td align="center"></td><td align="center">更加，更</td></tr><tr><td align="center">できるだけ</td><td align="center"></td><td align="center">尽量，尽可能</td></tr><tr><td align="center">まとめて</td><td align="center"></td><td align="center">一下子，一起，汇总</td></tr><tr><td align="center">今から</td><td align="center">いまから</td><td align="center">从现在起</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【一类形】なります"><a href="#2-1【一类形】なります" class="headerlink" title="2.1【一类形】なります"></a>2.1【一类形】なります</h3><p>可以用“一类形+なります”的形式来表示性质或状态的变化。其构成方式是把一类形容词的词尾“い”变成“く”，再加“なります”</p><ul><li>だんだん　<strong>暖かく</strong>　なります。</li><li>パソコンは　<strong>安く</strong>　なりました。</li><li>髪お　短くしてください。</li></ul><hr><h3 id="2-2【一类形】します"><a href="#2-2【一类形】します" class="headerlink" title="2.2【一类形】します"></a>2.2【一类形】します</h3><p>“一类形+します”引起事物发生变化的场合 使……变成，使其发生变化。</p><ul><li>テレビの　音を　<strong>大きく</strong>　します。</li><li>ジュースを　<strong>冷たく</strong>　します。</li></ul><hr><h3 id="2-3【二类形】-x2F-【名】に-なります"><a href="#2-3【二类形】-x2F-【名】に-なります" class="headerlink" title="2.3【二类形】&#x2F;【名】に　なります"></a>2.3【二类形】&#x2F;【名】に　なります</h3><p>二类形容词与名词表示性质或状态的变化。</p><ul><li>もう　<strong>元気に</strong>　なりました。</li><li>息子は　<strong>医者に</strong>　なりました。</li></ul><hr><h3 id="2-4【二类形】-x2F-【名】に-します"><a href="#2-4【二类形】-x2F-【名】に-します" class="headerlink" title="2.4【二类形】&#x2F;【名】に　します"></a>2.4【二类形】&#x2F;【名】に　します</h3><p>“二类形容词与名词+します”引起事物发生变化的场合 使……变成，使其发生变化。</p><ul><li>部屋を　<strong>きれいに</strong>　してください。</li><li>会議室を　<strong>禁煙に</strong>　します。</li></ul><hr><h3 id="2-5【一类形-x2F-二类形】ほうが-いいです"><a href="#2-5【一类形-x2F-二类形】ほうが-いいです" class="headerlink" title="2.5【一类形&#x2F;二类形】ほうが　いいです"></a>2.5【一类形&#x2F;二类形】ほうが　いいです</h3><p>表示两个以上事物的性质，认为一个比较好时，可以用“一类形 + ほうが　いいです”<br>“二类形+な+ほうが　いいです”，表示自己的选择或向别人提议</p><ul><li>旅行の　<strong>荷物は</strong>　軽い　ほうがいいです。</li><li>子供は　<strong>元気な</strong>　ほんがいいです。</li><li>公園は　<strong>静かな</strong>　ほうがいいです。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第17课　わたしは　新しい　洋服が　欲しいです</title>
      <link href="/2023/01/05/japanese/17/"/>
      <url>/2023/01/05/japanese/17/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/17.png"><br>概述：表示意愿动词，建议。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">洋服</td><td align="center">ようふく</td><td align="center">西服</td></tr><tr><td align="center">和服</td><td align="center">わふく</td><td align="center">和服</td></tr><tr><td align="center">背広</td><td align="center">せびろ</td><td align="center">结婚礼服</td></tr><tr><td align="center">セーター</td><td align="center"></td><td align="center">毛衣</td></tr><tr><td align="center">ノートパソコン</td><td align="center"></td><td align="center">笔记本电脑</td></tr><tr><td align="center">バイク</td><td align="center"></td><td align="center">摩托车</td></tr><tr><td align="center">お汁粉</td><td align="center">おしるこ</td><td align="center">年糕小豆汤</td></tr><tr><td align="center">天ぷら</td><td align="center">てんぷら</td><td align="center">天妇罗</td></tr><tr><td align="center">初詣</td><td align="center">はつもうで</td><td align="center">新年后首次参拜</td></tr><tr><td align="center">初雪</td><td align="center">はつゆき</td><td align="center">初雪</td></tr><tr><td align="center">初恋</td><td align="center">はつこい</td><td align="center">初恋</td></tr><tr><td align="center">初キス</td><td align="center"></td><td align="center">初吻</td></tr><tr><td align="center">健康</td><td align="center">けんこう</td><td align="center">健康</td></tr><tr><td align="center">恋愛</td><td align="center">れんあい</td><td align="center">恋爱</td></tr><tr><td align="center">ドラマ</td><td align="center"></td><td align="center">连续剧</td></tr><tr><td align="center">相手</td><td align="center">あいて</td><td align="center">对象，对方</td></tr><tr><td align="center">恋人</td><td align="center">こいびと</td><td align="center">恋人</td></tr><tr><td align="center">先輩</td><td align="center">せんぱい</td><td align="center">前辈</td></tr><tr><td align="center">男性</td><td align="center">だんせい</td><td align="center">男性</td></tr><tr><td align="center">女性</td><td align="center">じょせい</td><td align="center">女性</td></tr><tr><td align="center">外国人</td><td align="center">がいこくじん</td><td align="center">外国人</td></tr><tr><td align="center">夏</td><td align="center">なつ</td><td align="center">夏天</td></tr><tr><td align="center">今年</td><td align="center">ことし</td><td align="center">今年</td></tr><tr><td align="center">始める</td><td align="center">はじめる</td><td align="center">开始</td></tr><tr><td align="center">連絡する</td><td align="center">れんらくする</td><td align="center">联系</td></tr><tr><td align="center">欲しい</td><td align="center">ほしい</td><td align="center">想要</td></tr><tr><td align="center">立派</td><td align="center">りっぱ</td><td align="center">美观，杰出</td></tr><tr><td align="center">今度</td><td align="center">こんど</td><td align="center">下次；这回</td></tr><tr><td align="center">ぜひ</td><td align="center"></td><td align="center">一定</td></tr><tr><td align="center">そろそろ</td><td align="center"></td><td align="center">快要</td></tr><tr><td align="center">まず</td><td align="center"></td><td align="center">先，首先</td></tr><tr><td align="center">ベートーベン</td><td align="center"></td><td align="center">贝多芬</td></tr><tr><td align="center">ショパン</td><td align="center"></td><td align="center">肖邦</td></tr><tr><td align="center">故宮</td><td align="center">こきゅう</td><td align="center">故宫</td></tr><tr><td align="center">ヨーロッパ</td><td align="center"></td><td align="center">欧洲</td></tr><tr><td align="center">香港</td><td align="center">ホンコン</td><td align="center">香港</td></tr><tr><td align="center">スイス</td><td align="center"></td><td align="center">瑞士</td></tr><tr><td align="center">～中に</td><td align="center">じゅうに</td><td align="center">~中</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【名】が-欲しいです"><a href="#2-1【名】が-欲しいです" class="headerlink" title="2.1【名】が　欲しいです"></a>2.1【名】が　欲しいです</h3><p>表示愿望时，使用“【名词1】は　【名词2】が　欲しいです”这一表达形式。“名词1”是愿望的主题，“名词2”表示愿望的对象。</p><ul><li>私は　新しい　洋服<strong>が</strong>　欲しいです。</li><li>何<strong>が</strong>　欲しいですか。<ul><li>新しい　パソコン<strong>が</strong>　欲しいです。</li></ul></li></ul><hr><h3 id="2-2【名】を-【动】たいです"><a href="#2-2【名】を-【动】たいです" class="headerlink" title="2.2【名】を　【动】たいです"></a>2.2【名】を　【动】たいです</h3><p>表达相当于汉语“想~”的意思，“名词1”是愿望的主体，“名词2”表示希望进行动作的对象。“たい”前接动词“ます形”去掉“ます”的形式。</p><ul><li>私は　映画<strong>を</strong>　見たいです。</li><li>今日は　お酒<strong>を</strong>　飲みたくないです。</li><li>あなたは　何を　したいですか。<ul><li>何も　したく　ありません。</li></ul></li></ul><hr><h3 id="2-3【动】ませんか"><a href="#2-3【动】ませんか" class="headerlink" title="2.3【动】ませんか"></a>2.3【动】ませんか</h3><p>动词的否定形式“~ませんか”加上表示疑问的“か”，表面上是一种疑问形式，语法功能表示提议。</p><ul><li>いっしょに　お茶を　飲みませんか。</li><li>少し　休みませんか。</li></ul><hr><h3 id="2-4【动】ましょう"><a href="#2-4【动】ましょう" class="headerlink" title="2.4【动】ましょう"></a>2.4【动】ましょう</h3><p>把动词“ます形”的“ます”换成“ましょう”，可表示提议。</p><ul><li>そろそろ　行きましょう。</li></ul><hr><h3 id="2-5-疑问词-でも"><a href="#2-5-疑问词-でも" class="headerlink" title="2.5 疑问词 + でも"></a>2.5 疑问词 + でも</h3><p>表示在任何情况下事态都相同。</p><ul><li>李さん，何を　食べたいですか。<ul><li>何でも　いいです。</li></ul></li><li>いつでも　電話を　してください。</li></ul><hr><h3 id="2-6-ね-缓和语气"><a href="#2-6-ね-缓和语气" class="headerlink" title="2.6 ね 缓和语气"></a>2.6 ね 缓和语气</h3><ul><li>日本料理で　何が　いちばん　好きですか。<ul><li>そうですね。やっぱり　お寿司です<strong>ね</strong>。</li></ul></li></ul><hr><h3 id="2-7【～中】与【～中に】"><a href="#2-7【～中】与【～中に】" class="headerlink" title="2.7【～中】与【～中に】"></a>2.7【～中】与【～中に】</h3><p>未来某一特定时间的名词 + 中に<br>表示该期间结束之前<br>（1）「～じゅうに」：今日　明日　今年</p><ul><li><strong>今年中に</strong>日本へ旅行に行きたいです。<br>（2）「～ちゅうに」：来週　来月</li><li><strong>来週中に</strong>レポートを出してください。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第16课　ホテルの　部屋は　広くて　明るいです</title>
      <link href="/2023/01/04/japanese/16/"/>
      <url>/2023/01/04/japanese/16/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/16.png"><br>概述：两个以上一类、二类形容词连用，动词结果状态。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">操作</td><td align="center">そうさ</td><td align="center">操作，操纵</td></tr><tr><td align="center">機械</td><td align="center">きかい</td><td align="center">机械，机器</td></tr><tr><td align="center">旅行会社</td><td align="center">りょこうがいしゃ</td><td align="center">旅行社</td></tr><tr><td align="center">航空会社</td><td align="center">こうくうがいしゃ</td><td align="center">航空公司</td></tr><tr><td align="center">営業部</td><td align="center">えいぎょうぶ</td><td align="center">营业部</td></tr><tr><td align="center">企画部</td><td align="center">きかくぶ</td><td align="center">企划部</td></tr><tr><td align="center">開発部</td><td align="center">かいはつぶ</td><td align="center">开发部</td></tr><tr><td align="center">IT産業</td><td align="center">アイティー産業</td><td align="center">IT产业</td></tr><tr><td align="center">工業</td><td align="center">こうぎょう</td><td align="center">工业</td></tr><tr><td align="center">商業</td><td align="center">しょうぎょう</td><td align="center">商业</td></tr><tr><td align="center">製品</td><td align="center">せいひん</td><td align="center">产品</td></tr><tr><td align="center">建築家</td><td align="center">けんちくか</td><td align="center">建筑师</td></tr><tr><td align="center">設計</td><td align="center">せっけい</td><td align="center">设计</td></tr><tr><td align="center">デザイン</td><td align="center"></td><td align="center">设计图</td></tr><tr><td align="center">形</td><td align="center">かたち</td><td align="center">造型，形状，形式</td></tr><tr><td align="center">最新</td><td align="center">さいしん</td><td align="center">最新</td></tr><tr><td align="center">ネクタイ</td><td align="center"></td><td align="center">领带</td></tr><tr><td align="center">財布</td><td align="center">さいふ</td><td align="center">钱包</td></tr><tr><td align="center">革</td><td align="center">かわ</td><td align="center">皮革</td></tr><tr><td align="center">布</td><td align="center">ぬの</td><td align="center">布匹</td></tr><tr><td align="center">水筒</td><td align="center">すいとう</td><td align="center">水壶</td></tr><tr><td align="center">緑</td><td align="center">みどり</td><td align="center">绿色</td></tr><tr><td align="center">足</td><td align="center">あし</td><td align="center">脚</td></tr><tr><td align="center">指</td><td align="center">ゆび</td><td align="center">手指</td></tr><tr><td align="center">目</td><td align="center">め</td><td align="center">眼睛</td></tr><tr><td align="center">鼻</td><td align="center">はな</td><td align="center">鼻子</td></tr><tr><td align="center">顔</td><td align="center">かお</td><td align="center">脸</td></tr><tr><td align="center">頭</td><td align="center">あたま</td><td align="center">头，头脑</td></tr><tr><td align="center">アイディーカード</td><td align="center"></td><td align="center">身份证</td></tr><tr><td align="center">間違い</td><td align="center">まちがい</td><td align="center">错误，失误</td></tr><tr><td align="center">問題</td><td align="center">もんだい</td><td align="center">问题</td></tr><tr><td align="center">広告</td><td align="center">こうこく</td><td align="center">广告</td></tr><tr><td align="center">看板</td><td align="center">かんばん</td><td align="center">牌子</td></tr><tr><td align="center">展示場</td><td align="center">てんじじょう</td><td align="center">展览会场</td></tr><tr><td align="center">入場料</td><td align="center">にゅうじょうりょう</td><td align="center">门票，入场券</td></tr><tr><td align="center">サービス</td><td align="center"></td><td align="center">服务</td></tr><tr><td align="center">天井</td><td align="center">てんじょう</td><td align="center">天棚</td></tr><tr><td align="center">警備</td><td align="center">けいび</td><td align="center">戒备，警备</td></tr><tr><td align="center">クリスマスツリー</td><td align="center"></td><td align="center">圣诞树</td></tr><tr><td align="center">オーストラリア人</td><td align="center"></td><td align="center">澳大利亚人</td></tr><tr><td align="center">皆さん</td><td align="center">みなさん</td><td align="center">大家，诸位</td></tr><tr><td align="center">子</td><td align="center">こ</td><td align="center">孩子</td></tr><tr><td align="center">横</td><td align="center">よこ</td><td align="center">旁边，侧面</td></tr><tr><td align="center">持つ</td><td align="center">もつ</td><td align="center">有，拥有</td></tr><tr><td align="center">住む</td><td align="center">すむ</td><td align="center">住，居住</td></tr><tr><td align="center">知る</td><td align="center">しる</td><td align="center">认知，知道</td></tr><tr><td align="center">直す</td><td align="center">なおす</td><td align="center">改，修改</td></tr><tr><td align="center">片づける</td><td align="center">かたづける</td><td align="center">收拾，整理</td></tr><tr><td align="center">練習する</td><td align="center">れんしゅうする</td><td align="center">练习</td></tr><tr><td align="center">結婚する</td><td align="center">けっこんする</td><td align="center">结婚</td></tr><tr><td align="center">恋人</td><td align="center">こいびと</td><td align="center">恋人</td></tr><tr><td align="center">安心する</td><td align="center">あんしんする</td><td align="center">安心，放心</td></tr><tr><td align="center">明るい</td><td align="center">あかるい</td><td align="center">明亮，开朗</td></tr><tr><td align="center">長い</td><td align="center">ながい</td><td align="center">长，长久</td></tr><tr><td align="center">短い</td><td align="center">みじかい</td><td align="center">短，短暂</td></tr><tr><td align="center">軽い</td><td align="center">かるい</td><td align="center">轻巧，轻松，轻微</td></tr><tr><td align="center">優しい</td><td align="center">やさしい</td><td align="center">和蔼，温和</td></tr><tr><td align="center">細い</td><td align="center">ほそい</td><td align="center">小，细长，纤细</td></tr><tr><td align="center">太い</td><td align="center">ふとい</td><td align="center">粗，胖</td></tr><tr><td align="center">黒い</td><td align="center">くろい</td><td align="center">黑，黑色</td></tr><tr><td align="center">ユニーク</td><td align="center"></td><td align="center">独特</td></tr><tr><td align="center">安全</td><td align="center">あんぜん</td><td align="center">安全</td></tr><tr><td align="center">派手</td><td align="center">はで</td><td align="center">耀眼，花哨</td></tr><tr><td align="center">地味</td><td align="center">じみ</td><td align="center">质朴，朴素</td></tr><tr><td align="center">素朴</td><td align="center">そぼく</td><td align="center">朴素</td></tr><tr><td align="center">厳重</td><td align="center">げんじゅう</td><td align="center">森严，严格</td></tr><tr><td align="center">まじめ</td><td align="center"></td><td align="center">认真，严肃</td></tr><tr><td align="center">大切</td><td align="center">たいせつ</td><td align="center">重要，珍重</td></tr><tr><td align="center">複雑</td><td align="center">ふくざつ</td><td align="center">复杂，繁杂</td></tr><tr><td align="center">ちゃんと</td><td align="center"></td><td align="center">好好地，的确</td></tr><tr><td align="center">まだ</td><td align="center"></td><td align="center">还，尚</td></tr><tr><td align="center">すぐ</td><td align="center"></td><td align="center">马上，立即</td></tr><tr><td align="center">ずいぶん</td><td align="center"></td><td align="center">相当，非常，很</td></tr><tr><td align="center">頭がいい</td><td align="center">あたまがいい</td><td align="center">脑子好，聪明</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【一类型】-て-【一类型】【并列】"><a href="#2-1【一类型】-て-【一类型】【并列】" class="headerlink" title="2.1【一类型】 て  【一类型】【并列】"></a>2.1【一类型】 て  【一类型】【并列】</h3><p>两个以上的一类形容词并列使用时，使用一类形容词的“て形”。一类形容词的“て形”是将词尾“い”变成“くて”。</p><ul><li>ホテルの　部屋は　広く<strong>て</strong>　明るいです。</li><li>この　本は　安く<strong>て</strong>　おもしろいです。</li></ul><hr><h3 id="2-2【二类型】-で-【二类型】【并列】"><a href="#2-2【二类型】-で-【二类型】【并列】" class="headerlink" title="2.2【二类型】 で 【二类型】【并列】"></a>2.2【二类型】 で 【二类型】【并列】</h3><p>两个以上的二类形容词并列使用时，使用二类形容词的“て形”。二类形容词的“て形”是“二类形容词+で”。</p><ul><li>この　コンピュータの　操作は　簡単<strong>で</strong>　便利です。</li><li>森さんは　親切<strong>で</strong>　優しいです。</li><li>この　公園は　静か<strong>で</strong>　広いです。</li></ul><hr><h3 id="2-3【名1】-で-【名2】【并列】"><a href="#2-3【名1】-で-【名2】【并列】" class="headerlink" title="2.3【名1】 で 【名2】【并列】"></a>2.3【名1】 で 【名2】【并列】</h3><p>两个以上名词并列使用时，用”【名1】 で 【名2】“的形式</p><ul><li>スミスさんは　旅行会社の　社員<strong>で，</strong>営業部の　部長です。</li><li>この　機械は　日中電気の　製品<strong>で</strong>，中国製です。</li></ul><hr><h3 id="2-4【动】て-います"><a href="#2-4【动】て-います" class="headerlink" title="2.4【动】て　います"></a>2.4【动】て　います</h3><p>除了表示正在进行的意义，还可以表示动作结束后的结果状态。</p><ul><li>森さんは　車を　持って　います。</li><li>田中さんを　知って　いますか。</li><li>車を　持って　いますか。<ul><li>いいえ，持って　いません。</li></ul></li></ul><hr><h3 id="2-5【小句】-が-【小句】【转折】"><a href="#2-5【小句】-が-【小句】【转折】" class="headerlink" title="2.5【小句】 が 【小句】【转折】"></a>2.5【小句】 が 【小句】【转折】</h3><p>表示两个小句的转折关系时，用助词“が ”。相当于“但是，可是”</p><ul><li>三か月　パソコンを　勉強しました<strong>が</strong>，まだ　あまり　できません。</li><li>この　レストランは　おいしいです<strong>が</strong>，ちょっと　高いです。</li></ul><hr><h3 id="2-6まだ-＋-【动-否定】"><a href="#2-6まだ-＋-【动-否定】" class="headerlink" title="2.6まだ　＋　【动 否定】"></a>2.6まだ　＋　【动 否定】</h3><p>表示还没达到所询问的内容的程度。相当于汉语的“还没有”。</p><ul><li>何年ぐらい　日本語を　勉強しましたか。<ul><li>二年　勉強しました。でも，まだ　あまり　できません。<br>此外，对用“もう”提问的句子做否定回答时“まだ　~して　いません”的表达形式。</li></ul></li><li>小野さんは　もう　結婚して　いますか。<ul><li>いいえ、まだ　結婚して　いません。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第15课　小野さんは　今　新聞を　読んで　います</title>
      <link href="/2023/01/03/japanese/15/"/>
      <url>/2023/01/03/japanese/15/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/15.png"><br>概述：动词的正在进行时态。动词的许可与禁止。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">ボート</td><td align="center"></td><td align="center">小船，小艇</td></tr><tr><td align="center">ベンチ</td><td align="center"></td><td align="center">长椅</td></tr><tr><td align="center">市役所</td><td align="center">しやくしょ</td><td align="center">市政府</td></tr><tr><td align="center">携帯電話</td><td align="center">けいたいでんわ</td><td align="center">手机</td></tr><tr><td align="center">禁煙</td><td align="center">きんえん</td><td align="center">禁止吸烟</td></tr><tr><td align="center">風邪</td><td align="center">かぜ</td><td align="center">感冒</td></tr><tr><td align="center">熱</td><td align="center">ねつ</td><td align="center">发烧，提问</td></tr><tr><td align="center">睡眠</td><td align="center">すいみん</td><td align="center">睡眠</td></tr><tr><td align="center">お風呂</td><td align="center">おふろ</td><td align="center">澡堂，浴室</td></tr><tr><td align="center">薬局</td><td align="center">やっきょく</td><td align="center">药店</td></tr><tr><td align="center">クーラー</td><td align="center"></td><td align="center">空调</td></tr><tr><td align="center">火</td><td align="center">ひ</td><td align="center">火</td></tr><tr><td align="center">気</td><td align="center">き</td><td align="center">精神，意识</td></tr><tr><td align="center">打ち合わせ</td><td align="center">うちあわせ</td><td align="center">事先商量，洽谈</td></tr><tr><td align="center">無理</td><td align="center">むり</td><td align="center">勉强，难以办到</td></tr><tr><td align="center">駐車禁止</td><td align="center">ちゅうしゃきんし</td><td align="center">禁止停车</td></tr><tr><td align="center">立入禁止</td><td align="center">たちいりきんし</td><td align="center">禁止进入</td></tr><tr><td align="center">火気厳禁</td><td align="center">かきげんきん</td><td align="center">严禁烟火</td></tr><tr><td align="center">撮影禁止</td><td align="center">さつえいきんし</td><td align="center">禁止拍照</td></tr><tr><td align="center">乗る</td><td align="center">のる</td><td align="center">乘坐，乘</td></tr><tr><td align="center">使う</td><td align="center">つかう</td><td align="center">用，使用</td></tr><tr><td align="center">座る</td><td align="center">すわる</td><td align="center">坐，落座</td></tr><tr><td align="center">入る</td><td align="center">はいる</td><td align="center">进入，加入</td></tr><tr><td align="center">申す</td><td align="center">もうす</td><td align="center">是，说，讲，告诉</td></tr><tr><td align="center">とる</td><td align="center"></td><td align="center">取，取得</td></tr><tr><td align="center">歌う</td><td align="center">うたう</td><td align="center">唱，唱歌</td></tr><tr><td align="center">伝える</td><td align="center">つたえる</td><td align="center">说，传达，转告</td></tr><tr><td align="center">止める</td><td align="center">とめる</td><td align="center">停，制止</td></tr><tr><td align="center">温かい</td><td align="center">あたたかい</td><td align="center">温暖，热乎</td></tr><tr><td align="center">大丈夫</td><td align="center">だいじょうぶ</td><td align="center">没关系，放心</td></tr><tr><td align="center">だめ</td><td align="center"></td><td align="center">不行，不可以</td></tr><tr><td align="center">十分</td><td align="center">じゅうぶん</td><td align="center">好好地，充足地</td></tr><tr><td align="center">もちろん</td><td align="center"></td><td align="center">当然，不用说</td></tr><tr><td align="center">ゆっくり</td><td align="center"></td><td align="center">好好地，安静地</td></tr><tr><td align="center">もしもし</td><td align="center"></td><td align="center">喂</td></tr><tr><td align="center">お大事に</td><td align="center">おだいじに</td><td align="center">请多保重</td></tr><tr><td align="center">いけません</td><td align="center"></td><td align="center">不行，不可以</td></tr><tr><td align="center">かまいません</td><td align="center"></td><td align="center">没关系，不要紧</td></tr><tr><td align="center">まだです</td><td align="center"></td><td align="center">还没有。仍然..没有</td></tr><tr><td align="center">気を付けます</td><td align="center">きをつけます</td><td align="center">注意</td></tr><tr><td align="center">無理をします</td><td align="center">むりをします</td><td align="center">勉强</td></tr><tr><td align="center">睡眠をとります</td><td align="center">すいみんをとります</td><td align="center">睡觉</td></tr><tr><td align="center">お風呂に入ります</td><td align="center">おふろにはいります</td><td align="center">洗澡</td></tr><tr><td align="center">シャワーを浴びます</td><td align="center">シャワーをあびます</td><td align="center">淋雨</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【动】て-います-「正在进行」"><a href="#2-1【动】て-います-「正在进行」" class="headerlink" title="2.1【动】て　います　「正在进行」"></a>2.1【动】て　います　「正在进行」</h3><p>表示动作或变化正在进行时，使用“动词て + います”</p><ul><li>小野さんは　今　新聞を　読んで　います。</li><li>太郎さんは　コーヒーを　飲んで　います。</li></ul><hr><h3 id="2-2【动】ても-いいです"><a href="#2-2【动】ても-いいです" class="headerlink" title="2.2【动】ても　いいです"></a>2.2【动】ても　いいです</h3><p>表示许可时，使用“动词て + も + いいです”</p><ul><li>家で　仕事を　しても　いいです。</li><li>ここで　写真を　撮っても　いいですか。<ul><li>いいですよ</li></ul></li></ul><hr><h3 id="2-3【动】では-いけません"><a href="#2-3【动】では-いけません" class="headerlink" title="2.3【动】では　いけません"></a>2.3【动】では　いけません</h3><p>表示禁止时，使用“动词て + は + いけません”</p><ul><li>飛行機の　中で　タバコを　吸っては　いけません。</li><li>この　部屋に　入っては　いけませんか。<ul><li>はい，入っては　いけません。</li><li>いいえ，入っても　いいです。</li></ul></li></ul><hr><h3 id="2-4【名-附着点】に-【动】"><a href="#2-4【名-附着点】に-【动】" class="headerlink" title="2.4【名 附着点】に　【动】"></a>2.4【名 附着点】に　【动】</h3><p>表示人或物体的附着点，即人或物体停留在交通工具或椅子上等时，附着点用助词“に”。</p><ul><li>小野さんは　公園で　ボート　に　乗りました。</li><li>この　いす　に　座って　ください。</li></ul><hr><h3 id="2-5【名-目的地】に-【动】"><a href="#2-5【名-目的地】に-【动】" class="headerlink" title="2.5【名 目的地】に　【动】"></a>2.5【名 目的地】に　【动】</h3><p>移动行为的目的地既可以用“へ”表示，也可以用“に”表示。</p><ul><li>李さんは　病院　に　行きます。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第14课　机の　上に　本が　三冊　あります</title>
      <link href="/2022/12/25/japanese/14/"/>
      <url>/2022/12/25/japanese/14/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/14.png"><br>概述：数词和量词的使用。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">船便</td><td align="center">ふなびん</td><td align="center">海运</td></tr><tr><td align="center">書類</td><td align="center">しょるい</td><td align="center">文件，文稿</td></tr><tr><td align="center">原稿</td><td align="center">げんこう</td><td align="center">稿子，原稿</td></tr><tr><td align="center">記事</td><td align="center">きじ</td><td align="center">报道</td></tr><tr><td align="center">メモ</td><td align="center"></td><td align="center">记录</td></tr><tr><td align="center">駅前</td><td align="center">えきまえ</td><td align="center">车站一带</td></tr><tr><td align="center">橋</td><td align="center">はし</td><td align="center">桥，桥梁</td></tr><tr><td align="center">角</td><td align="center">かど</td><td align="center">拐角</td></tr><tr><td align="center">横断歩道</td><td align="center">おうだんほどう</td><td align="center">人行横道</td></tr><tr><td align="center">右</td><td align="center">みぎ</td><td align="center">右</td></tr><tr><td align="center">左</td><td align="center">ひだり</td><td align="center">左</td></tr><tr><td align="center">交差点</td><td align="center">こうさてん</td><td align="center">十字路口</td></tr><tr><td align="center">道</td><td align="center">みち</td><td align="center">路，道路</td></tr><tr><td align="center">ドア</td><td align="center"></td><td align="center">门</td></tr><tr><td align="center">電気</td><td align="center">でんき</td><td align="center">电，电力</td></tr><tr><td align="center">太極拳</td><td align="center">たいきょくけん</td><td align="center">太极拳</td></tr><tr><td align="center">朝ご飯</td><td align="center">あさごはん</td><td align="center">早饭</td></tr><tr><td align="center">晩ご飯</td><td align="center">ばんごはん</td><td align="center">晚饭</td></tr><tr><td align="center">バーベキュー</td><td align="center"></td><td align="center">烧烤</td></tr><tr><td align="center">通る</td><td align="center">とおる</td><td align="center">通过，经过</td></tr><tr><td align="center">急ぐ</td><td align="center">いそぐ</td><td align="center">急，匆忙</td></tr><tr><td align="center">飛ぶ</td><td align="center">とぶ</td><td align="center">飞，飞行</td></tr><tr><td align="center">死ぬ</td><td align="center">しぬ</td><td align="center">死亡</td></tr><tr><td align="center">待つ</td><td align="center">まつ</td><td align="center">等待，等候</td></tr><tr><td align="center">売る</td><td align="center">うる</td><td align="center">卖，销售</td></tr><tr><td align="center">話する</td><td align="center">はなする</td><td align="center">说话</td></tr><tr><td align="center">渡る</td><td align="center">わたる</td><td align="center">过桥，过河，穿马路</td></tr><tr><td align="center">卸します</td><td align="center">おろします</td><td align="center">取，卸货</td></tr><tr><td align="center">選ぶ</td><td align="center">えらぶ</td><td align="center">挑选，选择</td></tr><tr><td align="center">消します</td><td align="center">けします</td><td align="center">关灯，消除，去除</td></tr><tr><td align="center">歩く</td><td align="center">あるく</td><td align="center">步行</td></tr><tr><td align="center">曲がる</td><td align="center">まがる</td><td align="center">拐弯，曲折</td></tr><tr><td align="center">洗う</td><td align="center">あらう</td><td align="center">洗，洗涤</td></tr><tr><td align="center">出る</td><td align="center">でる</td><td align="center">离开</td></tr><tr><td align="center">出かける</td><td align="center">でかける</td><td align="center">外出，出门</td></tr><tr><td align="center">開ける</td><td align="center">あける</td><td align="center">开，打开，开启</td></tr><tr><td align="center">過ぎる</td><td align="center">すぎる</td><td align="center">过</td></tr><tr><td align="center">見せる</td><td align="center">みせる</td><td align="center">给~看</td></tr><tr><td align="center">つける</td><td align="center"></td><td align="center">开灯</td></tr><tr><td align="center">降りる</td><td align="center">おりる</td><td align="center">下车，下山</td></tr><tr><td align="center">買い物します</td><td align="center">かいものします</td><td align="center">买东西</td></tr><tr><td align="center">卒業します</td><td align="center">そつぎょうします</td><td align="center">毕业</td></tr><tr><td align="center">食事します</td><td align="center">しょくじします</td><td align="center">吃饭，用餐</td></tr><tr><td align="center">整理します</td><td align="center">せいりします</td><td align="center">整理~</td></tr><tr><td align="center">コビーします</td><td align="center"></td><td align="center">复印</td></tr><tr><td align="center">暗い</td><td align="center">くらい</td><td align="center">黑暗</td></tr><tr><td align="center">大変</td><td align="center">たいへん</td><td align="center">够受的，不得了</td></tr><tr><td align="center">なかなか</td><td align="center"></td><td align="center">相当，很，非常</td></tr><tr><td align="center">こう</td><td align="center"></td><td align="center">这样，如此</td></tr><tr><td align="center">そう／ああ</td><td align="center"></td><td align="center">那样</td></tr><tr><td align="center">後で</td><td align="center"></td><td align="center">过会儿</td></tr><tr><td align="center">それから</td><td align="center"></td><td align="center">然后，另外</td></tr><tr><td align="center">すみませんが</td><td align="center"></td><td align="center">对不起…… 劳驾</td></tr></tbody></table><hr><h3 id="1-2-数词和量词"><a href="#1-2-数词和量词" class="headerlink" title="1.2 数词和量词"></a>1.2 数词和量词</h3><table><thead><tr><th align="center"></th><th align="center">～つ</th><th align="center">～人</th><th align="center">～台</th><th align="center">～個</th><th align="center">～本</th><th align="center">～杯</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">ひとつ</td><td align="center">ひとり</td><td align="center">いちだい</td><td align="center">いっこ</td><td align="center">いっぽん</td><td align="center">いっぱい</td></tr><tr><td align="center">2</td><td align="center">ふたつ</td><td align="center">ふたり</td><td align="center">にだい</td><td align="center">にこ</td><td align="center">にほん</td><td align="center">にはい</td></tr><tr><td align="center">3</td><td align="center">みっつ</td><td align="center">さんにん</td><td align="center">さんだい</td><td align="center">さんこ</td><td align="center">さんぼん</td><td align="center">さんばい</td></tr><tr><td align="center">4</td><td align="center">よっつ</td><td align="center">よにん</td><td align="center">よんだい</td><td align="center">よんこ</td><td align="center">よんほん</td><td align="center">よんはい</td></tr><tr><td align="center">5</td><td align="center">いつつ</td><td align="center">ごにん</td><td align="center">ごだい</td><td align="center">ごこ</td><td align="center">ごほん</td><td align="center">ごはい</td></tr><tr><td align="center">6</td><td align="center">むっつ</td><td align="center">ろくにん</td><td align="center">ろくだい</td><td align="center">ろっこ</td><td align="center">ろっぽん</td><td align="center">ろっぱい</td></tr><tr><td align="center">7</td><td align="center">ななつ</td><td align="center">ななにん</td><td align="center">ななだい</td><td align="center">ななこ</td><td align="center">ななほん</td><td align="center">ななはい</td></tr><tr><td align="center">8</td><td align="center">やっつ</td><td align="center">はちにん</td><td align="center">はちだい</td><td align="center">はっこ</td><td align="center">はっぽん</td><td align="center">はっぱい</td></tr><tr><td align="center">9</td><td align="center">ここのつ</td><td align="center">きゅうにん</td><td align="center">きゅうだい</td><td align="center">きゅうこ</td><td align="center">きゅうほん</td><td align="center">きゅうはい</td></tr><tr><td align="center">10</td><td align="center">とお</td><td align="center">じゅうにん</td><td align="center">じゅうだい</td><td align="center">じゅっこ</td><td align="center">じゅっぽん</td><td align="center">じゅっぱい</td></tr><tr><td align="center">何</td><td align="center">いくつ</td><td align="center">なんにん</td><td align="center">なんだい</td><td align="center">なんこ</td><td align="center">なんぼん</td><td align="center">なんぱい</td></tr></tbody></table><hr><h3 id="1-3-量词使用"><a href="#1-3-量词使用" class="headerlink" title="1.3 量词使用"></a>1.3 量词使用</h3><table><thead><tr><th>量词</th><th>适用对象</th><th>量词</th><th>适用对象</th></tr></thead><tbody><tr><td>～人</td><td>人</td><td>～本</td><td>细长的物品：瓶、铅笔、伞、香蕉</td></tr><tr><td>～台</td><td>机械或车辆；电脑</td><td>～杯</td><td>茶、咖啡、啤酒</td></tr><tr><td>～枚</td><td>薄平物品：纸、盘子、邮票、衬衫</td><td>～匹</td><td>小动物：猫，狗、昆虫、鱼</td></tr><tr><td>～冊</td><td>书、笔记本</td><td>～頭</td><td>大动物：牛、马</td></tr><tr><td>～歳</td><td>年龄</td><td>～羽</td><td>鸟、兔</td></tr><tr><td>～回</td><td>次数</td><td>～番</td><td>顺序</td></tr><tr><td>～着</td><td>衣服等</td><td>～足</td><td>成对的物品：鞋子、袜子等</td></tr><tr><td>～個</td><td>立体的物品：鸡蛋，饭团子等      空容器或器皿：箱子、盒子         概念性或抽象的事物：密码等</td><td>～つ</td><td>1~9岁的年龄 立体的物品：橘子、帽子         抽象的事物：谜、选项等</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【名（时间）】-【动词】"><a href="#2-1【名（时间）】-【动词】" class="headerlink" title="2.1【名（时间）】 + 【动词】"></a>2.1【名（时间）】 + 【动词】</h3><p>表示时间数量的词语和动词一起使用时，说明动作、状态的持续时间。这时候表示时间数量的词语后面不能加“に”</p><ul><li>李さんは　毎日　七時間　働きます。</li><li>森さんは　九時間　寝ます。</li></ul><hr><h3 id="2-2【名（时间）】に【名（次数）】-【动词】"><a href="#2-2【名（时间）】に【名（次数）】-【动词】" class="headerlink" title="2.2【名（时间）】に【名（次数）】+【动词】"></a>2.2【名（时间）】に【名（次数）】+【动词】</h3><p>表示在一定时间内进行若干次动作。</p><ul><li>李さんは　一週間に　二回　プールへ　行きます。</li><li>この　花は　二年に　一度　咲きます。</li></ul><hr><h3 id="2-3【名（场所）】へ【动词】に-行きます／来ます"><a href="#2-3【名（场所）】へ【动词】に-行きます／来ます" class="headerlink" title="2.3【名（场所）】へ【动词】に　行きます／来ます"></a>2.3【名（场所）】へ【动词】に　行きます／来ます</h3><p>表示移动行为的目的时使用。动词使用“ます”形，去掉“ます”。</p><ul><li>午後　郵便局へ　荷物を　出しに　行きます。</li><li>李さんは　私の家へ　遊びに　来ました。</li></ul><hr><h3 id="2-4【名（数量）】で"><a href="#2-4【名（数量）】で" class="headerlink" title="2.4【名（数量）】で"></a>2.4【名（数量）】で</h3><p>用于不称重量而以数个的方式售物，数量是“1”时，不加で</p><ul><li>この　ケーキは　三個で　五百円です。</li><li>この　ケーキは　一個　二百円です。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第13课　机の　上に　本が　三冊　あります</title>
      <link href="/2022/12/24/japanese/13/"/>
      <url>/2022/12/24/japanese/13/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/13.png"><br>概述：数词和量词的使用。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">荷物</td><td align="center">にもつ</td><td align="center">包裹</td></tr><tr><td align="center">はがき</td><td align="center"></td><td align="center">明信片</td></tr><tr><td align="center">切手</td><td align="center">きって</td><td align="center">邮票</td></tr><tr><td align="center">引き出し</td><td align="center">ひきだし</td><td align="center">抽屉</td></tr><tr><td align="center">アルバム</td><td align="center"></td><td align="center">相册</td></tr><tr><td align="center">タバコ</td><td align="center"></td><td align="center">烟草</td></tr><tr><td align="center">漫画</td><td align="center">まんが</td><td align="center">漫画</td></tr><tr><td align="center">ガレージ</td><td align="center"></td><td align="center">车库</td></tr><tr><td align="center">修理</td><td align="center">しゅうり</td><td align="center">修理</td></tr><tr><td align="center">居酒屋</td><td align="center">いざかや</td><td align="center">酒馆</td></tr><tr><td align="center">生ビール</td><td align="center">なま～</td><td align="center">生啤</td></tr><tr><td align="center">焼き鳥</td><td align="center">やきとり</td><td align="center">烤鸡肉串</td></tr><tr><td align="center">唐揚げ</td><td align="center">からあげ</td><td align="center">炸鸡，油炸食品</td></tr><tr><td align="center">肉じゃが</td><td align="center">にくじゃが</td><td align="center">土豆烧肉</td></tr><tr><td align="center">ポーリング</td><td align="center"></td><td align="center">保龄球</td></tr><tr><td align="center">髪</td><td align="center">かみ</td><td align="center">头发</td></tr><tr><td align="center">象</td><td align="center">ぞう</td><td align="center">大象</td></tr><tr><td align="center">昼</td><td align="center">ひる</td><td align="center">白天，中午</td></tr><tr><td align="center">ほか</td><td align="center"></td><td align="center">另外</td></tr><tr><td align="center">かかる</td><td align="center"></td><td align="center">花费（时间，金钱）</td></tr><tr><td align="center">咲きます</td><td align="center">さきます</td><td align="center">花开</td></tr><tr><td align="center">泳ぐ</td><td align="center">およぐ</td><td align="center">游泳</td></tr><tr><td align="center">遊ぶ</td><td align="center">あそぶ</td><td align="center">玩，玩耍</td></tr><tr><td align="center">吸う</td><td align="center">すう</td><td align="center">吸（烟）</td></tr><tr><td align="center">切る</td><td align="center">きる</td><td align="center">剪，切，割</td></tr><tr><td align="center">だいたい</td><td align="center"></td><td align="center">大约，大概，大体</td></tr><tr><td align="center">とりあえず</td><td align="center"></td><td align="center">暂且</td></tr><tr><td align="center">ぐらい</td><td align="center"></td><td align="center">多久，多少钱</td></tr></tbody></table><hr><h3 id="1-2-数词和量词"><a href="#1-2-数词和量词" class="headerlink" title="1.2 数词和量词"></a>1.2 数词和量词</h3><table><thead><tr><th align="center"></th><th align="center">～つ</th><th align="center">～人</th><th align="center">～台</th><th align="center">～個</th><th align="center">～本</th><th align="center">～杯</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">ひとつ</td><td align="center">ひとり</td><td align="center">いちだい</td><td align="center">いっこ</td><td align="center">いっぽん</td><td align="center">いっぱい</td></tr><tr><td align="center">2</td><td align="center">ふたつ</td><td align="center">ふたり</td><td align="center">にだい</td><td align="center">にこ</td><td align="center">にほん</td><td align="center">にはい</td></tr><tr><td align="center">3</td><td align="center">みっつ</td><td align="center">さんにん</td><td align="center">さんだい</td><td align="center">さんこ</td><td align="center">さんぼん</td><td align="center">さんばい</td></tr><tr><td align="center">4</td><td align="center">よっつ</td><td align="center">よにん</td><td align="center">よんだい</td><td align="center">よんこ</td><td align="center">よんほん</td><td align="center">よんはい</td></tr><tr><td align="center">5</td><td align="center">いつつ</td><td align="center">ごにん</td><td align="center">ごだい</td><td align="center">ごこ</td><td align="center">ごほん</td><td align="center">ごはい</td></tr><tr><td align="center">6</td><td align="center">むっつ</td><td align="center">ろくにん</td><td align="center">ろくだい</td><td align="center">ろっこ</td><td align="center">ろっぽん</td><td align="center">ろっぱい</td></tr><tr><td align="center">7</td><td align="center">ななつ</td><td align="center">ななにん</td><td align="center">ななだい</td><td align="center">ななこ</td><td align="center">ななほん</td><td align="center">ななはい</td></tr><tr><td align="center">8</td><td align="center">やっつ</td><td align="center">はちにん</td><td align="center">はちだい</td><td align="center">はっこ</td><td align="center">はっぽん</td><td align="center">はっぱい</td></tr><tr><td align="center">9</td><td align="center">ここのつ</td><td align="center">きゅうにん</td><td align="center">きゅうだい</td><td align="center">きゅうこ</td><td align="center">きゅうほん</td><td align="center">きゅうはい</td></tr><tr><td align="center">10</td><td align="center">とお</td><td align="center">じゅうにん</td><td align="center">じゅうだい</td><td align="center">じゅっこ</td><td align="center">じゅっぽん</td><td align="center">じゅっぱい</td></tr><tr><td align="center">何</td><td align="center">いくつ</td><td align="center">なんにん</td><td align="center">なんだい</td><td align="center">なんこ</td><td align="center">なんぼん</td><td align="center">なんぱい</td></tr></tbody></table><hr><h3 id="1-3-量词使用"><a href="#1-3-量词使用" class="headerlink" title="1.3 量词使用"></a>1.3 量词使用</h3><table><thead><tr><th>量词</th><th>适用对象</th><th>量词</th><th>适用对象</th></tr></thead><tbody><tr><td>～人</td><td>人</td><td>～本</td><td>细长的物品：瓶、铅笔、伞、香蕉</td></tr><tr><td>～台</td><td>机械或车辆；电脑</td><td>～杯</td><td>茶、咖啡、啤酒</td></tr><tr><td>～枚</td><td>薄平物品：纸、盘子、邮票、衬衫</td><td>～匹</td><td>小动物：猫，狗、昆虫、鱼</td></tr><tr><td>～冊</td><td>书、笔记本</td><td>～頭</td><td>大动物：牛、马</td></tr><tr><td>～歳</td><td>年龄</td><td>～羽</td><td>鸟、兔</td></tr><tr><td>～回</td><td>次数</td><td>～番</td><td>顺序</td></tr><tr><td>～着</td><td>衣服等</td><td>～足</td><td>成对的物品：鞋子、袜子等</td></tr><tr><td>～個</td><td>立体的物品：鸡蛋，饭团子等      空容器或器皿：箱子、盒子         概念性或抽象的事物：密码等</td><td>～つ</td><td>1~9岁的年龄 立体的物品：橘子、帽子         抽象的事物：谜、选项等</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【名（时间）】-【动词】"><a href="#2-1【名（时间）】-【动词】" class="headerlink" title="2.1【名（时间）】 + 【动词】"></a>2.1【名（时间）】 + 【动词】</h3><p>表示时间数量的词语和动词一起使用时，说明动作、状态的持续时间。这时候表示时间数量的词语后面不能加“に”</p><ul><li>李さんは　毎日　七時間　働きます。</li><li>森さんは　九時間　寝ます。</li></ul><hr><h3 id="2-2【名（时间）】に【名（次数）】-【动词】"><a href="#2-2【名（时间）】に【名（次数）】-【动词】" class="headerlink" title="2.2【名（时间）】に【名（次数）】+【动词】"></a>2.2【名（时间）】に【名（次数）】+【动词】</h3><p>表示在一定时间内进行若干次动作。</p><ul><li>李さんは　一週間に　二回　プールへ　行きます。</li><li>この　花は　二年に　一度　咲きます。</li></ul><hr><h3 id="2-3【名（场所）】へ【动词】に-行きます／来ます"><a href="#2-3【名（场所）】へ【动词】に-行きます／来ます" class="headerlink" title="2.3【名（场所）】へ【动词】に　行きます／来ます"></a>2.3【名（场所）】へ【动词】に　行きます／来ます</h3><p>表示移动行为的目的时使用。动词使用“ます”形，去掉“ます”。</p><ul><li>午後　郵便局へ　荷物を　出しに　行きます。</li><li>李さんは　私の家へ　遊びに　来ました。</li></ul><hr><h3 id="2-4【名（数量）】で"><a href="#2-4【名（数量）】で" class="headerlink" title="2.4【名（数量）】で"></a>2.4【名（数量）】で</h3><p>用于不称重量而以数个的方式售物，数量是“1”时，不加で</p><ul><li>この　ケーキは　三個で　五百円です。</li><li>この　ケーキは　一個　二百円です。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第12课　李さんは　森さんより　若いです</title>
      <link href="/2022/12/23/japanese/12/"/>
      <url>/2022/12/23/japanese/12/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/12.png"><br>概述：两个名词之间的比较句式，多个名词比较句式。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">季節</td><td align="center">きせつ</td><td align="center">季节</td></tr><tr><td align="center">冬</td><td align="center">ふゆ</td><td align="center">冬</td></tr><tr><td align="center">春</td><td align="center">はる</td><td align="center">春</td></tr><tr><td align="center">夏</td><td align="center">なつ</td><td align="center">夏</td></tr><tr><td align="center">秋</td><td align="center">あき</td><td align="center">秋</td></tr><tr><td align="center">日本料理</td><td align="center">にほんりょうり</td><td align="center">日本菜</td></tr><tr><td align="center">寿司</td><td align="center">すひ</td><td align="center">寿司</td></tr><tr><td align="center">バナナ</td><td align="center"></td><td align="center">香蕉</td></tr><tr><td align="center">ミカン</td><td align="center"></td><td align="center">橘子</td></tr><tr><td align="center">焼酎</td><td align="center">しょうちゅう</td><td align="center">烧酒</td></tr><tr><td align="center">日本酒</td><td align="center">にほんしゅ</td><td align="center">日本酒</td></tr><tr><td align="center">紅茶</td><td align="center">こうちゃ</td><td align="center">红茶</td></tr><tr><td align="center">ウーロン茶</td><td align="center"></td><td align="center">乌龙茶</td></tr><tr><td align="center">ジャスミン茶</td><td align="center"></td><td align="center">茉莉花茶</td></tr><tr><td align="center">緑茶</td><td align="center">りょくちゃ</td><td align="center">绿茶</td></tr><tr><td align="center">ジュース</td><td align="center"></td><td align="center">果汁</td></tr><tr><td align="center">人気</td><td align="center">にんき</td><td align="center">声望，受欢迎</td></tr><tr><td align="center">席</td><td align="center">せき</td><td align="center">座位，席位</td></tr><tr><td align="center">クラス</td><td align="center"></td><td align="center">班级</td></tr><tr><td align="center">種類</td><td align="center">しゅるい</td><td align="center">种类</td></tr><tr><td align="center">背</td><td align="center">せ</td><td align="center">个子</td></tr><tr><td align="center">兄</td><td align="center">あに</td><td align="center">哥哥</td></tr><tr><td align="center">最近</td><td align="center">さいきん</td><td align="center">最近，近来</td></tr><tr><td align="center">降ります</td><td align="center">ふります</td><td align="center">下（雨，雪）</td></tr><tr><td align="center">若い</td><td align="center">わかい</td><td align="center">年轻</td></tr><tr><td align="center">暖かい</td><td align="center">あたたかい</td><td align="center">暖和</td></tr><tr><td align="center">涼しい</td><td align="center">すずしい</td><td align="center">凉爽</td></tr><tr><td align="center">速い</td><td align="center">はやい</td><td align="center">快</td></tr><tr><td align="center">大好き</td><td align="center">だいすき</td><td align="center">非常喜欢</td></tr><tr><td align="center">いちばん</td><td align="center"></td><td align="center">最，第一</td></tr><tr><td align="center">ずっと</td><td align="center"></td><td align="center">～得多</td></tr><tr><td align="center">やはり／やっばり</td><td align="center"></td><td align="center">仍然，还是</td></tr><tr><td align="center">チョモランマ</td><td align="center"></td><td align="center">珠穆朗玛</td></tr><tr><td align="center">人気があります</td><td align="center"></td><td align="center">受欢迎</td></tr><tr><td align="center">～年間</td><td align="center">～ねんかん</td><td align="center">～年间</td></tr></tbody></table><hr><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-【名1】は-【名2】より-【一类形】-x2F-【二类形】です"><a href="#2-1-【名1】は-【名2】より-【一类形】-x2F-【二类形】です" class="headerlink" title="2.1 【名1】は　【名2】より　【一类形】&#x2F;【二类形】です"></a>2.1 【名1】は　【名2】より　【一类形】&#x2F;【二类形】です</h3><p>比较“名词1”和“名词2”，“名词1”比“名词2”更具有形容词所表示的性质时使用这个句式。<br>程度差异较大时用副词“ずっと”加以强调</p><ul><li>李さんは　森さん　より　若いです。</li><li>上海は　北京　より　広いですか。</li><li>中国は　日本　より　ずっと　広いです。</li></ul><hr><h3 id="2-2-【名1】より-【名2】の-ほうが【一类形】-x2F-【二类形】です"><a href="#2-2-【名1】より-【名2】の-ほうが【一类形】-x2F-【二类形】です" class="headerlink" title="2.2 【名1】より　【名2】の　ほうが【一类形】&#x2F;【二类形】です"></a>2.2 【名1】より　【名2】の　ほうが【一类形】&#x2F;【二类形】です</h3><p>比较“名词1”和“名词2”，“名词2”比“名词1”更具有形容词所表示的性质时使用这个句式。</p><ul><li>日本　より　中国の　ほうが　広いです。</li><li>大阪　より　東京の　ほうが　にぎやかですか。</li></ul><hr><h3 id="2-3-【名1】は【名2】ほど【一类形】くないです-x2F-【二类形】でわないです"><a href="#2-3-【名1】は【名2】ほど【一类形】くないです-x2F-【二类形】でわないです" class="headerlink" title="2.3 【名1】は【名2】ほど【一类形】くないです&#x2F;【二类形】でわないです"></a>2.3 【名1】は【名2】ほど【一类形】くないです&#x2F;【二类形】でわないです</h3><p>比较“名词1”和“名词2”，“名词1”比“名词2”更<strong>不</strong>具有形容词所表示的性质时使用这个句式。<br>句尾必须使用<strong>否定形式</strong>。</p><ul><li>東京の冬は　北京の冬　ほど　寒くないです。</li><li>私の部屋は　王さんの部屋　ほど　きれいではありません。</li></ul><hr><h3 id="2-4【名1】の中で【名2】が-いちばん【一类形】-x2F-【二类形】です"><a href="#2-4【名1】の中で【名2】が-いちばん【一类形】-x2F-【二类形】です" class="headerlink" title="2.4【名1】の中で【名2】が　いちばん【一类形】&#x2F;【二类形】です"></a>2.4【名1】の中で【名2】が　いちばん【一类形】&#x2F;【二类形】です</h3><p>在某个范围内，表示“名词2”最具有形容词的性质时使用这个句型。“名词1”为表示“名词2”所属范围的名词。<br>“名词1”表示场所&#x2F;&#x2F;时间时，后面不用加“の中”</p><ul><li>スポーツの　中で　サッカーボール　が　いちばん　おもしろいです。</li><li>日本で　いちばん　高い　山は　富士山です。</li><li>一年で　いちばん　寒い　月は　二月です。</li></ul><hr><h3 id="2-5-【名1】と【名2】と-どちらが-【一类形】-x2F-【二类形】ですか"><a href="#2-5-【名1】と【名2】と-どちらが-【一类形】-x2F-【二类形】ですか" class="headerlink" title="2.5 【名1】と【名2】と　どちらが　【一类形】&#x2F;【二类形】ですか"></a>2.5 【名1】と【名2】と　どちらが　【一类形】&#x2F;【二类形】ですか</h3><p>询问<strong>两种</strong>事物当中哪一种更具有形容词的性质时使用这个句型。“どちら”是二者选一时使用的疑问词。回答时使用“~の　ほうが…”。如果两者程度相当，则使用“どちらも　~です”。<br>”どちら”在口语中有时说成“どっち”。</p><ul><li>日本語と英語と　どちらが　難しいですか。<ul><li>日本語の　ほうが　難しいです。</li></ul></li><li>コーヒーと紅茶と　どっちが　好きですか。<ul><li>どちらも　好きです。</li></ul></li></ul><hr><h3 id="2-6-どの【名】-x2F-いつ-x2F-どれ-x2F-だれ-x2F-何が-いちばん【一类形】-x2F-【二类形】ですか"><a href="#2-6-どの【名】-x2F-いつ-x2F-どれ-x2F-だれ-x2F-何が-いちばん【一类形】-x2F-【二类形】ですか" class="headerlink" title="2.6 どの【名】&#x2F;いつ&#x2F;どれ&#x2F;だれ&#x2F;何が　いちばん【一类形】&#x2F;【二类形】ですか"></a>2.6 どの【名】&#x2F;いつ&#x2F;どれ&#x2F;だれ&#x2F;何が　いちばん【一类形】&#x2F;【二类形】ですか</h3><p>询问三个以上事物当中哪一个更具有形容词的性质时，根据所询问的对象不同，须区别使用几种疑问词；是人则使用“だれが”，是物则使用“どの”，“だれ”，“何が”，时间则使用“いつ”</p><ul><li>この中で　どの料理が　いちばん　おいしいですか。<ul><li>この料理が　いちばん　おいしいです。</li></ul></li><li>リンゴと　ナシと　バナナの　中で　どれが　いちばん　好きですか。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第11课　小野さんは　歌が　好きです</title>
      <link href="/2022/12/22/japanese/11/"/>
      <url>/2022/12/22/japanese/11/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/11.png"><br>概述：表示情感的形容词使用方式，能力形容词使用方式。原因、理由的使用。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">歌</td><td align="center">うた</td><td align="center">歌，歌曲</td></tr><tr><td align="center">カラオケ</td><td align="center"></td><td align="center">卡拉ok</td></tr><tr><td align="center">ロック</td><td align="center"></td><td align="center">摇滚乐</td></tr><tr><td align="center">ポップス</td><td align="center"></td><td align="center">流行音乐</td></tr><tr><td align="center">クラシック</td><td align="center"></td><td align="center">西方古典音乐</td></tr><tr><td align="center">ピアノ</td><td align="center"></td><td align="center">钢琴</td></tr><tr><td align="center">ギター</td><td align="center"></td><td align="center">吉他</td></tr><tr><td align="center">バイオリン</td><td align="center"></td><td align="center">小提琴</td></tr><tr><td align="center">絵</td><td align="center">え</td><td align="center">画</td></tr><tr><td align="center">英語</td><td align="center">えいご</td><td align="center">英语</td></tr><tr><td align="center">スペイン語</td><td align="center"></td><td align="center">西班牙语</td></tr><tr><td align="center">スポーツ</td><td align="center"></td><td align="center">体育</td></tr><tr><td align="center">水泳</td><td align="center">すいえい</td><td align="center">游泳</td></tr><tr><td align="center">ゴルフ</td><td align="center"></td><td align="center">高尔夫球</td></tr><tr><td align="center">運転</td><td align="center">うんてん</td><td align="center">开车</td></tr><tr><td align="center">飲み物</td><td align="center">のみもの</td><td align="center">饮料</td></tr><tr><td align="center">お酒</td><td align="center">おさけ</td><td align="center">酒，酒类</td></tr><tr><td align="center">肉</td><td align="center">にく</td><td align="center">肉</td></tr><tr><td align="center">野菜</td><td align="center">やさい</td><td align="center">蔬菜</td></tr><tr><td align="center">果物</td><td align="center">くだもの</td><td align="center">水果</td></tr><tr><td align="center">ピーマン</td><td align="center"></td><td align="center">青椒</td></tr><tr><td align="center">もやし</td><td align="center"></td><td align="center">豆芽</td></tr><tr><td align="center">ヒマワリ</td><td align="center"></td><td align="center">向日葵</td></tr><tr><td align="center">バラ</td><td align="center"></td><td align="center">蔷薇，玫瑰</td></tr><tr><td align="center">コンピュータ</td><td align="center"></td><td align="center">电脑</td></tr><tr><td align="center">窓</td><td align="center">まど</td><td align="center">窗</td></tr><tr><td align="center">結婚式</td><td align="center">けっこんしき</td><td align="center">结婚典礼</td></tr><tr><td align="center">写真展</td><td align="center">しゃしんてん</td><td align="center">摄影展</td></tr><tr><td align="center">旅館</td><td align="center">りょかん</td><td align="center">旅馆，旅店</td></tr><tr><td align="center">別荘</td><td align="center">べっそう</td><td align="center">别墅</td></tr><tr><td align="center">寄木細工</td><td align="center">よせぎざいく</td><td align="center">木片儿拼花工艺品</td></tr><tr><td align="center">模様</td><td align="center">もよう</td><td align="center">花纹</td></tr><tr><td align="center">外国</td><td align="center">がいこく</td><td align="center">外国</td></tr><tr><td align="center">会議</td><td align="center">かいぎ</td><td align="center">会议</td></tr><tr><td align="center">脚</td><td align="center">あし</td><td align="center">腿</td></tr><tr><td align="center">僕</td><td align="center">ぼく</td><td align="center">我</td></tr><tr><td align="center">分かる</td><td align="center">わかる</td><td align="center">懂，明白</td></tr><tr><td align="center">迷う</td><td align="center">まよう</td><td align="center">犹豫，难以决定</td></tr><tr><td align="center">できる</td><td align="center"></td><td align="center">会；能；完成</td></tr><tr><td align="center">閉める</td><td align="center"></td><td align="center">关闭，关门</td></tr><tr><td align="center">疲れる</td><td align="center">つかれる</td><td align="center">疲倦，疲惫</td></tr><tr><td align="center">散歩し</td><td align="center"></td><td align="center">散步</td></tr><tr><td align="center">怖い</td><td align="center">こわい</td><td align="center">害怕，恐怖</td></tr><tr><td align="center">赤い</td><td align="center">あかい</td><td align="center">红</td></tr><tr><td align="center">痛い</td><td align="center">いたい</td><td align="center">疼，疼痛</td></tr><tr><td align="center">上手</td><td align="center">じょうず</td><td align="center">擅长，高明，水平高</td></tr><tr><td align="center">下手</td><td align="center">へた</td><td align="center">不高明，水平低</td></tr><tr><td align="center">苦手</td><td align="center">にがて</td><td align="center">不擅长，不善于</td></tr><tr><td align="center">時々</td><td align="center">ときどき</td><td align="center">有时，时不时</td></tr><tr><td align="center">よく</td><td align="center"></td><td align="center">经常，常常</td></tr><tr><td align="center">たまに</td><td align="center"></td><td align="center">偶尔，很少</td></tr><tr><td align="center">また</td><td align="center"></td><td align="center">还，再，又</td></tr><tr><td align="center">どうして</td><td align="center"></td><td align="center">为什么</td></tr><tr><td align="center">だから／ですから</td><td align="center"></td><td align="center">所以，因此</td></tr><tr><td align="center">結構です</td><td align="center">けっこうです</td><td align="center">不用，不要</td></tr><tr><td align="center">気に入ります</td><td align="center">きにいります</td><td align="center">喜欢，中意</td></tr><tr><td align="center">など</td><td align="center"></td><td align="center">等等</td></tr><tr><td align="center">スイカ</td><td align="center"></td><td align="center">西瓜</td></tr><tr><td align="center">サクランボ</td><td align="center"></td><td align="center">樱桃</td></tr><tr><td align="center">ナシ</td><td align="center"></td><td align="center">梨</td></tr><tr><td align="center">キュウリ</td><td align="center"></td><td align="center">黄瓜</td></tr></tbody></table><hr><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-【名1】-は-【名2】-が-一类形-x2F-x2F-二类形-です"><a href="#2-1-【名1】-は-【名2】-が-一类形-x2F-x2F-二类形-です" class="headerlink" title="2.1 【名1】　は　【名2】　が　一类形&#x2F;&#x2F;二类形　です"></a>2.1 【名1】　は　【名2】　が　一类形&#x2F;&#x2F;二类形　です</h3><p>”好きです”　”嫌いです”　“怖いです”等表达感情的形容词可以以“【名词1】　は　【名词2】が　【一类形容词&#x2F;二类形容词】 です” 的句型使用。“名词1”表示情感的主题，“名词2”表示情感的对象</p><ul><li>小野さん　は　歌　が　好きではありません。</li><li>王さん　は　肉　が　嫌いです。</li><li>林さん　は　犬　が　怖いです。</li></ul><hr><h3 id="2-2-【名1】-は-【名2】-が-分かります／できます"><a href="#2-2-【名1】-は-【名2】-が-分かります／できます" class="headerlink" title="2.2 【名1】　は　【名2】　が　分かります／できます"></a>2.2 【名1】　は　【名2】　が　分かります／できます</h3><p>“分かります”　”できます”　”上手“です”　”下手です”　”苦手です”等有关能力的词语使用“【名1】　は　【名2】　が　【动词】ます&#x2F;&#x2F;【一类形容词&#x2F;二类形容词】 です”</p><ul><li>スミスさん　は　韓国語　が　分かります。</li><li>私　は　コンピュータ　が　できません。</li><li>小野さん　は　料理　が　上手です。</li></ul><hr><h3 id="2-3-【名】-や-【名】"><a href="#2-3-【名】-や-【名】" class="headerlink" title="2.3 【名】　や　【名】"></a>2.3 【名】　や　【名】</h3><p>用于列举多项目的两项，相当于汉语的“~呀~什么的”。并且常常和“など”呼应使用。</p><ul><li>吉田さん　は　時々　中国　や　韓国　行きます。</li><li>私　は　お店　で　野菜　や　果物　など　お　買いました。</li></ul><hr><h3 id="2-4-”-x2F-～から”-和-”＊だから”-【原因、理由】"><a href="#2-4-”-x2F-～から”-和-”＊だから”-【原因、理由】" class="headerlink" title="2.4 ”&#x2F;～から”　和　”＊だから”　【原因、理由】"></a>2.4 ”&#x2F;～から”　和　”＊だから”　【原因、理由】</h3><p>“から”位于陈述原因、理由的小句的句尾。通常是在说明原因、理由之后再陈述结论。</p><ul><li>森さんは　お酒　が　好きですから，毎日　飲みます。</li><li>窓を閉めます，寒いですから。<br>”だから”表示原因、理由的连词，相当于汉语“所以”，独立使用在结果的句子前面。</li><li>キムさんは　野菜　が　嫌いです。だから，あまり　野菜を　食べません。</li><li>明日は　休みです。ですから，子供と　動物園へ　行きます。</li></ul><hr><h3 id="2-5-表示频率的副词"><a href="#2-5-表示频率的副词" class="headerlink" title="2.5 表示频率的副词"></a>2.5 表示频率的副词</h3><p>“いつも”　”よく”　”全然”等是表示频率的副词，“あまり”　”全然”后面须接否定形式。</p><ul><li>私は　たまに　コンサートへ　行きます。</li><li>田中さんは　あなり　横浜へは　行きまさん。<br><img src="/images/lessons/11pic.png"></li></ul><hr><h3 id="2-6-“どうしてですか”"><a href="#2-6-“どうしてですか”" class="headerlink" title="2.6 “どうしてですか”"></a>2.6 “どうしてですか”</h3><p>相当于汉语中的“为什么”。回答时在谓语后面加”から”。</p><ul><li>どうしてですか。</li><li>ここで　友達の　結婚式が　ありますから。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第10课　京都の　紅葉は　有名です</title>
      <link href="/2022/12/19/japanese/10/"/>
      <url>/2022/12/19/japanese/10/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/10.png"><br>概述：二类形容词、名词作谓语变化形式。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">紅葉</td><td align="center">もみじ</td><td align="center">红叶</td></tr><tr><td align="center">故郷</td><td align="center">こきょう</td><td align="center">故乡</td></tr><tr><td align="center">通り</td><td align="center">とおり</td><td align="center">大街</td></tr><tr><td align="center">町</td><td align="center">まち</td><td align="center">城市，街道</td></tr><tr><td align="center">所</td><td align="center">ところ</td><td align="center">场所</td></tr><tr><td align="center">お店</td><td align="center">おみせ</td><td align="center">餐馆；商店</td></tr><tr><td align="center">人形</td><td align="center">にんぎょう</td><td align="center">玩偶</td></tr><tr><td align="center">作品</td><td align="center">さくひん</td><td align="center">作品</td></tr><tr><td align="center">彫刻</td><td align="center">ちょうこく</td><td align="center">雕刻</td></tr><tr><td align="center">自動車</td><td align="center">じどうしゃ</td><td align="center">汽车</td></tr><tr><td align="center">道具</td><td align="center">どうぐ</td><td align="center">工具</td></tr><tr><td align="center">魚</td><td align="center">さかな</td><td align="center">鱼</td></tr><tr><td align="center">お菓子</td><td align="center">おかし</td><td align="center">点心</td></tr><tr><td align="center">物</td><td align="center">もの</td><td align="center">物品，东西</td></tr><tr><td align="center">シーズン</td><td align="center"></td><td align="center">季节</td></tr><tr><td align="center">修学旅行</td><td align="center">しゅうがくりょこう</td><td align="center">修学旅行</td></tr><tr><td align="center">観光客</td><td align="center">かんこうきゃく</td><td align="center">游客</td></tr><tr><td align="center">作家</td><td align="center">さっか</td><td align="center">作家</td></tr><tr><td align="center">部長</td><td align="center">ぶちょう</td><td align="center">部长</td></tr><tr><td align="center">平日</td><td align="center">へいじつ</td><td align="center">平日，非休息日</td></tr><tr><td align="center">日</td><td align="center">ひ</td><td align="center">日子</td></tr><tr><td align="center">生活</td><td align="center">せいかつ</td><td align="center">生活</td></tr><tr><td align="center">世界</td><td align="center">せかい</td><td align="center">世界</td></tr><tr><td align="center">晴れ</td><td align="center">はれ</td><td align="center">晴天</td></tr><tr><td align="center">雨</td><td align="center">あめ</td><td align="center">雨</td></tr><tr><td align="center">曇り</td><td align="center">くもり</td><td align="center">阴天</td></tr><tr><td align="center">雪</td><td align="center">ゆき</td><td align="center">雪</td></tr><tr><td align="center">汚い</td><td align="center">きたない</td><td align="center">脏</td></tr><tr><td align="center">綺麗</td><td align="center">きれい</td><td align="center">干净</td></tr><tr><td align="center">有名</td><td align="center">ゆうめい</td><td align="center">有名</td></tr><tr><td align="center">にぎやか</td><td align="center">にぎやか</td><td align="center">热闹，繁华</td></tr><tr><td align="center">静か</td><td align="center">しずか</td><td align="center">安静</td></tr><tr><td align="center">暇</td><td align="center">ひま</td><td align="center">空闲</td></tr><tr><td align="center">親切</td><td align="center">しんせつ</td><td align="center">热情</td></tr><tr><td align="center">好き</td><td align="center">すき</td><td align="center">喜欢</td></tr><tr><td align="center">嫌い</td><td align="center">きらい</td><td align="center">讨厌</td></tr><tr><td align="center">便利</td><td align="center">べんり</td><td align="center">方便</td></tr><tr><td align="center">不便</td><td align="center">ふべん</td><td align="center">不方便</td></tr><tr><td align="center">元気</td><td align="center">げんき</td><td align="center">健康，有精神</td></tr><tr><td align="center">簡単</td><td align="center">かんたん</td><td align="center">简单</td></tr><tr><td align="center">ハンサム</td><td align="center"></td><td align="center">英俊，帅气</td></tr><tr><td align="center">どんな</td><td align="center"></td><td align="center">什么样的，怎样的</td></tr><tr><td align="center">どう</td><td align="center"></td><td align="center">怎样，如何</td></tr><tr><td align="center">いかが</td><td align="center"></td><td align="center">如何</td></tr><tr><td align="center">いろいろ</td><td align="center"></td><td align="center">各种各样的</td></tr><tr><td align="center">でも</td><td align="center"></td><td align="center">可是，不过</td></tr><tr><td align="center">そして</td><td align="center"></td><td align="center">而且，于是</td></tr><tr><td align="center">ところで</td><td align="center"></td><td align="center">接续，by the way</td></tr><tr><td align="center">あれえ</td><td align="center"></td><td align="center">咦</td></tr><tr><td align="center">奈良</td><td align="center">なら</td><td align="center">奈良</td></tr><tr><td align="center">富士山</td><td align="center">ふじあさん</td><td align="center">富士山</td></tr><tr><td align="center">もう少し</td><td align="center">もうすこし</td><td align="center">再~一点</td></tr></tbody></table><hr><h3 id="1-2-季节"><a href="#1-2-季节" class="headerlink" title="1.2 季节"></a>1.2 季节</h3><table><thead><tr><th>春</th><th>夏</th><th>秋</th><th>冬</th></tr></thead><tbody><tr><td>はる</td><td>なつ</td><td>あき</td><td>ふゆ</td></tr></tbody></table><hr><h3 id="1-3-天气、气候"><a href="#1-3-天气、气候" class="headerlink" title="1.3 天气、气候"></a>1.3 天气、气候</h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>天気／天候　てんき／てんこう</td><td>晴れ　はれ</td><td>蒸し暑い　むしあつい</td></tr><tr><td>天気予報　てんきよほう</td><td>曇り　くもり</td><td>暑い　あつい</td></tr><tr><td>降水確率　こうすいかくりつ</td><td>雨　あめ</td><td>暖かい　あたたかい</td></tr><tr><td>気温　きおん</td><td>雪　ゆき</td><td>涼しい　すずしい</td></tr><tr><td>湿度　しつど</td><td>霧　きり</td><td>寒い　さむい</td></tr><tr><td>梅雨　つゆ</td><td>雷　かみなり</td><td></td></tr><tr><td>台風　たいふう</td><td>風　かぜ</td><td></td></tr><tr><td></td><td>虹　にじ</td><td></td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-名-は-二类形容词-です／でした"><a href="#2-1-名-は-二类形容词-です／でした" class="headerlink" title="2.1 名 　は　二类形容词　です／でした"></a>2.1 名 　は　二类形容词　です／でした</h3><p>二类形容词是不以“い”结尾的形容词。做谓语时要在后面加“です”。过去式是“でした”。</p><ul><li>京都の　紅葉　は　有名　です。</li><li>この　通り　は　静かです。</li><li>この　町　は　にぎやか　でした。（过去式）</li></ul><hr><h3 id="2-2-名-は-二类形容词-では-ありません／ありませんでした。"><a href="#2-2-名-は-二类形容词-では-ありません／ありませんでした。" class="headerlink" title="2.2 名　は　二类形容词　では　ありません／ありませんでした。"></a>2.2 名　は　二类形容词　では　ありません／ありませんでした。</h3><p>二类形容词做谓语时的否定形式。</p><ul><li>この　通り　は　にぎやか　ではありません。</li><li>昨日　は　暇　じゃ　ありませんでした。</li></ul><hr><h3 id="2-3-名-は-二类形容词-な-名-です"><a href="#2-3-名-は-二类形容词-な-名-です" class="headerlink" title="2.3 名　は　二类形容词　な　名　です"></a>2.3 名　は　二类形容词　な　名　です</h3><p>二类形容词修饰名词 +な。</p><ul><li>奈良　は　静か　な　町です。</li><li>奈良　は　にぎやか　な　町ではありません。</li></ul><hr><h3 id="2-4-名-でした"><a href="#2-4-名-でした" class="headerlink" title="2.4 名　でした"></a>2.4 名　でした</h3><p>名词做谓语时的过去式。</p><ul><li>昨日　は　日曜日　でした。</li><li>一昨日　は　休み　でした。</li><li>昨日　は　雨　では　ありませんでした。</li><li>一昨日　は　曇り　じゃ　ありませんでした。</li></ul><hr><h3 id="2-5-どんな-名"><a href="#2-5-どんな-名" class="headerlink" title="2.5 どんな　名"></a>2.5 どんな　名</h3><p>相当于汉语“什么样的”</p><ul><li>横浜　は　どんな　町　ですか。<ul><li>とても　にぎやか　な　まち　です。</li></ul></li><li>張さん　は　どんな　人　ですか。<ul><li>親切　な　人　です。</li></ul></li></ul><hr><h3 id="2-6-どうですか"><a href="#2-6-どうですか" class="headerlink" title="2.6 どうですか"></a>2.6 どうですか</h3><p>询问对方对某状态的意见或感想，相当于“怎么样的”。</p><ul><li>この　料理　は　どうですか。</li><li>京都　は　どうでしたか。</li></ul><hr><h3 id="2-7-でも"><a href="#2-7-でも" class="headerlink" title="2.7 でも"></a>2.7 でも</h3><p>表示转折关系，相当于“但是”。</p><ul><li>私の部屋　は　狭い　です。でも，綺麗　です。</li></ul><hr><h3 id="2-8-そして"><a href="#2-8-そして" class="headerlink" title="2.8 そして"></a>2.8 そして</h3><p>表示并列关系，相当于“而且”。</p><ul><li>私の部屋　は　狭い　です。そして，汚い　です。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第9课　四川料理は　辛いです</title>
      <link href="/2022/12/19/japanese/9/"/>
      <url>/2022/12/19/japanese/9/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/9.png"><br>概述：一类形容词的变形和使用方式。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">料理</td><td align="center">りょうり</td><td align="center">菜肴、饭菜</td></tr><tr><td align="center">四川料理</td><td align="center">しせんりょうり</td><td align="center">四川菜</td></tr><tr><td align="center">スープ</td><td align="center"></td><td align="center">汤</td></tr><tr><td align="center">北京ダック</td><td align="center"></td><td align="center">北京烤鸭</td></tr><tr><td align="center">食べ物</td><td align="center">たべもの</td><td align="center">食物，食品</td></tr><tr><td align="center">すき焼き</td><td align="center">すきやき</td><td align="center">日式牛肉火锅</td></tr><tr><td align="center">温泉</td><td align="center">おんせん</td><td align="center">温泉</td></tr><tr><td align="center">お湯</td><td align="center">おゆ</td><td align="center">热水，开水</td></tr><tr><td align="center">水</td><td align="center">みず</td><td align="center">水，凉水</td></tr><tr><td align="center">浴衣</td><td align="center">ゆかた</td><td align="center">浴衣，夏季和服</td></tr><tr><td align="center">眺め</td><td align="center">ながめ</td><td align="center">景色，风景</td></tr><tr><td align="center">薬</td><td align="center">くすり</td><td align="center">药</td></tr><tr><td align="center">天気</td><td align="center">てんき</td><td align="center">天气</td></tr><tr><td align="center">海</td><td align="center">うみ</td><td align="center">海</td></tr><tr><td align="center">山</td><td align="center">やま</td><td align="center">山</td></tr><tr><td align="center">紙</td><td align="center">かみ</td><td align="center">纸</td></tr><tr><td align="center">ニュース</td><td align="center"></td><td align="center">新闻</td></tr><tr><td align="center">女性</td><td align="center">じょせい</td><td align="center">女性</td></tr><tr><td align="center">男性</td><td align="center">だんせい</td><td align="center">男性</td></tr><tr><td align="center">お客様</td><td align="center">おきゃくさま</td><td align="center">来宾</td></tr><tr><td align="center">グラス</td><td align="center"></td><td align="center">玻璃杯</td></tr><tr><td align="center">歌舞伎</td><td align="center">かぶき</td><td align="center">歌舞伎</td></tr><tr><td align="center">気持ち</td><td align="center">きもち</td><td align="center">心情</td></tr><tr><td align="center">たくさん</td><td align="center"></td><td align="center">很多</td></tr><tr><td align="center">辛い</td><td align="center">からい</td><td align="center">辣</td></tr><tr><td align="center">甘い</td><td align="center">あまい</td><td align="center">甜</td></tr><tr><td align="center">塩辛い／しょっぱい</td><td align="center">しおからい</td><td align="center">咸</td></tr><tr><td align="center">酸っぱい</td><td align="center">すっぱい</td><td align="center">酸</td></tr><tr><td align="center">苦い</td><td align="center">にがい</td><td align="center">苦</td></tr><tr><td align="center">おいしい</td><td align="center"></td><td align="center">好吃，可口</td></tr><tr><td align="center">うまい／うめえ</td><td align="center"></td><td align="center">好吃，可口</td></tr><tr><td align="center">まずい</td><td align="center">まずい</td><td align="center">不好吃，难吃</td></tr><tr><td align="center">熱い</td><td align="center">あつい</td><td align="center">热，烫</td></tr><tr><td align="center">冷たい</td><td align="center">つめたい</td><td align="center">凉</td></tr><tr><td align="center">楽しい</td><td align="center">たのしい</td><td align="center">愉快，快乐</td></tr><tr><td align="center">おもしろい</td><td align="center">おもしろい</td><td align="center">有趣，有意思</td></tr><tr><td align="center">つまらない</td><td align="center">つまらない</td><td align="center">无聊</td></tr><tr><td align="center">広い</td><td align="center">ひろい</td><td align="center">广阔，宽敞</td></tr><tr><td align="center">狭い</td><td align="center">せまい</td><td align="center">狭窄</td></tr><tr><td align="center">大きい</td><td align="center">おおきい</td><td align="center">大</td></tr><tr><td align="center">小さい</td><td align="center">ちいさい</td><td align="center">小</td></tr><tr><td align="center">忙しい</td><td align="center">いそがしい</td><td align="center">忙，忙碌</td></tr><tr><td align="center">いい</td><td align="center"></td><td align="center">好</td></tr><tr><td align="center">悪い</td><td align="center">わるい</td><td align="center">不好，坏</td></tr><tr><td align="center">すばらしい</td><td align="center"></td><td align="center">极好，绝佳</td></tr><tr><td align="center">遠い</td><td align="center">とおい</td><td align="center">远</td></tr><tr><td align="center">近い</td><td align="center">ちかい</td><td align="center">近</td></tr><tr><td align="center">高い</td><td align="center">たかい</td><td align="center">高，贵</td></tr><tr><td align="center">低い</td><td align="center">ひくい</td><td align="center">低</td></tr><tr><td align="center">安い</td><td align="center">やすい</td><td align="center">便宜</td></tr><tr><td align="center">寒い</td><td align="center">さむい</td><td align="center">寒冷</td></tr><tr><td align="center">涼しい</td><td align="center">すずしい</td><td align="center">凉爽的</td></tr><tr><td align="center">暑い</td><td align="center">あつい</td><td align="center">（天气）热</td></tr><tr><td align="center">青い</td><td align="center">あおい</td><td align="center">蓝色的</td></tr><tr><td align="center">白い</td><td align="center">しろい</td><td align="center">白色的</td></tr><tr><td align="center">赤い</td><td align="center">あかい</td><td align="center">红色的</td></tr><tr><td align="center">黄色い</td><td align="center">きいろい</td><td align="center">黄色的</td></tr><tr><td align="center">黒い</td><td align="center">くろい</td><td align="center">黑色的</td></tr><tr><td align="center">難しい</td><td align="center">むずかしい</td><td align="center">难</td></tr><tr><td align="center">易しい</td><td align="center">やさしい</td><td align="center">简单</td></tr><tr><td align="center">優しい</td><td align="center">やさしい</td><td align="center">温柔，温和</td></tr><tr><td align="center">多い</td><td align="center">おおい</td><td align="center">多</td></tr><tr><td align="center">少ない</td><td align="center">すくない</td><td align="center">少</td></tr><tr><td align="center">かわいい</td><td align="center"></td><td align="center">可爱</td></tr><tr><td align="center">本当に</td><td align="center">ほんとうに</td><td align="center">真的，实在是</td></tr><tr><td align="center">あまり</td><td align="center"></td><td align="center">不太，很</td></tr><tr><td align="center">とても／たいへん</td><td align="center"></td><td align="center">很，非常</td></tr><tr><td align="center">少し／ちょっと</td><td align="center"></td><td align="center">一点儿</td></tr><tr><td align="center">全然</td><td align="center">ぜんぜん</td><td align="center">根本（不），全然（不）</td></tr><tr><td align="center">ちょうど</td><td align="center"></td><td align="center">正好，恰好</td></tr><tr><td align="center">天安門</td><td align="center">てんあんもん</td><td align="center">天安门</td></tr><tr><td align="center">万里の長城</td><td align="center">ばんりのちょうじょう</td><td align="center">万里长城</td></tr><tr><td align="center">気持ちがいい</td><td align="center">きもちがいい</td><td align="center">感觉舒服，心情愉快</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-今-～時-～分-です"><a href="#2-1-今-～時-～分-です" class="headerlink" title="2.1 今　～時　～分　です"></a>2.1 今　～時　～分　です</h3><p>表示现在的时间，具体询问使用“何時”。</p><ul><li>今　４時　です。</li><li>今　何時　ですか。<ul><li>8時半です。</li></ul></li></ul><hr><h3 id="2-2-动词-动词形态"><a href="#2-2-动词-动词形态" class="headerlink" title="2.2 动词 动词形态"></a>2.2 动词 动词形态</h3><ul><li>一类动词（五段动词）：以”う”段假名结尾的动词。<ul><li>常见的一类动词有：行く、置く、使う、作る</li></ul></li><li>二类动词（一段动词）：以“イ”（上一段动词）+ ”る” 或者”え”（下一段动词 ）+ ”る”<ul><li>嘲（あざけ） 煎（い）る</li></ul></li><li>三类动词：来る　する　～する<ul><li>カ变动词</li><li>サ变动词</li></ul></li></ul><ol><li>结尾如果不是る → 一定是一类动词</li><li>以る结尾,る前是い或え段 → 十有八九是二类动词</li><li>する、くる → 三类动词</li></ol><hr><h3 id="2-3-ます-行变化"><a href="#2-3-ます-行变化" class="headerlink" title="2.3 ます 行变化"></a>2.3 ます 行变化</h3><p>“ます”作用</p><ul><li>表示尊敬的助动词</li><li>与“です”同构成句子的礼貌体</li><li>在句中只做谓语，只用于结尾句<br>“ます”型变化</li><li>一类动词：基本型最后发音为”う”段；去掉”う”改为同行”い<ul><li>行くーーーーーーーーーーーー 行きます</li></ul></li><li>二类动词：去掉“る” + ます<ul><li>起きるーーーーーーーーーーーー 起きます</li></ul></li><li>三类动词：<ul><li>来（く）るーーーーーーーーーーーー 来（き）ます</li><li>勉強するーーーーーーーーーーーー 勉強します</li></ul></li></ul><hr><h3 id="2-4-动词的时态"><a href="#2-4-动词的时态" class="headerlink" title="2.4 动词的时态"></a>2.4 动词的时态</h3><ul><li>非过去式（现在、将来）<ul><li>肯定：动词ます型</li><li>否定：动词连用形 + ません</li></ul></li><li>过去时<ul><li>肯定：动词连用形 + ました</li><li>否定：动词连用形 + ませんでした</li></ul></li><li>森さんは　<strong>毎日</strong>　働き<strong>ます</strong>。</li><li>田中さんは　<strong>明日</strong>　働き<strong>ません</strong>。</li><li>森さんは　<strong>先週</strong>　休み<strong>ました</strong>。</li><li>私は　<strong>昨日</strong>　働き<strong>ませんでした</strong>。</li></ul><hr><h3 id="2-5-名-时间-に-动词"><a href="#2-5-名-时间-に-动词" class="headerlink" title="2.5 名 + 时间 に　动词"></a>2.5 名 + 时间 に　动词</h3><p>表示动作发生的时间时，要在具体时间词语后面加上助词“に”</p><ul><li>森さんは　7時　<strong>に</strong>　起きます。</li><li>学校は　8時半　<strong>に</strong>　始まります。</li></ul><hr><h3 id="2-6-名-时间-から-名-时间-まで-动词"><a href="#2-6-名-时间-から-名-时间-まで-动词" class="headerlink" title="2.6 名 时间 　から　名 时间 　まで　动词"></a>2.6 名 时间 　から　名 时间 　まで　动词</h3><p>从…………到…………，表示动词发生在某个时间段</p><ul><li>私は　9時　<strong>から</strong>　5時　<strong>まで</strong>　働きます。</li><li>森さんは　月曜日　<strong>がら</strong>　水曜日　<strong>まで</strong>　休みました。</li></ul><hr><h3 id="2-7-いつ-动词ますか"><a href="#2-7-いつ-动词ますか" class="headerlink" title="2.7 いつ　动词ますか"></a>2.7 いつ　动词ますか</h3><p>（1）询问某动作或事态进行的时间用“いつ”</p><ul><li>試験は　<strong>いつ</strong>　始まりますか。<br>（2）询问具体时间时，在表示时间的词语后面加上“に”</li><li>仕事は　何時　<strong>に</strong>　終わりますか。<br>（3）可以与“から”与“まで”连用</li><li>展覧会は　いつから　始まりますか。</li><li>張さんは　何曜日まで　休みますか。<ul><li>火曜日までです。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第8课　李さんは　日本語で　手紙を　書きます</title>
      <link href="/2022/12/19/japanese/8/"/>
      <url>/2022/12/19/japanese/8/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/8.png"><br>概述：表示手段与材料的名词与动词的搭配，物品的收受动词关系。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">プレゼント</td><td align="center"></td><td align="center">礼物</td></tr><tr><td align="center">チケット</td><td align="center"></td><td align="center">票</td></tr><tr><td align="center">パンフレット</td><td align="center"></td><td align="center">小册子</td></tr><tr><td align="center">記念品</td><td align="center">きねんひん</td><td align="center">纪念品</td></tr><tr><td align="center">スケジュール表</td><td align="center">スケジュールひょう</td><td align="center">日程表</td></tr><tr><td align="center">写真集</td><td align="center">しゃしんしゅう</td><td align="center">影集</td></tr><tr><td align="center">花</td><td align="center">はな</td><td align="center">花</td></tr><tr><td align="center">お金</td><td align="center">おかね</td><td align="center">钱</td></tr><tr><td align="center">バールペン</td><td align="center"></td><td align="center">圆珠笔</td></tr><tr><td align="center">宿題</td><td align="center">しゅくだい</td><td align="center">作业</td></tr><tr><td align="center">航空便</td><td align="center">こうくうび</td><td align="center">航空邮件</td></tr><tr><td align="center">速達</td><td align="center">そくたつ</td><td align="center">快件</td></tr><tr><td align="center">ファックス</td><td align="center"></td><td align="center">传真</td></tr><tr><td align="center">メール</td><td align="center"></td><td align="center">邮件</td></tr><tr><td align="center">電話番号</td><td align="center">でんわばんごう</td><td align="center">电话号码</td></tr><tr><td align="center">住所</td><td align="center">じゅうしょ</td><td align="center">住址</td></tr><tr><td align="center">名前</td><td align="center">なまえ</td><td align="center">姓名</td></tr><tr><td align="center">件</td><td align="center">けん</td><td align="center">事件</td></tr><tr><td align="center">新聞紙</td><td align="center">しんぶんし</td><td align="center">报纸</td></tr><tr><td align="center">紙飛行機</td><td align="center">かみひこうき</td><td align="center">纸飞机</td></tr><tr><td align="center">チョコレート</td><td align="center"></td><td align="center">巧克力</td></tr><tr><td align="center">アイスクリーム</td><td align="center"></td><td align="center">冰激凌</td></tr><tr><td align="center">小麦粉</td><td align="center">こむぎこ</td><td align="center">面粉</td></tr><tr><td align="center">はし</td><td align="center">はし</td><td align="center">筷子</td></tr><tr><td align="center">スプーン</td><td align="center"></td><td align="center">勺子</td></tr><tr><td align="center">お兄さん</td><td align="center">おにいさん</td><td align="center">哥哥</td></tr><tr><td align="center">夕方</td><td align="center">ゆうがた</td><td align="center">傍晚</td></tr><tr><td align="center">昼休み</td><td align="center">ひるやすみ</td><td align="center">午休</td></tr><tr><td align="center">もらう　もらいます</td><td align="center">もらう</td><td align="center">拿到</td></tr><tr><td align="center">会う　会います</td><td align="center">あう</td><td align="center">见</td></tr><tr><td align="center">送る　送ります</td><td align="center">おくる</td><td align="center">寄</td></tr><tr><td align="center">作る　作ります</td><td align="center">つくる</td><td align="center">做，制造</td></tr><tr><td align="center">太る　太ります</td><td align="center">ふとる</td><td align="center">胖</td></tr><tr><td align="center">出す　出します</td><td align="center">だす</td><td align="center">寄</td></tr><tr><td align="center">届く　届きます</td><td align="center">とどく</td><td align="center">收到，送到，寄到</td></tr><tr><td align="center">画く　画きます</td><td align="center">かく</td><td align="center">画</td></tr><tr><td align="center">貸す　貸します</td><td align="center">かす</td><td align="center">借出</td></tr><tr><td align="center">習う　習います</td><td align="center">ならう</td><td align="center">学习</td></tr><tr><td align="center">あげる　あげます</td><td align="center"></td><td align="center">给</td></tr><tr><td align="center">かける　かけます</td><td align="center"></td><td align="center">打电话</td></tr><tr><td align="center">借りる　借ります</td><td align="center">かりる</td><td align="center">向别人借</td></tr><tr><td align="center">教える　教えます</td><td align="center">おしえる</td><td align="center">教</td></tr><tr><td align="center">もう</td><td align="center"></td><td align="center">已经</td></tr><tr><td align="center">さっき</td><td align="center"></td><td align="center">刚才</td></tr><tr><td align="center">たった今</td><td align="center">たったいま</td><td align="center">刚刚</td></tr><tr><td align="center">もう一度</td><td align="center">もういちど</td><td align="center">再一次</td></tr><tr><td align="center">前に</td><td align="center">まえに</td><td align="center">以前</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-名【工具】-で-动词"><a href="#2-1-名【工具】-で-动词" class="headerlink" title="2.1 名【工具】 で  动词"></a>2.1 名【工具】 で  动词</h3><p>で 表示手段以及原材料</p><ul><li>李さん　日本語　で　手紙　を　書きます。</li><li>何　で　うどん　を　作りますか。</li></ul><hr><h3 id="2-1-名１【人】-は-名2【人】-名3【物】-を-あげます"><a href="#2-1-名１【人】-は-名2【人】-名3【物】-を-あげます" class="headerlink" title="2.1 名１【人】 は　 名2【人】 名3【物】 を　あげます"></a>2.1 名１【人】 は　 名2【人】 名3【物】 を　あげます</h3><p>“あげます”相当于汉语的“给”，通常在物品以“第一人称→第二人称→第三人称”或者<br>“第三人称→第三人称”的形式移动时使用。物品用助词“を”，接受者用“に”</p><ul><li>私　は　小野さん　に　お土産　を　あげます。</li><li>小野さん　は　森さん　に　チョコレート　を　あげます。</li><li>弟　は　小野さん　に　花　を　あげました。</li></ul><hr><h3 id="2-2-名１【人】-は-名2【人】-名3【物】-を-もらいます"><a href="#2-2-名１【人】-は-名2【人】-名3【物】-を-もらいます" class="headerlink" title="2.2 名１【人】 は　 名2【人】 名3【物】 を　もらいます"></a>2.2 名１【人】 は　 名2【人】 名3【物】 を　もらいます</h3><p>“まらいます”相当于“得到”，接受通常在物品以“第三人称→第二人称→第一人称”或者<br>“第三人称→第三人称”的形式移动时使用。物品用助词“を”，赠送者用“に”或者“から”表示</p><ul><li>私　は　小野さん　に　辞書　を　もらいます。</li><li>森さん　は　長嶋さん　に　写真　を　もらいました。</li><li>母　は　小野さん　に　ハンカチ　を　もらいました。</li></ul><hr><h3 id="2-3-名【人】-に-会います"><a href="#2-3-名【人】-に-会います" class="headerlink" title="2.3 名【人】 に　会います"></a>2.3 名【人】 に　会います</h3><p>“会います”相当于汉语“见“。所见到的对象用助词”に“表示</p><ul><li>李さん　は　明日　長嶋さん　に　会います。</li><li>私　は　駅　で　森さん　に　会いました。</li></ul><hr><h3 id="2-4-もう"><a href="#2-4-もう" class="headerlink" title="2.4 もう"></a>2.4 もう</h3><p>表示完了。相当于汉语“已经”</p><ul><li>昼ご飯　を　食べましたか。<ul><li>ええ、もう　食べました。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第7课　李さんは　毎日　コーヒーを　飲みます</title>
      <link href="/2022/12/19/japanese/7/"/>
      <url>/2022/12/19/japanese/7/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/7.png"><br>概述：移动动词与场所的搭配，用于场所的助词使用。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">コーヒー</td><td align="center"></td><td align="center">咖啡</td></tr><tr><td align="center">コーラ</td><td align="center"></td><td align="center">可乐</td></tr><tr><td align="center">お茶</td><td align="center">おちゃ</td><td align="center">茶</td></tr><tr><td align="center">ワイン</td><td align="center"></td><td align="center">葡萄酒</td></tr><tr><td align="center">パン</td><td align="center"></td><td align="center">面包</td></tr><tr><td align="center">ケーキ</td><td align="center"></td><td align="center">蛋糕</td></tr><tr><td align="center">お粥</td><td align="center">おかゆ</td><td align="center">粥</td></tr><tr><td align="center">昼ご飯</td><td align="center">ひるごはん</td><td align="center">午饭</td></tr><tr><td align="center">お弁当</td><td align="center">おべんとう</td><td align="center">盒饭</td></tr><tr><td align="center">そば</td><td align="center">そば</td><td align="center">荞麦面</td></tr><tr><td align="center">うどん</td><td align="center"></td><td align="center">面条</td></tr><tr><td align="center">親子丼</td><td align="center">おやこどん</td><td align="center">鸡肉鸡蛋盖饭</td></tr><tr><td align="center">カレイ</td><td align="center"></td><td align="center">咖喱</td></tr><tr><td align="center">卵</td><td align="center">たまご</td><td align="center">鸡蛋</td></tr><tr><td align="center">チーズ</td><td align="center"></td><td align="center">干酪</td></tr><tr><td align="center">リンゴ</td><td align="center"></td><td align="center">苹果</td></tr><tr><td align="center">イチゴ</td><td align="center"></td><td align="center">草莓</td></tr><tr><td align="center">蕎麦屋</td><td align="center">そばや</td><td align="center">荞麦面店</td></tr><tr><td align="center">テニス</td><td align="center"></td><td align="center">网球</td></tr><tr><td align="center">ジョギング</td><td align="center"></td><td align="center">慢跑</td></tr><tr><td align="center">サッカー</td><td align="center"></td><td align="center">足球</td></tr><tr><td align="center">野球</td><td align="center">やきゅう</td><td align="center">棒球</td></tr><tr><td align="center">申込書</td><td align="center">もうしこみしょ</td><td align="center">申请书</td></tr><tr><td align="center">手紙</td><td align="center">てがみ</td><td align="center">信</td></tr><tr><td align="center">音楽</td><td align="center">おんがく</td><td align="center">音乐</td></tr><tr><td align="center">映画</td><td align="center">えいが</td><td align="center">电影</td></tr><tr><td align="center">動物園</td><td align="center">どうぶつえん</td><td align="center">动物园</td></tr><tr><td align="center">パンダ</td><td align="center"></td><td align="center">熊猫</td></tr><tr><td align="center">飲む　飲みます</td><td align="center">のむ</td><td align="center">喝</td></tr><tr><td align="center">買う　買います</td><td align="center">かう</td><td align="center">买</td></tr><tr><td align="center">撮る　撮ります</td><td align="center">とる</td><td align="center">拍照</td></tr><tr><td align="center">書く　書きます</td><td align="center">かく</td><td align="center">写</td></tr><tr><td align="center">読む　読みます</td><td align="center">よむ</td><td align="center">读</td></tr><tr><td align="center">聞く　聞きます</td><td align="center">きく</td><td align="center">听</td></tr><tr><td align="center">食べる　食べます</td><td align="center">たべる</td><td align="center">吃</td></tr><tr><td align="center">見る　見ます</td><td align="center">みる</td><td align="center">看</td></tr><tr><td align="center">しする　します</td><td align="center"></td><td align="center">干，做</td></tr><tr><td align="center">掃除する　掃除します</td><td align="center">そうじする</td><td align="center">打扫</td></tr><tr><td align="center">これから</td><td align="center"></td><td align="center">今后，从现在起</td></tr><tr><td align="center">じゃあ／でわ</td><td align="center"></td><td align="center">那么</td></tr><tr><td align="center">午前中</td><td align="center">ごぜんちゅう</td><td align="center">上午</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-名-を-动词"><a href="#2-1-名-を-动词" class="headerlink" title="2.1 名　を　动词"></a>2.1 名　を　动词</h3><p>动作的对象用助词“を”表示</p><ul><li>李さん　は　毎日　コーヒー　を　飲みます。</li><li>李さんは　毎朝　何　を　食べますか。</li></ul><hr><h3 id="2-2-名【场所】-で-动词"><a href="#2-2-名【场所】-で-动词" class="headerlink" title="2.2 名【场所】　で　动词"></a>2.2 名【场所】　で　动词</h3><p>动作的场所用助词“で”表示。所在的场所和动作进行的场所在汉语里都用“在”表示，但是前者为“に” 后者为 “で”</p><ul><li>李さんは　図書館　で　勉強します。</li><li>今日　どこ　で　新聞　を　読みますか。</li></ul><hr><h3 id="2-3-名-か-名"><a href="#2-3-名-か-名" class="headerlink" title="2.3 名　か　名"></a>2.3 名　か　名</h3><p>对若干名词进行选择时，名词和名词之间加“か”，相当于“或者”</p><ul><li>私　は　毎朝　パン　か　お粥　を　食べます。</li><li>休み　は　月曜日　か　火曜日です。</li></ul><hr><h3 id="2-4-名-を-ください"><a href="#2-4-名-を-ください" class="headerlink" title="2.4 名　を　ください"></a>2.4 名　を　ください</h3><p>买东西或者在餐厅点菜时，用~　を　ください。</p><ul><li>コーラ　と　ケーキ　を　ください。</li><li>この本　を　ください。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第6课　吉田さんは　来月　中国へ　いきます</title>
      <link href="/2022/12/19/japanese/6/"/>
      <url>/2022/12/19/japanese/6/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/6.png"><br>概述：移动动词与场所的搭配，用于场所的助词使用。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">来月</td><td align="center">らいげつ</td><td align="center">下个月</td></tr><tr><td align="center">先月</td><td align="center">せんげつ</td><td align="center">上个月</td></tr><tr><td align="center">夜中</td><td align="center">よなか</td><td align="center">午夜，半夜</td></tr><tr><td align="center">コンサート</td><td align="center"></td><td align="center">音乐会</td></tr><tr><td align="center">クリスマス</td><td align="center"></td><td align="center">圣诞节</td></tr><tr><td align="center">誕生日</td><td align="center">たんじょうび</td><td align="center">生日</td></tr><tr><td align="center">こどもの日</td><td align="center">こどものひ</td><td align="center">儿童节</td></tr><tr><td align="center">夏休み</td><td align="center">なつやすみ</td><td align="center">暑假</td></tr><tr><td align="center">交通機関</td><td align="center">こうつうきかん</td><td align="center">交通工具</td></tr><tr><td align="center">新幹線</td><td align="center">しんかんせん</td><td align="center">新干线</td></tr><tr><td align="center">飛行機</td><td align="center">ひこうき</td><td align="center">飞机</td></tr><tr><td align="center">フェリー</td><td align="center"></td><td align="center">渡轮</td></tr><tr><td align="center">電車</td><td align="center">でんしゃ</td><td align="center">电车</td></tr><tr><td align="center">バス</td><td align="center"></td><td align="center">公共汽车</td></tr><tr><td align="center">タクシー</td><td align="center"></td><td align="center">出租车</td></tr><tr><td align="center">美術館</td><td align="center">びじゅつかん</td><td align="center">美术馆</td></tr><tr><td align="center">アパート</td><td align="center"></td><td align="center">公寓</td></tr><tr><td align="center">家</td><td align="center">うち</td><td align="center">家</td></tr><tr><td align="center">プール</td><td align="center"></td><td align="center">游泳池</td></tr><tr><td align="center">友達</td><td align="center">ともだち</td><td align="center">朋友</td></tr><tr><td align="center">弟</td><td align="center">おとうと</td><td align="center">弟弟</td></tr><tr><td align="center">行く　行きます</td><td align="center">いく</td><td align="center">去</td></tr><tr><td align="center">帰る　帰ります</td><td align="center">かえる</td><td align="center">回来</td></tr><tr><td align="center">来る　来ます</td><td align="center">くる</td><td align="center">来</td></tr><tr><td align="center">確か</td><td align="center">たしか</td><td align="center">好像是，大概；的确</td></tr><tr><td align="center">まっすぐ</td><td align="center"></td><td align="center">径直，笔直</td></tr><tr><td align="center">一緒に</td><td align="center">いっしょに</td><td align="center">一起</td></tr><tr><td align="center">佐藤</td><td align="center">さとう</td><td align="center">佐藤</td></tr><tr><td align="center">広島</td><td align="center">ひろしま</td><td align="center">广岛</td></tr><tr><td align="center">京都</td><td align="center">きょうと</td><td align="center">京都</td></tr><tr><td align="center">北海道</td><td align="center">ほっかいどう</td><td align="center">北海道</td></tr><tr><td align="center">箱根</td><td align="center">はこね</td><td align="center">箱根</td></tr><tr><td align="center">銀座</td><td align="center">ぎんざ</td><td align="center">银座</td></tr><tr><td align="center">渋谷</td><td align="center">しぶや</td><td align="center">涩谷</td></tr><tr><td align="center">新宿</td><td align="center">しんじゅく</td><td align="center">新宿</td></tr><tr><td align="center">歩いて</td><td align="center">あるいて</td><td align="center">步行</td></tr></tbody></table><hr><h3 id="1-2-月份"><a href="#1-2-月份" class="headerlink" title="1.2 月份"></a>1.2 月份</h3><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">1月</td><td align="center">いちがつ</td><td align="center">5月</td><td align="center">ごがつ</td><td align="center">9月</td><td align="center">くがつ</td></tr><tr><td align="center">2月</td><td align="center">にがつ</td><td align="center">6月</td><td align="center">ろくがつ</td><td align="center">10月</td><td align="center">じゅうがつ</td></tr><tr><td align="center">3月</td><td align="center">さんがつ</td><td align="center">7月</td><td align="center">しちがつ</td><td align="center">11月</td><td align="center">じゅういちがつ</td></tr><tr><td align="center">4月</td><td align="center">しがつ</td><td align="center">8月</td><td align="center">はちがつ</td><td align="center">12月</td><td align="center">じゅにがつ</td></tr></tbody></table><hr><h3 id="1-3-日历"><a href="#1-3-日历" class="headerlink" title="1.3 日历"></a>1.3 日历</h3><table><thead><tr><th align="center">日曜日</th><th align="center">月曜日</th><th align="center">火曜日</th><th align="center">水曜日</th><th align="center">木曜日</th><th align="center">金曜日</th><th align="center">土曜日</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td><td align="center">6</td><td align="center">7</td></tr><tr><td align="center">ついたち</td><td align="center">ふつか</td><td align="center">みっか</td><td align="center">よっか</td><td align="center">いつか</td><td align="center">むいか</td><td align="center">なのか</td></tr><tr><td align="center">8</td><td align="center">9</td><td align="center">10</td><td align="center">11</td><td align="center">12</td><td align="center">13</td><td align="center">14</td></tr><tr><td align="center">ようか</td><td align="center">ここのか</td><td align="center">とおか</td><td align="center">じゅういちにち</td><td align="center">じゅうににち</td><td align="center">じゅうさんにち</td><td align="center">じゅうよっか</td></tr><tr><td align="center">15</td><td align="center">16</td><td align="center">17</td><td align="center">18</td><td align="center">19</td><td align="center">20</td><td align="center">21</td></tr><tr><td align="center">じゅうごにち</td><td align="center">じゅうろくにち</td><td align="center">じゅうしちにち</td><td align="center">じゅうはちにち</td><td align="center">じゅうくにち</td><td align="center">はつか</td><td align="center">にじゅうういちにち</td></tr><tr><td align="center">22</td><td align="center">23</td><td align="center">24</td><td align="center">25</td><td align="center">26</td><td align="center">27</td><td align="center">28</td></tr><tr><td align="center">にじゅうににち</td><td align="center">にじゅうさんにち</td><td align="center">にじゅうよっか</td><td align="center">にじゅうごにち</td><td align="center">にじゅうろくにち</td><td align="center">にじゅうしちにち</td><td align="center">にじゅうはちにち</td></tr><tr><td align="center">29</td><td align="center">30</td><td align="center">31</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">にじゅうくにち</td><td align="center">さんじゅうにち</td><td align="center">さんじゅういちにち</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-名【场所】-ヘ-动词"><a href="#2-1-名【场所】-ヘ-动词" class="headerlink" title="2.1 名【场所】　ヘ　动词"></a>2.1 名【场所】　ヘ　动词</h3><p>使用“行きます” “帰ります”等表示移动的动词，移动行为的目的地用助词“ヘ”表示，读作”え”</p><ul><li>李さん　は　どこ　<strong>へ</strong>　行きませんでしたか。</li></ul><hr><h3 id="2-2-名【场所】-から-动词"><a href="#2-2-名【场所】-から-动词" class="headerlink" title="2.2 名【场所】　から　动词"></a>2.2 名【场所】　から　动词</h3><p>使用移动动词时，移动的起点用助词“から”表示。</p><ul><li>あの方　は　どこ　<strong>から</strong>　きましたか。</li></ul><hr><h3 id="2-3-名【人】-と-动词"><a href="#2-3-名【人】-と-动词" class="headerlink" title="2.3 名【人】　と　动词"></a>2.3 名【人】　と　动词</h3><p>共同做某事的对象用“と”表示。</p><ul><li>李さん　は　誰　<strong>と</strong>　日本　へ　来ましたか。</li></ul><hr><h3 id="2-4-名【交通工具】-で-动词"><a href="#2-4-名【交通工具】-で-动词" class="headerlink" title="2.4 名【交通工具】　で　动词"></a>2.4 名【交通工具】　で　动词</h3><p>交通手段用助词“で”表示。不使用交通工具而步行“歩いて”</p><ul><li>上海　まで　飛行機　で　行きます。</li><li>京都　へ　何　で　来ましたか。</li><li>李さん　は　歩いて　アパート　へ　帰りま。</li></ul><hr><h3 id="2-5-名【场所】から-名【场所】まで-动词"><a href="#2-5-名【场所】から-名【场所】まで-动词" class="headerlink" title="2.5 名【场所】から  名【场所】まで　动词"></a>2.5 名【场所】から  名【场所】まで　动词</h3><p>表示移动的范围时，范围的起点用“から”，终点用“まで”</p><ul><li>森さんは　駅　から　アパート　まで　歩いて　帰りました。</li></ul><hr><h3 id="2-6-に／で／へ／から／まで／と-＋-は"><a href="#2-6-に／で／へ／から／まで／と-＋-は" class="headerlink" title="2.6 に／で／へ／から／まで／と　＋　は"></a>2.6 に／で／へ／から／まで／と　＋　は</h3><p>助词“は”表示对比的意思。</p><ul><li>わたしの部屋　に　は　電話が　ありません。</li><li>韓国　へ　は　行きました。中国　へ　は　行きませんでした。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5课　森さんは　7時に　起きます</title>
      <link href="/2022/12/19/japanese/5/"/>
      <url>/2022/12/19/japanese/5/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/5.png"><br>概述：时间的表示方式，与动词的一些时态表示。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">今</td><td align="center">いま</td><td align="center">现在</td></tr><tr><td align="center">先週</td><td align="center">せんしゅう</td><td align="center">上个星期</td></tr><tr><td align="center">来週</td><td align="center">らいしゅう</td><td align="center">下个星期</td></tr><tr><td align="center">再来週</td><td align="center">さらいしゅう</td><td align="center">下下个星期</td></tr><tr><td align="center">今週</td><td align="center">こんしゅう</td><td align="center">这个星期</td></tr><tr><td align="center">昨日</td><td align="center">きのう</td><td align="center">昨天</td></tr><tr><td align="center">明日</td><td align="center">あした</td><td align="center">明天</td></tr><tr><td align="center">明後日</td><td align="center">あさって</td><td align="center">后天</td></tr><tr><td align="center">一昨日</td><td align="center">おととい</td><td align="center">前天</td></tr><tr><td align="center">毎日</td><td align="center">まいにち</td><td align="center">每天</td></tr><tr><td align="center">毎朝</td><td align="center">まいあさ</td><td align="center">每天早上</td></tr><tr><td align="center">毎晩</td><td align="center">まいばん</td><td align="center">每天晚上</td></tr><tr><td align="center">毎週</td><td align="center">まいしゅう</td><td align="center">每周</td></tr><tr><td align="center">午前</td><td align="center">ごぜん</td><td align="center">上午</td></tr><tr><td align="center">午後</td><td align="center">ごご</td><td align="center">下午</td></tr><tr><td align="center">今朝</td><td align="center">けさ</td><td align="center">今天早上</td></tr><tr><td align="center">今晩</td><td align="center">こんばん</td><td align="center">今天晚上</td></tr><tr><td align="center">来年</td><td align="center">らいねん</td><td align="center">明年</td></tr><tr><td align="center">去年</td><td align="center">きょねん</td><td align="center">去年</td></tr><tr><td align="center">夜</td><td align="center">よる</td><td align="center">夜里，晚上</td></tr><tr><td align="center">晩</td><td align="center">ばん</td><td align="center">晚上</td></tr><tr><td align="center">朝</td><td align="center">あさ</td><td align="center">早晨</td></tr><tr><td align="center">学校</td><td align="center">がっこう</td><td align="center">学校</td></tr><tr><td align="center">試験</td><td align="center">しけん</td><td align="center">考试</td></tr><tr><td align="center">仕事</td><td align="center">しごと</td><td align="center">工作</td></tr><tr><td align="center">遅刻</td><td align="center">ちこく</td><td align="center">迟到</td></tr><tr><td align="center">休み</td><td align="center">やすみ</td><td align="center">休息</td></tr><tr><td align="center">出張</td><td align="center">しゅっちょう</td><td align="center">出差</td></tr><tr><td align="center">研修</td><td align="center">けんしゅう</td><td align="center">进修</td></tr><tr><td align="center">旅行</td><td align="center">りょこう</td><td align="center">旅行</td></tr><tr><td align="center">展覧会</td><td align="center">てんらんかい</td><td align="center">展览会</td></tr><tr><td align="center">歓迎会</td><td align="center">かんげいかい</td><td align="center">欢迎会</td></tr><tr><td align="center">パーティー</td><td align="center"></td><td align="center">联欢会</td></tr><tr><td align="center">お宅</td><td align="center">おたく</td><td align="center">您家</td></tr><tr><td align="center">休みます</td><td align="center">やすみます</td><td align="center">休息</td></tr><tr><td align="center">働きます　働く</td><td align="center">はたらきます</td><td align="center">工作</td></tr><tr><td align="center">始まります　始まる</td><td align="center">はじまります</td><td align="center">开始</td></tr><tr><td align="center">終わります　終わる</td><td align="center">おわります</td><td align="center">结束</td></tr><tr><td align="center">起きます　起きる</td><td align="center">おきます</td><td align="center">起床</td></tr><tr><td align="center">寝ます　寝る</td><td align="center">ねます</td><td align="center">睡觉</td></tr><tr><td align="center">勉強します　勉強する</td><td align="center">べんきょうします</td><td align="center">学习</td></tr><tr><td align="center">いつも</td><td align="center"></td><td align="center">总是</td></tr><tr><td align="center">神戸</td><td align="center">こうべ</td><td align="center">神户</td></tr><tr><td align="center">～時　～分　～半　～月　～日 ～年　～ごろ</td><td align="center"></td><td align="center"></td></tr></tbody></table><hr><h3 id="1-2-星期"><a href="#1-2-星期" class="headerlink" title="1.2 星期"></a>1.2 星期</h3><table><thead><tr><th align="center">日曜日</th><th align="center">月曜日</th><th align="center">火曜日</th><th align="center">水曜日</th><th align="center">木曜日</th><th align="center">金曜日</th><th align="center">土曜日</th></tr></thead><tbody><tr><td align="center">にちようび</td><td align="center">げつようび</td><td align="center">かようび</td><td align="center">すいようび</td><td align="center">もくようび</td><td align="center">きんようび</td><td align="center">どようび</td></tr><tr><td align="center">周日</td><td align="center">周一</td><td align="center">周二</td><td align="center">周三</td><td align="center">周四</td><td align="center">周五</td><td align="center">周六</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-今-～時-～分-です"><a href="#2-1-今-～時-～分-です" class="headerlink" title="2.1 今　～時　～分　です"></a>2.1 今　～時　～分　です</h3><p>表示现在的时间，具体询问使用“何時”。</p><ul><li>今　４時　です。</li><li>今　何時　ですか。<ul><li>8時半です。</li></ul></li></ul><hr><h3 id="2-2-动词-动词形态"><a href="#2-2-动词-动词形态" class="headerlink" title="2.2 动词 动词形态"></a>2.2 动词 动词形态</h3><ul><li>一类动词（五段动词）：以”う”段假名结尾的动词。<ul><li>常见的一类动词有：行く、置く、使う、作る</li></ul></li><li>二类动词（一段动词）：以“イ”（上一段动词）+ ”る” 或者”え”（下一段动词 ）+ ”る”<ul><li>嘲（あざけ） 煎（い）る</li></ul></li><li>三类动词：来る　する　～する<ul><li>カ变动词</li><li>サ变动词</li></ul></li></ul><ol><li>结尾如果不是る → 一定是一类动词</li><li>以る结尾,る前是い或え段 → 十有八九是二类动词</li><li>する、くる → 三类动词</li></ol><hr><h3 id="2-3-ます-形变化"><a href="#2-3-ます-形变化" class="headerlink" title="2.3 ます 形变化"></a>2.3 ます 形变化</h3><p>“ます”作用</p><ul><li>表示尊敬的助动词</li><li>与“です”同构成句子的礼貌体</li><li>在句中只做谓语，只用于结尾句<br>“ます”型变化</li><li>一类动词：基本型最后发音为”う”段；去掉”う”改为同行”い<ul><li>行くーーーーーーーーーーーー 行きます</li></ul></li><li>二类动词：去掉“る” + ます<ul><li>起きるーーーーーーーーーーーー 起きます</li></ul></li><li>三类动词：<ul><li>来（く）るーーーーーーーーーーーー 来（き）ます</li><li>勉強するーーーーーーーーーーーー 勉強します</li></ul></li></ul><hr><h3 id="2-4-动词的时态"><a href="#2-4-动词的时态" class="headerlink" title="2.4 动词的时态"></a>2.4 动词的时态</h3><ul><li>非过去式（现在、将来）<ul><li>肯定：动词ます型</li><li>否定：动词连用形 + ません</li></ul></li><li>过去时<ul><li>肯定：动词连用形 + ました</li><li>否定：动词连用形 + ませんでした</li></ul></li><li>森さんは　<strong>毎日</strong>　働き<strong>ます</strong>。</li><li>田中さんは　<strong>明日</strong>　働き<strong>ません</strong>。</li><li>森さんは　<strong>先週</strong>　休み<strong>ました</strong>。</li><li>私は　<strong>昨日</strong>　働き<strong>ませんでした</strong>。</li></ul><hr><h3 id="2-5-名-时间-に-动词"><a href="#2-5-名-时间-に-动词" class="headerlink" title="2.5 名 + 时间 に　动词"></a>2.5 名 + 时间 に　动词</h3><p>表示动作发生的时间时，要在具体时间词语后面加上助词“に”</p><ul><li>森さんは　7時　<strong>に</strong>　起きます。</li><li>学校は　8時半　<strong>に</strong>　始まります。</li></ul><hr><h3 id="2-6-名-时间-から-名-时间-まで-动词"><a href="#2-6-名-时间-から-名-时间-まで-动词" class="headerlink" title="2.6 名 时间 　から　名 时间 　まで　动词"></a>2.6 名 时间 　から　名 时间 　まで　动词</h3><p>从…………到…………，表示动词发生在某个时间段</p><ul><li>私は　9時　<strong>から</strong>　5時　<strong>まで</strong>　働きます。</li><li>森さんは　月曜日　<strong>がら</strong>　水曜日　<strong>まで</strong>　休みました。</li></ul><hr><h3 id="2-7-いつ-动词ますか"><a href="#2-7-いつ-动词ますか" class="headerlink" title="2.7 いつ　动词ますか"></a>2.7 いつ　动词ますか</h3><p>（1）询问某动作或事态进行的时间用“いつ”</p><ul><li>試験は　<strong>いつ</strong>　始まりますか。</li></ul><p>（2）询问具体时间时，在表示时间的词语后面加上“に”</p><ul><li>仕事は　何時　<strong>に</strong>　終わりますか。</li></ul><p>（3）可以与“から”与“まで”连用</p><ul><li>展覧会は　いつから　始まりますか。</li><li>張さんは　何曜日まで　休みますか。<ul><li>火曜日までです。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4课  部屋に　机と　いすが　あります</title>
      <link href="/2022/12/16/japanese/4/"/>
      <url>/2022/12/16/japanese/4/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/4.png"><br>概述：表示事物存在，“~在~”，“~有~” 句式，物品处于的各个方位表示。</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">部屋</td><td align="center">へや</td><td align="center">房间，屋子</td></tr><tr><td align="center">庭</td><td align="center">にわ</td><td align="center">院子</td></tr><tr><td align="center">家</td><td align="center">いえ</td><td align="center">家</td></tr><tr><td align="center">居間</td><td align="center">いま</td><td align="center">起居室</td></tr><tr><td align="center">冷蔵庫</td><td align="center">れいぞうこ</td><td align="center">冰箱</td></tr><tr><td align="center">壁</td><td align="center">かべ</td><td align="center">墙壁</td></tr><tr><td align="center">スイッチ</td><td align="center"></td><td align="center">开关</td></tr><tr><td align="center">本棚</td><td align="center">ほんだな</td><td align="center">书架</td></tr><tr><td align="center">ベッド</td><td align="center"></td><td align="center">床</td></tr><tr><td align="center">猫</td><td align="center">ねこ</td><td align="center">猫</td></tr><tr><td align="center">犬</td><td align="center">いぬ</td><td align="center">狗</td></tr><tr><td align="center">箱</td><td align="center">はこ</td><td align="center">盒子，箱子</td></tr><tr><td align="center">眼鏡</td><td align="center">めがね</td><td align="center">眼镜</td></tr><tr><td align="center">ビデオ</td><td align="center"></td><td align="center">录像机</td></tr><tr><td align="center">サッカーボール</td><td align="center"></td><td align="center">足球</td></tr><tr><td align="center">ビール</td><td align="center"></td><td align="center">啤酒</td></tr><tr><td align="center">ウイスキー</td><td align="center"></td><td align="center">威士忌</td></tr><tr><td align="center">子供</td><td align="center">こども</td><td align="center">孩子</td></tr><tr><td align="center">男</td><td align="center">おとこ</td><td align="center">男</td></tr><tr><td align="center">女</td><td align="center">おんな</td><td align="center">女</td></tr><tr><td align="center">生徒</td><td align="center">せいと</td><td align="center">学生</td></tr><tr><td align="center">上</td><td align="center">うえ</td><td align="center">上</td></tr><tr><td align="center">下</td><td align="center">した</td><td align="center">下</td></tr><tr><td align="center">中</td><td align="center">なか</td><td align="center">里面</td></tr><tr><td align="center">外</td><td align="center">そと</td><td align="center">外面</td></tr><tr><td align="center">前</td><td align="center">まえ</td><td align="center">前面</td></tr><tr><td align="center">後ろ</td><td align="center">うしろ</td><td align="center">后面</td></tr><tr><td align="center">近く</td><td align="center">ちかく</td><td align="center">附近，近旁</td></tr><tr><td align="center">場所</td><td align="center">ばしょ</td><td align="center">所在地，地方，场所</td></tr><tr><td align="center">教室</td><td align="center">きょうしつ</td><td align="center">教室</td></tr><tr><td align="center">会議室</td><td align="center">かいぎしつ</td><td align="center">会议室</td></tr><tr><td align="center">図書室</td><td align="center">としょしつ</td><td align="center">图书馆</td></tr><tr><td align="center">公園</td><td align="center">こうえん</td><td align="center">公园</td></tr><tr><td align="center">花屋</td><td align="center">はなや</td><td align="center">花店</td></tr><tr><td align="center">売店</td><td align="center">ばいてん</td><td align="center">小卖部，售货亭</td></tr><tr><td align="center">駅</td><td align="center">えき</td><td align="center">电车站，火车站</td></tr><tr><td align="center">地下鉄</td><td align="center">ちかてつ</td><td align="center">地铁</td></tr><tr><td align="center">電車</td><td align="center">でんしゃ</td><td align="center">火车站</td></tr><tr><td align="center">バス停</td><td align="center"></td><td align="center">汽车站</td></tr><tr><td align="center">新幹線</td><td align="center">しんかんせん</td><td align="center">新干线</td></tr><tr><td align="center">木</td><td align="center">き</td><td align="center">木</td></tr><tr><td align="center">一人暮らし</td><td align="center">ひとりぐらし</td><td align="center">单身生活</td></tr><tr><td align="center">あります</td><td align="center"></td><td align="center">有，在</td></tr><tr><td align="center">います</td><td align="center"></td><td align="center">有，在</td></tr><tr><td align="center">ええと</td><td align="center"></td><td align="center">啊，嗯</td></tr><tr><td align="center">横浜</td><td align="center">よこはま</td><td align="center">横浜</td></tr><tr><td align="center">名古屋</td><td align="center">なごや</td><td align="center">名古屋</td></tr></tbody></table><hr><h3 id="1-2-场所"><a href="#1-2-场所" class="headerlink" title="1.2 场所"></a>1.2 场所</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt"></div></th><th align="center"><div style="width: 80pt"></div></th></tr></thead><tbody><tr><td align="center">映画館</td><td align="center">えいがかん</td><td align="center">电影院</td></tr><tr><td align="center">美術館</td><td align="center">びじゅつかん</td><td align="center">美术馆</td></tr><tr><td align="center">体育館</td><td align="center">たいいくかん</td><td align="center">体育馆</td></tr><tr><td align="center">博物館</td><td align="center">はくぶつかん</td><td align="center">博物馆</td></tr><tr><td align="center">図書館</td><td align="center">としょかん</td><td align="center">图书馆</td></tr><tr><td align="center">動物園</td><td align="center">どうぶつえん</td><td align="center">动物园</td></tr><tr><td align="center">遊園地</td><td align="center">ゆうえんち</td><td align="center">游乐园</td></tr><tr><td align="center">駅</td><td align="center">えき</td><td align="center">车站</td></tr><tr><td align="center">空港</td><td align="center">くうこう</td><td align="center">机场</td></tr><tr><td align="center">市役所</td><td align="center">しやくしょ</td><td align="center">市政所</td></tr><tr><td align="center">消防署</td><td align="center">しょうぼうしょ</td><td align="center">消防局</td></tr><tr><td align="center">警察署</td><td align="center">けいさつしょ</td><td align="center">警察局</td></tr><tr><td align="center">交番</td><td align="center">こうばん</td><td align="center">派出所</td></tr><tr><td align="center">病院</td><td align="center">びょういん</td><td align="center">医院</td></tr><tr><td align="center">工場</td><td align="center">こうじょう</td><td align="center">工厂</td></tr><tr><td align="center">劇場</td><td align="center">げきじょう</td><td align="center">剧场</td></tr><tr><td align="center">駐車場</td><td align="center">ちゅうしゃじょう</td><td align="center">停车场</td></tr><tr><td align="center">学校</td><td align="center">がっこう</td><td align="center">学校</td></tr><tr><td align="center">お店</td><td align="center">おみせ</td><td align="center">商店，小店</td></tr><tr><td align="center">八百屋</td><td align="center">やおや</td><td align="center">蔬菜店</td></tr><tr><td align="center">肉屋</td><td align="center">にくや</td><td align="center">肉店</td></tr><tr><td align="center">魚屋</td><td align="center">さかなや</td><td align="center">鱼店</td></tr><tr><td align="center">蕎麦屋</td><td align="center">そばや</td><td align="center">荞麦面店</td></tr><tr><td align="center">床屋</td><td align="center">とこや</td><td align="center">理发店</td></tr><tr><td align="center">薬局</td><td align="center">やっきょく</td><td align="center">药店</td></tr><tr><td align="center">喫茶店</td><td align="center">きっさてん</td><td align="center">咖啡店</td></tr><tr><td align="center">スーパー</td><td align="center"></td><td align="center">超市</td></tr><tr><td align="center">ガソリンスタンド</td><td align="center"></td><td align="center">加油站</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-”あります”-和-”います“"><a href="#2-1-”あります”-和-”います“" class="headerlink" title="2.1 ”あります” 和 ”います“"></a>2.1 ”あります” 和 ”います“</h3><p>表示事物存在时，最常用的谓语是”あります” 和 ”います“。”あります” 用于花、草、桌子<br>等不具有意志的事物。”います“用于具有意志的 人、动物或者昆虫。<br>（1）表示存在，相当于汉语的“~有~”</p><ul><li>部屋　<strong>に</strong>　机　<strong>があります</strong>。</li><li>庭　<strong>に</strong>　何　<strong>がありますか</strong>。</li><li>公園　<strong>に</strong>　子供　<strong>がいます</strong>。</li></ul><p>（2）表示位置，相当于“<del>在</del>”</p><ul><li>椅子　<strong>は</strong>　部屋　<strong>に　あります</strong>。</li><li>図書館　<strong>は</strong>　どこ　<strong>に　ありますか</strong>。</li><li>犬　<strong>は</strong>　どに　<strong>に　いますか</strong>。</li></ul><hr><h3 id="2-2【名】と【名】并列"><a href="#2-2【名】と【名】并列" class="headerlink" title="2.2【名】と【名】并列"></a>2.2【名】と【名】并列</h3><p>助词“と”加在两个名词之间表示并列，意思相当于汉语的“和”</p><ul><li>時計　と　眼鏡</li><li>ビールー　と　ウイスキー</li></ul><hr><h3 id="2-3-上／下／前／後ろ／隣／中／外"><a href="#2-3-上／下／前／後ろ／隣／中／外" class="headerlink" title="2.3 上／下／前／後ろ／隣／中／外"></a>2.3 上／下／前／後ろ／隣／中／外</h3><ul><li>机　の　<strong>上</strong>　に　猫　がいます。</li><li>会社　の　<strong>隣</strong>　に　花屋　があります。</li><li>売店　は　駅　の　<strong>外</strong>　に　あります。</li></ul><hr><h3 id="2-4-疑问词-も-动词（否定）"><a href="#2-4-疑问词-も-动词（否定）" class="headerlink" title="2.4 疑问词 + も + 动词（否定）"></a>2.4 疑问词 + も + 动词（否定）</h3><p>表示全面的否定</p><ul><li>教室　に　誰　<strong>も</strong>　いません。</li><li>冷蔵庫　に　何　<strong>も</strong>　ありません。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3课  ここは　デパート　です</title>
      <link href="/2022/12/16/japanese/3/"/>
      <url>/2022/12/16/japanese/3/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/3.png"><br>概述：场所表示，价钱的询问</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">デパート</td><td align="center"></td><td align="center">百货商店</td></tr><tr><td align="center">食堂</td><td align="center">しょくどう</td><td align="center">食堂</td></tr><tr><td align="center">郵便局</td><td align="center">ゆうびんきょく</td><td align="center">邮局</td></tr><tr><td align="center">銀行</td><td align="center">ぎんこう</td><td align="center">银行</td></tr><tr><td align="center">図書館</td><td align="center">としょかん</td><td align="center">图书馆</td></tr><tr><td align="center">マンション</td><td align="center"></td><td align="center">公寓</td></tr><tr><td align="center">ホテル</td><td align="center"></td><td align="center">酒店</td></tr><tr><td align="center">コンビニ</td><td align="center"></td><td align="center">便利店</td></tr><tr><td align="center">喫茶店</td><td align="center">きっさてん</td><td align="center">咖啡馆</td></tr><tr><td align="center">病院</td><td align="center">びょういん</td><td align="center">医院</td></tr><tr><td align="center">本屋</td><td align="center">ほんや</td><td align="center">书店</td></tr><tr><td align="center">レストラン</td><td align="center"></td><td align="center">餐馆，西餐店</td></tr><tr><td align="center">ビル</td><td align="center"></td><td align="center">大楼，大厦</td></tr><tr><td align="center">建物</td><td align="center">たてもの</td><td align="center">大楼，建筑物</td></tr><tr><td align="center">売り場</td><td align="center">うりば</td><td align="center">柜台，出售处</td></tr><tr><td align="center">トイレ</td><td align="center"></td><td align="center">厕所，盥洗室</td></tr><tr><td align="center">入口</td><td align="center">いりぐち</td><td align="center">入口</td></tr><tr><td align="center">事務所</td><td align="center">じむしょ</td><td align="center">事务所，办事处</td></tr><tr><td align="center">受付</td><td align="center">うけつけ</td><td align="center">接待处</td></tr><tr><td align="center">バーゲン会場</td><td align="center">バーゲンかいじょう</td><td align="center">降价处理大卖场</td></tr><tr><td align="center">エスカレーター</td><td align="center"></td><td align="center">自动扶梯</td></tr><tr><td align="center">服</td><td align="center">ふく</td><td align="center">衣服</td></tr><tr><td align="center">コート</td><td align="center"></td><td align="center">风衣，大衣</td></tr><tr><td align="center">デジカメ</td><td align="center"></td><td align="center">数码相机</td></tr><tr><td align="center">国</td><td align="center">くに</td><td align="center">国，国家</td></tr><tr><td align="center">地図</td><td align="center">ちず</td><td align="center">地图</td></tr><tr><td align="center">隣</td><td align="center">となり</td><td align="center">旁边</td></tr><tr><td align="center">周辺</td><td align="center">しゅうへん</td><td align="center">附近，周边</td></tr><tr><td align="center">今日</td><td align="center">きょう</td><td align="center">今天</td></tr><tr><td align="center">ここ</td><td align="center"></td><td align="center">这里，这儿</td></tr><tr><td align="center">そこ</td><td align="center"></td><td align="center">那里，那儿</td></tr><tr><td align="center">あそこ</td><td align="center"></td><td align="center">那里，那儿</td></tr><tr><td align="center">こちら</td><td align="center"></td><td align="center">这儿，这边</td></tr><tr><td align="center">そちら</td><td align="center"></td><td align="center">那儿，那边</td></tr><tr><td align="center">あちら</td><td align="center"></td><td align="center">那儿，那边</td></tr><tr><td align="center">どこ</td><td align="center"></td><td align="center">哪里，哪儿</td></tr><tr><td align="center">どちら</td><td align="center"></td><td align="center">哪儿，哪边</td></tr><tr><td align="center">あのう</td><td align="center"></td><td align="center">请问，对不起</td></tr><tr><td align="center">上海</td><td align="center">シャンハイ</td><td align="center">上海</td></tr><tr><td align="center">東京</td><td align="center">とうきょう</td><td align="center">东京</td></tr><tr><td align="center">いくら</td><td align="center"></td><td align="center">多少钱</td></tr></tbody></table><hr><h3 id="1-2-数字-100以上"><a href="#1-2-数字-100以上" class="headerlink" title="1.2 数字(100以上)"></a>1.2 数字(100以上)</h3><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">100</td><td align="center">ひゃく</td><td align="center">1,000</td><td align="center">せん</td><td align="center">10,000</td><td align="center">いちまん</td></tr><tr><td align="center">—</td><td align="center">—</td><td align="center">—</td><td align="center">—</td><td align="center">—</td><td align="center">—</td></tr><tr><td align="center">200</td><td align="center">にひゃく</td><td align="center">2,000</td><td align="center">にせん</td><td align="center">100,000</td><td align="center">じゅうまん</td></tr><tr><td align="center">300</td><td align="center">さんびゃく</td><td align="center">3,000</td><td align="center">さんぜん</td><td align="center">1,000,000</td><td align="center">ひゃくまん</td></tr><tr><td align="center">400</td><td align="center">よんひゃく</td><td align="center">4,000</td><td align="center">よんせん</td><td align="center">10,000,000</td><td align="center">いっせんまん</td></tr><tr><td align="center">500</td><td align="center">ごひゃく</td><td align="center">5,000</td><td align="center">ごせん</td><td align="center">100,000,000</td><td align="center">いちおく</td></tr><tr><td align="center">600</td><td align="center">ろっぴゃく</td><td align="center">6,000</td><td align="center">ろくせん</td><td align="center">9002</td><td align="center">きゅうせん　に</td></tr><tr><td align="center">700</td><td align="center">ななひゃく</td><td align="center">7,000</td><td align="center">ななせん</td><td align="center">9020</td><td align="center">きゅうせん　にじゅう</td></tr><tr><td align="center">800</td><td align="center">はっぴゃく</td><td align="center">8,000</td><td align="center">はっせん</td><td align="center">9200</td><td align="center">きゅうせん　にひゃく</td></tr><tr><td align="center">900</td><td align="center">きゅうひゃく</td><td align="center">9,000</td><td align="center">きゅうさん</td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1-ここ／そこ／あそこ"><a href="#2-1-ここ／そこ／あそこ" class="headerlink" title="2.1 ここ／そこ／あそこ"></a>2.1 ここ／そこ／あそこ</h3><p>指示场所时，用“ここ／そこ／あそこ”。所表示的位置关系与“これ／それ／あれ”相同。</p><ul><li><strong>ここ</strong>　は　デパート　です。</li><li><strong>そこ</strong>　は　図書館　です。</li><li><strong>あそこ</strong>　は　入り口　です。</li></ul><hr><h3 id="2-2【名】は【名（场所）】です"><a href="#2-2【名】は【名（场所）】です" class="headerlink" title="2.2【名】は【名（场所）】です"></a>2.2【名】は【名（场所）】です</h3><p>表示【名词】位于【名词（场所）】</p><hr><h3 id="2-3【名】は-どこですか。"><a href="#2-3【名】は-どこですか。" class="headerlink" title="2.3【名】は　どこですか。"></a>2.3【名】は　どこですか。</h3><ul><li>トイレは　どこですか。<ul><li>あちらです。</li></ul></li><li>あなたの　かばんは　どこですか。<ul><li>私の　かばん　ここです。</li></ul></li></ul><hr><h3 id="2-4【名】も【名】です"><a href="#2-4【名】も【名】です" class="headerlink" title="2.4【名】も【名】です"></a>2.4【名】も【名】です</h3><p>助词 “も” 基本相当于汉语的“也”</p><ul><li>李さんは　中国人　です。<ul><li>趙さん　<strong>も</strong>　中国人　です。</li></ul></li></ul><hr><h3 id="2-5【名】-は【名】ですか，【名】ですか"><a href="#2-5【名】-は【名】ですか，【名】ですか" class="headerlink" title="2.5【名】 は【名】ですか，【名】ですか"></a>2.5【名】 は【名】ですか，【名】ですか</h3><p>答案有多种可能，选择疑问句。</p><ul><li>林さんは　韓国人　ですか，日本人　ですか，中国人　ですか。<ul><li>日本人。</li></ul></li></ul><hr><h3 id="2-6【名】-は-いくらですか"><a href="#2-6【名】-は-いくらですか" class="headerlink" title="2.6【名】 は　いくらですか"></a>2.6【名】 は　いくらですか</h3><p>询问价钱时，用“いくら”。</p><ul><li>これ　は　<strong>いくら</strong>　ですか。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2课 これわ　本です</title>
      <link href="/2022/12/14/japanese/2/"/>
      <url>/2022/12/14/japanese/2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/2.png"><br>概述：介绍简单的方位用法，これ、それ、あれ，陈述以及疑问用法    </p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1.词汇"></a>1.词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">本</td><td align="center">ほん</td><td align="center">本</td></tr><tr><td align="center">かばん</td><td align="center">かばん</td><td align="center">包</td></tr><tr><td align="center">ノート</td><td align="center"></td><td align="center">笔记本，本子</td></tr><tr><td align="center">鉛筆</td><td align="center">えんぴつ</td><td align="center">铅笔</td></tr><tr><td align="center">傘</td><td align="center">かさ</td><td align="center">伞</td></tr><tr><td align="center">靴</td><td align="center">くつ</td><td align="center">鞋</td></tr><tr><td align="center">新聞</td><td align="center">しんぶん</td><td align="center">报纸</td></tr><tr><td align="center">雑誌</td><td align="center">ざっし</td><td align="center">杂志</td></tr><tr><td align="center">辞書</td><td align="center">じしょ</td><td align="center">字典</td></tr><tr><td align="center">カメラ</td><td align="center"></td><td align="center">照相机</td></tr><tr><td align="center">テレビ</td><td align="center"></td><td align="center">电视机</td></tr><tr><td align="center">パソコン</td><td align="center"></td><td align="center">个人电脑</td></tr><tr><td align="center">ラジオ</td><td align="center"></td><td align="center">收音机</td></tr><tr><td align="center">電話</td><td align="center">でんわ</td><td align="center">电话</td></tr><tr><td align="center">机</td><td align="center">つくえ</td><td align="center">桌子</td></tr><tr><td align="center">椅子</td><td align="center">いす</td><td align="center">椅子</td></tr><tr><td align="center">鍵</td><td align="center">かぎ</td><td align="center">钥匙</td></tr><tr><td align="center">時計</td><td align="center">とけい</td><td align="center">钟表</td></tr><tr><td align="center">手帳</td><td align="center">てちょう</td><td align="center">日记，记事本</td></tr><tr><td align="center">写真</td><td align="center">しゃしん</td><td align="center">照片</td></tr><tr><td align="center">車</td><td align="center">くるま</td><td align="center">车子</td></tr><tr><td align="center">自転車</td><td align="center">じてんしゃ</td><td align="center">自行车</td></tr><tr><td align="center">お土産</td><td align="center">おみやげ</td><td align="center">礼物</td></tr><tr><td align="center">名産品</td><td align="center">めいさんひん</td><td align="center">特产</td></tr><tr><td align="center">シルク</td><td align="center"></td><td align="center">丝绸</td></tr><tr><td align="center">ハンカチ</td><td align="center"></td><td align="center">手绢</td></tr><tr><td align="center">会社</td><td align="center">かいしゃ</td><td align="center">公司</td></tr><tr><td align="center">方</td><td align="center">かた</td><td align="center">（敬称）位，人</td></tr><tr><td align="center">人</td><td align="center">ひと</td><td align="center">人</td></tr><tr><td align="center">家族</td><td align="center">かぞく</td><td align="center">家人，家属</td></tr><tr><td align="center">母</td><td align="center">はは</td><td align="center">（我）母亲</td></tr><tr><td align="center">お母さん</td><td align="center">おかあさん</td><td align="center">母亲</td></tr><tr><td align="center">これ</td><td align="center"></td><td align="center">这，这个</td></tr><tr><td align="center">それ</td><td align="center"></td><td align="center">那，那个</td></tr><tr><td align="center">あれ</td><td align="center"></td><td align="center">那，那个</td></tr><tr><td align="center">どれ</td><td align="center"></td><td align="center">哪个</td></tr><tr><td align="center">何</td><td align="center">なん</td><td align="center">什么</td></tr><tr><td align="center">誰</td><td align="center">だれ</td><td align="center">谁</td></tr><tr><td align="center">何方</td><td align="center">どなた</td><td align="center">哪位</td></tr><tr><td align="center">この</td><td align="center"></td><td align="center">这，这个</td></tr><tr><td align="center">その</td><td align="center"></td><td align="center">那，那个</td></tr><tr><td align="center">あの</td><td align="center"></td><td align="center">那，那个</td></tr><tr><td align="center">どの</td><td align="center"></td><td align="center">哪个</td></tr><tr><td align="center">ええ</td><td align="center"></td><td align="center">是</td></tr><tr><td align="center">長嶋</td><td align="center">ながしま</td><td align="center">长岛</td></tr><tr><td align="center">ロンドン</td><td align="center"></td><td align="center">伦敦</td></tr><tr><td align="center">おいくつ</td><td align="center"></td><td align="center">多大</td></tr><tr><td align="center">～歳</td><td align="center">～さい</td><td align="center">~岁</td></tr></tbody></table><hr><h3 id="1-2-称呼"><a href="#1-2-称呼" class="headerlink" title="1.2 称呼"></a>1.2 称呼</h3><table><thead><tr><th align="center"><div style="width: 80pt">称呼</div></th><th align="center"><div style="width: 120pt">自己的亲属</div></th><th align="center"><div style="width: 80pt">别人的亲属</div></th></tr></thead><tbody><tr><td align="center">祖父&#x2F;外祖父</td><td align="center">祖父　そふ</td><td align="center">おじいさん</td></tr><tr><td align="center">祖母&#x2F;外祖母</td><td align="center">祖母　そぼ</td><td align="center">おばあさん</td></tr><tr><td align="center">父母</td><td align="center">両親　りょうしん</td><td align="center">ご両親　りょうしん</td></tr><tr><td align="center">父亲</td><td align="center">父　ちち</td><td align="center">お父さん　おとうさん</td></tr><tr><td align="center">母亲</td><td align="center">母　はは</td><td align="center">お母さん　おかあさん</td></tr><tr><td align="center">儿子</td><td align="center">息子　むすこ</td><td align="center">息子さん　むすこさん</td></tr><tr><td align="center">女儿</td><td align="center">娘　むすめ</td><td align="center">娘さん　むすめさん　お嬢（じょう）さん</td></tr><tr><td align="center">兄弟&#x2F;兄弟姐妹</td><td align="center">兄弟　きょうだい</td><td align="center">ご兄弟　ごきょうだい</td></tr><tr><td align="center">哥哥</td><td align="center">兄　あに</td><td align="center">お兄さん　おにいさん</td></tr><tr><td align="center">姐姐</td><td align="center">姉　あね</td><td align="center">お姉さん　おねえさん</td></tr><tr><td align="center">弟弟</td><td align="center">弟　おとうと</td><td align="center">弟さん　おとうとさん</td></tr><tr><td align="center">妹妹</td><td align="center">妹　いもうと</td><td align="center">妹さん　いもうとさん</td></tr><tr><td align="center">伯伯&#x2F;叔叔&#x2F;舅舅&#x2F;姑父</td><td align="center">おじ</td><td align="center">おじさん</td></tr><tr><td align="center">伯母&#x2F;婶婶&#x2F;姑姑&#x2F;舅妈</td><td align="center">おば</td><td align="center">おばさん</td></tr></tbody></table><hr><h3 id="1-3-数字-100以下"><a href="#1-3-数字-100以下" class="headerlink" title="1.3 数字(100以下)"></a>1.3 数字(100以下)</h3><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">0</td><td align="center">れい　ぜろ</td><td align="center">10</td><td align="center">じゅう</td><td align="center">20</td><td align="center">にじゅう</td></tr><tr><td align="center">1</td><td align="center">いち</td><td align="center">11</td><td align="center">じゅういち</td><td align="center">30</td><td align="center">さんじゅう</td></tr><tr><td align="center">2</td><td align="center">に</td><td align="center">12</td><td align="center">じゅうに</td><td align="center">40</td><td align="center">よんじゅう</td></tr><tr><td align="center">3</td><td align="center">さん</td><td align="center">13</td><td align="center">じゅうさん</td><td align="center">50</td><td align="center">ごじゅう</td></tr><tr><td align="center">4</td><td align="center">し&#x2F;よん</td><td align="center">14</td><td align="center">じゅうよん</td><td align="center">60</td><td align="center">ろくじゅう</td></tr><tr><td align="center">5</td><td align="center">ご</td><td align="center">15</td><td align="center">じゅうご</td><td align="center">70</td><td align="center">ななじゅう</td></tr><tr><td align="center">6</td><td align="center">ろく</td><td align="center">16</td><td align="center">じゅうろく</td><td align="center">80</td><td align="center">はちじゅう</td></tr><tr><td align="center">7</td><td align="center">しち&#x2F;なな</td><td align="center">17</td><td align="center">じゅうなな</td><td align="center">90</td><td align="center">きゅうじゅう</td></tr><tr><td align="center">8</td><td align="center">はち</td><td align="center">18</td><td align="center">じゅうはち</td><td align="center">100</td><td align="center">ひゃく</td></tr><tr><td align="center">9</td><td align="center">く&#x2F;きゅう</td><td align="center">19</td><td align="center">じゅうきゅ</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">0.1</td><td align="center">れいてんいち</td><td align="center">2&#x2F;3</td><td align="center">さんぶんのに</td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1これ／それ／あれ-は-名-で"><a href="#2-1これ／それ／あれ-は-名-で" class="headerlink" title="2.1これ／それ／あれ　は　名　で"></a>2.1これ／それ／あれ　は　名　で</h3><p>（1）说话人和听话人相隔一段距离，面对面时：</p><ul><li>これ：距说话人较近的事物【说话人的范围、领域内的事物】</li><li>それ：距听话人较近的事物【听话人的范围、领域内的事物】</li><li>あれ：距说话人和听话人都比较远的事物【不属于任何一方范围、领域内的事物】<br>（2）说话人和听话人位于同一位置，面向同一方向时</li><li>これ：距说话人、听话人较近的事物</li><li>それ：距说话人、听话人较远的事物</li><li>あれ：距说话人、听话人更远的事物<br>（3）举例</li><li>これ　は　本　てす。</li><li>それ　は　かばん　です。</li><li>あれ　は　テレビ　です。</li></ul><hr><h3 id="2-2-誰ですか／何ですか。"><a href="#2-2-誰ですか／何ですか。" class="headerlink" title="2.2 誰ですか／何ですか。"></a>2.2 誰ですか／何ですか。</h3><p>不知道是什么人时用”だれ”，不知道是什么事物时用“何”询问，分别相当于汉语的“谁”和“什么”。<br>句尾后续助词“か”。</p><ul><li>それ　は　<strong>何</strong>　ですか。</li><li>おの人　は　<strong>誰</strong>　ですか。</li></ul><p>“何方（どなた）”通常用于对尊长或比自己地位高的人用“どなた何方”询问。</p><ul><li>スミスさん　は　<strong>何方</strong>　ですか。</li></ul><hr><h3 id="2-3-この／その／あの-名-は-名-です"><a href="#2-3-この／その／あの-名-は-名-です" class="headerlink" title="2.3 この／その／あの　名　は　名　です"></a>2.3 この／その／あの　名　は　名　です</h3><p>修饰名词时，要用この／その／あの。其位置表示关系与これ／それ／あれ相同。</p><ul><li><strong>この</strong>　カメラは　スイスの　ですか。</li><li><strong>その</strong>　自転車は　森さんの　です。</li><li><strong>あの</strong>　ノートは　誰の　ですか。</li></ul><hr><h3 id="2-4-どれ／どの"><a href="#2-4-どれ／どの" class="headerlink" title="2.4 どれ／どの"></a>2.4 どれ／どの</h3><p>どれ／どの 是在三个以上的事物中，不能确定是哪一个是所用的疑问句。单独使用时，用“どれ”，修饰名词时用“どの”</p><ul><li>森さんの　かばんは　<strong>どれ</strong>　ですか。</li><li>長嶋さんの　傘は　<strong>どれ</strong>　ですか。</li><li>小野さんの　机は　<strong>どの机</strong>　ですか。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第1课 李さんは　中国人</title>
      <link href="/2022/12/13/japanese/1/"/>
      <url>/2022/12/13/japanese/1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/lessons/1.png"><br>概述：第一课主要学习“～は”，“～です”句型，相当与“是”，以及以及简单的自我介绍和寒暄</p><span id="more"></span><h2 id="1-词汇"><a href="#1-词汇" class="headerlink" title="1. 词汇"></a>1. 词汇</h2><hr><h3 id="1-1-课后词汇"><a href="#1-1-课后词汇" class="headerlink" title="1.1 课后词汇"></a>1.1 课后词汇</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">假名</div></th><th align="center"><div style="width: 80pt">释义</div></th></tr></thead><tbody><tr><td align="center">中国人</td><td align="center">ちゅうごくじん</td><td align="center">中国人</td></tr><tr><td align="center">日本人</td><td align="center">にほんじん</td><td align="center">日本人</td></tr><tr><td align="center">韓国人</td><td align="center">かんこくじん</td><td align="center">韩国人</td></tr><tr><td align="center">アメリカ人</td><td align="center">アメリカ人</td><td align="center">美国人</td></tr><tr><td align="center">フランス人</td><td align="center">フランス人</td><td align="center">法国人</td></tr><tr><td align="center">学生</td><td align="center">がくせい</td><td align="center">学生</td></tr><tr><td align="center">先生</td><td align="center">せんせい</td><td align="center">老师</td></tr><tr><td align="center">留学生</td><td align="center">りゅうがくせい</td><td align="center">留学生</td></tr><tr><td align="center">教授</td><td align="center">きょうじゅ</td><td align="center">教授</td></tr><tr><td align="center">社員</td><td align="center">しゃいん</td><td align="center">职员</td></tr><tr><td align="center">会社員</td><td align="center">かいしゃいん</td><td align="center">公司职员</td></tr><tr><td align="center">店員</td><td align="center">てんいん</td><td align="center">店员</td></tr><tr><td align="center">研修生</td><td align="center">けんしゅうせい</td><td align="center">进修生</td></tr><tr><td align="center">企業</td><td align="center">きぎょう</td><td align="center">企业</td></tr><tr><td align="center">大学</td><td align="center">だいがく</td><td align="center">大学</td></tr><tr><td align="center">父親</td><td align="center">ちち</td><td align="center">（我）父亲</td></tr><tr><td align="center">課長</td><td align="center">かちょう</td><td align="center">科长</td></tr><tr><td align="center">社長</td><td align="center">しゃちょう</td><td align="center">总经理，社长</td></tr><tr><td align="center">出迎え</td><td align="center">でむかえ</td><td align="center">迎接</td></tr><tr><td align="center">あの人</td><td align="center">あのひと</td><td align="center"></td></tr><tr><td align="center">私</td><td align="center">わたし</td><td align="center">我</td></tr><tr><td align="center">貴方</td><td align="center">あなた</td><td align="center">你</td></tr><tr><td align="center">どうも</td><td align="center"></td><td align="center">非常，很</td></tr><tr><td align="center">はい</td><td align="center"></td><td align="center">哎，是</td></tr><tr><td align="center">いいえ</td><td align="center"></td><td align="center">不，不是</td></tr><tr><td align="center">東京大学</td><td align="center">とうきょうだいがく</td><td align="center">东京大学</td></tr><tr><td align="center">北京大学</td><td align="center">ペキンだいがく</td><td align="center">北京大学</td></tr><tr><td align="center">こちらこそ</td><td align="center"></td><td align="center">我才要（请您~）</td></tr><tr><td align="center">ちがいます</td><td align="center"></td><td align="center">不是</td></tr><tr><td align="center">わかりません</td><td align="center"></td><td align="center">不知道</td></tr><tr><td align="center">さん　ちゃん　くん</td><td align="center"></td><td align="center">尊称</td></tr></tbody></table><hr><h3 id="1-2-国家-x2F-语言"><a href="#1-2-国家-x2F-语言" class="headerlink" title="1.2 国家&#x2F;语言"></a>1.2 国家&#x2F;语言</h3><table><thead><tr><th align="center"><div style="width: 80pt">国 国名</div></th><th align="center"><div style="width: 120pt">人</div></th><th align="center"><div style="width: 80pt">语言</div></th></tr></thead><tbody><tr><td align="center">ちゅうごく　中国</td><td align="center">ちゅうごくじん　中国人</td><td align="center">ちゅうごくご　中国語</td></tr><tr><td align="center">にほん　日本</td><td align="center">にほんじん　日本人</td><td align="center">にほんご　日本語</td></tr><tr><td align="center">アメリカ　美国</td><td align="center">アメリカ人　美国人</td><td align="center">えいご　英語</td></tr><tr><td align="center">イタリア　意大利</td><td align="center">イタリア人　意大利人</td><td align="center">イタリア語　意大利语</td></tr><tr><td align="center">インド　印度</td><td align="center">インド人　印度人</td><td align="center">ヒンディー語　印地语</td></tr><tr><td align="center">イギリス　英国</td><td align="center">イギリス人　英国人</td><td align="center">えいご　英語</td></tr><tr><td align="center">オーストラリア　澳大利亚</td><td align="center">オーストラリア人　澳大利亚人</td><td align="center">えいご　英語</td></tr><tr><td align="center">かんこく　韓国</td><td align="center">かんこくじん　韓国人</td><td align="center">かんこくご　韓国語</td></tr><tr><td align="center">スペイン　西班牙</td><td align="center">スペイン人　西班牙人</td><td align="center">スペイン語　西班牙语</td></tr><tr><td align="center">タイ　泰国</td><td align="center">タイ人　泰国人</td><td align="center">タイ語　泰语</td></tr><tr><td align="center">ドイツ　德国</td><td align="center">ドイツ人　德国人</td><td align="center">ドイツ語　德语</td></tr><tr><td align="center">ブラジル　巴西</td><td align="center">ブラジル人　巴西人</td><td align="center">ポルトガル語　葡萄牙语</td></tr><tr><td align="center">フランス　法国</td><td align="center">フランス人　法国人</td><td align="center">フランス語　法语</td></tr><tr><td align="center">ベトナム　越南</td><td align="center">ベトナム人　越南人</td><td align="center">ベトナム語　越南语</td></tr><tr><td align="center">メキシコ　墨西哥</td><td align="center">メキシコ人　墨西哥人</td><td align="center">スペイン語　西班牙语</td></tr><tr><td align="center">ロシア　俄罗斯</td><td align="center">ロシア人　俄罗斯人</td><td align="center">ロシア語　俄语</td></tr><tr><td align="center">がいこく　外国</td><td align="center">がいこくじん　外国人</td><td align="center">がいこくご　外语</td></tr><tr><td align="center"></td><td align="center">たいりく　大陸</td><td align="center"></td></tr><tr><td align="center">アジア　亚洲</td><td align="center">ヨーロッパ　欧洲</td><td align="center">北（きた）アメリカ　　北美洲</td></tr><tr><td align="center">オーストラリア　大洋洲</td><td align="center">アフリカ　非洲</td><td align="center">南（みなみ）アメリカ　南美洲</td></tr></tbody></table><hr><h3 id="1-3-称呼"><a href="#1-3-称呼" class="headerlink" title="1.3 称呼"></a>1.3 称呼</h3><table><thead><tr><th align="center"><div style="width: 80pt"></div></th><th align="center"><div style="width: 120pt">中</div></th><th align="center"><div style="width: 80pt">日</div></th></tr></thead><tbody><tr><td align="center">第一人称</td><td align="center">我</td><td align="center">私（わたし）　僕（ぼく）　俺（おれ）　あたし</td></tr><tr><td align="center">第二人称</td><td align="center">你</td><td align="center">あなた（恋人&#x2F;夫妻）　君（きみ）　お前（おまえ）</td></tr><tr><td align="center">第三人称</td><td align="center">他&#x2F;她</td><td align="center">あの人（ひと）　彼（かれ）　彼女（かのじょ）</td></tr></tbody></table><h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h2><hr><h3 id="2-1【名】は【名】です"><a href="#2-1【名】は【名】です" class="headerlink" title="2.1【名】は【名】です"></a>2.1【名】は【名】です</h3><p>相当于汉语的“是“。”は“是主语部分，”~です“是谓语部分。助词”は“用于提示主题，读作”わ“。</p><ul><li>李さん　<strong>は</strong>　中国人　<strong>です</strong>。</li><li>私　<strong>は</strong>　日本人　<strong>です</strong>。</li><li>わたし　<strong>は</strong>　王　<strong>てす</strong>。</li></ul><hr><h3 id="2-2【名】は【名】では-ありません"><a href="#2-2【名】は【名】では-ありません" class="headerlink" title="2.2【名】は【名】では　ありません"></a>2.2【名】は【名】では　ありません</h3><p>相当于汉语的“~不是~“。”~は“是主语部分，”~です“是谓语部分。助词”は“用于提示主题，<br>读作”わ“。</p><ul><li>森さん　<strong>は</strong>　学生　では　<strong>ありません</strong>。</li></ul><hr><h3 id="2-3【名】は【名】ですか"><a href="#2-3【名】は【名】ですか" class="headerlink" title="2.3【名】は【名】ですか"></a>2.3【名】は【名】ですか</h3><p>（1）相当于汉语的“~是~吗？“。助词か接在句尾表示疑问。日语的问句在句尾不使用“？”。</p><ul><li>あなた　<strong>は</strong>　おのさん　<strong>ですか</strong>。<ul><li>はい，小野です。</li></ul></li><li>キムさん　<strong>は</strong>　中国人　<strong>ですか</strong>。<ul><li>いいえ，中国人<strong>ではありません</strong>。</li></ul></li></ul><p>（2）应答</p><ul><li>キムさん　<strong>は</strong>　中国人　<strong>ですか</strong>。<ul><li>はい，<strong>そうです</strong>。</li><li>いいえ，<strong>ちがいます</strong>。</li></ul></li></ul><hr><h3 id="2-4【名】の【名】"><a href="#2-4【名】の【名】" class="headerlink" title="2.4【名】の【名】"></a>2.4【名】の【名】</h3><p>（1）助词“の”连接名词和名词，表示前面的名词是后面名词从属的机构、国家或属性。</p><ul><li>李さん　は　ＪＣ企画　<strong>の</strong>　社員です。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日本語 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日本語 </tag>
            
            <tag> 标准日语 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
